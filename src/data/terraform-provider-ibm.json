{
  "data": {
    "ibm_account": {
      "name": "ibm_account",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Cloud Foundry data sources",
      "args": [
        {
          "name": "org_guid",
          "description": "(Required, String) The GUID of the IBM Cloud organization. You can retrieve the value from the `ibm_org` data source or by running the `ibmcloud iam orgs --guid` command.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the IBM Cloud account.",
          "args": []
        },
        {
          "name": "account_users",
          "description": "The list of account user's in the account.",
          "args": [
            {
              "name": "id",
              "description": "The user ID of the account user.",
              "args": []
            },
            {
              "name": "email",
              "description": "The email address of the account user.",
              "args": []
            },
            {
              "name": "state",
              "description": "The state of the account user.",
              "args": []
            },
            {
              "name": "role",
              "description": "The Cloud Foundry account role that is assigned to the account user.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_app": {
      "name": "ibm_app",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Cloud Foundry data sources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the app. You can retrieve the value by running the `ibmcloud app list` command in the IBM Cloud CLI.",
          "args": []
        },
        {
          "name": "space_guid",
          "description": "(Required, String) The GUID of the IBM Cloud space where the app is deployed. You can retrieve the value with the `ibm_space` data source or by running the `ibmcloud iam space <space-name> --guid` command in the IBM Cloud CLI.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the app.",
          "args": []
        },
        {
          "name": "memory",
          "description": "The amount of memory, specified in megabytes, that is allocated to the app.",
          "args": []
        },
        {
          "name": "instances",
          "description": "The number of app instances that are deployed.",
          "args": []
        },
        {
          "name": "disk_quota",
          "description": "The maximum amount of disk space that an app instance can use, specified in megabytes.",
          "args": []
        },
        {
          "name": "buildpack",
          "description": "The buildpack that is used by the app. Supported values are: <ul><li>Blank, indicates auto-detection</li><li>A Git URL that points to a buildpack</li><li>The name of an installed buildpack</li></ul>",
          "args": []
        },
        {
          "name": "environment_json",
          "description": "A list of environment variables that the app uses. Environment variables are listed as key-value pairs and do not include system or service variables.",
          "args": []
        },
        {
          "name": "route_guid",
          "description": "The GUIDs of the routes that are assigned to the app.",
          "args": []
        },
        {
          "name": "service_instance_guid",
          "description": "The GUIDs of the service instances that are bound to the app.",
          "args": []
        },
        {
          "name": "package_state",
          "description": "The state of the app package, such as `staged` or `pending`.",
          "args": []
        },
        {
          "name": "state",
          "description": "The state of the app.",
          "args": []
        },
        {
          "name": "health_check_http_endpoint",
          "description": "The endpoint that is used to perform an HTTP health check and determine if the app is healthy.",
          "args": []
        },
        {
          "name": "health_check_type",
          "description": "Type of health check that is performed.",
          "args": []
        },
        {
          "name": "health_check_timeout",
          "description": "The timeout in seconds that the app remains unresponsive before the app is considered to be unhealthy.",
          "args": []
        }
      ]
    },
    "ibm_app_domain_private": {
      "name": "ibm_app_domain_private",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Cloud Foundry data sources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the private domain that is assigned to the app.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the private app domain.",
          "args": []
        }
      ]
    },
    "ibm_app_domain_shared": {
      "name": "ibm_app_domain_shared",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Cloud Foundry data sources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the shared domain.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the shared domain.",
          "args": []
        }
      ]
    },
    "ibm_app_route": {
      "name": "ibm_app_route",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Cloud Foundry data sources",
      "args": [
        {
          "name": "domain_guid",
          "description": "(Required, String) The GUID of the domain that the route belongs to. You can retrieve the value from the `ibm_app_domain_shared` data source.",
          "args": []
        },
        {
          "name": "space_guid",
          "description": "(Required, String) The GUID of the space that the route belongs to. You can retrieve the value from the `ibm_space` data source or by running the `ibmcloud iam space <space-name> --guid` command in the IBM Cloud CLI.",
          "args": []
        },
        {
          "name": "host",
          "description": "(Optional, String) The host name of the route. Required for shared domains.",
          "args": []
        },
        {
          "name": "port",
          "description": "(Optional, String) The port of the route. This value is supported for TCP router group domains only.",
          "args": []
        },
        {
          "name": "path",
          "description": "(Optional, String) The path for a route. Paths must contain 2-128 characters. Paths must start with a forward slash (/). Paths must not contain a question mark (?).",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the route.",
          "args": []
        }
      ]
    },
    "ibm_certificate_manager_certificate": {
      "name": "ibm_certificate_manager_certificate",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Certificate Manager data sources",
      "args": [
        {
          "name": "certificate_manager_instance_id",
          "description": "(Required, String) The CRN of the Certificate Manager service instance.",
          "args": []
        },
        {
          "name": "name",
          "description": "(Required, String) The display name for the certificate.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "algorithm",
          "description": "The algorithm that is used for the certificate.",
          "args": []
        },
        {
          "name": "begins_on",
          "description": "The timestamp when the certificate was created in UNIX epoch time format.",
          "args": []
        },
        {
          "name": "certificate_details",
          "description": "List of certificates for the provided name.",
          "args": [
            {
              "name": "cert_id",
              "description": "The CRN based certificate ID.",
              "args": []
            },
            {
              "name": "name",
              "description": "The name of the certificate.",
              "args": []
            },
            {
              "name": "domains",
              "description": "A list of domains that the certificate is associated with. The first domain is referred to as the primary domain. Any more domains are referred to as secondary domains.",
              "args": []
            },
            {
              "name": "data",
              "description": "The certificate data.",
              "args": [
                {
                  "name": "content",
                  "description": "The content of certificate data, escaped.",
                  "args": []
                },
                {
                  "name": "priv_key",
                  "description": "The private key data, escaped.",
                  "args": []
                },
                {
                  "name": "intermediate",
                  "description": "The intermediate certificate data, escaped.",
                  "args": []
                }
              ]
            }
          ]
        },
        {
          "name": "expires_on",
          "description": "The date when the certificate expires in UNIX epoch time format.",
          "args": []
        },
        {
          "name": "has_previous",
          "description": "If set to **true**, the certificate has a previous version.",
          "args": []
        },
        {
          "name": "id",
          "description": "The ID of the certificate that is managed in Certificate Manager. The ID is composed of `<certificate_manager_instance_ID>:<certificate_ID>`.",
          "args": []
        },
        {
          "name": "issuer",
          "description": "The issuer of the certificate.",
          "args": []
        },
        {
          "name": "issuance_info",
          "description": "The issuance information of the certificate.",
          "args": [
            {
              "name": "status",
              "description": "The status of the certificate.",
              "args": []
            },
            {
              "name": "ordered_on",
              "description": "The date when the certificate was ordered.",
              "args": []
            },
            {
              "name": "code",
              "description": "The code of the certificate.",
              "args": []
            },
            {
              "name": "additional_info",
              "description": "Any more information for the certificate.",
              "args": []
            }
          ]
        },
        {
          "name": "imported",
          "description": "If set to **true**, the certificate is imported.",
          "args": []
        },
        {
          "name": "key_algorithm",
          "description": "The key algorithm of the certificate.",
          "args": []
        },
        {
          "name": "serial_number",
          "description": "The serial number of the certificate.",
          "args": []
        },
        {
          "name": "status",
          "description": "The status of the certificate.",
          "args": []
        }
      ]
    },
    "ibm_certificate_manager_certificates": {
      "name": "ibm_certificate_manager_certificates",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Certificate Manager data sources",
      "args": [
        {
          "name": "certificate_manager_instance_id",
          "description": "(Required, String) The CRN of the Certificate Manager service instance.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "algorithm",
          "description": "The Algorithm of a certificate.",
          "args": []
        },
        {
          "name": "begins_on",
          "description": "The creation date of the certificate in UNIX epoch time.",
          "args": []
        },
        {
          "name": "domains",
          "description": "An array of valid domains for the issued certificate. The first domain is the primary domain. extra domains are secondary domains.",
          "args": []
        },
        {
          "name": "expires_on",
          "description": "The expiration date of the certificate in Unix epoch time.",
          "args": []
        },
        {
          "name": "has_previous",
          "description": "Indicates whether a certificate has a previous version.",
          "args": []
        },
        {
          "name": "key_algorithm",
          "description": "The Key Algorithm of a certificate.",
          "args": []
        },
        {
          "name": "name",
          "description": "The display name of the certificate.",
          "args": []
        },
        {
          "name": "id",
          "description": "The ID of the certificate that is managed in Certificate Manager. The ID is composed of `<certificate_manager_instance_ID>:<certificate_ID>`.",
          "args": []
        },
        {
          "name": "issuer",
          "description": "The issuer of the certificate.",
          "args": []
        },
        {
          "name": "issuance_info",
          "description": "The issuance information of a certificate.",
          "args": [
            {
              "name": "status",
              "description": "The status of a certificate.",
              "args": []
            },
            {
              "name": "ordered_on",
              "description": "The certificate ordered date.",
              "args": []
            },
            {
              "name": "code",
              "description": "The code of a certificate.",
              "args": []
            },
            {
              "name": "additional_info",
              "description": "The extra information of a certificate.",
              "args": []
            }
          ]
        },
        {
          "name": "imported",
          "description": "Indicates whether a certificate has imported or not.",
          "args": []
        },
        {
          "name": "serial_number",
          "description": "The serial number of a certificate.",
          "args": []
        },
        {
          "name": "status",
          "description": "The status of a certificate.",
          "args": []
        }
      ]
    },
    "ibm_cis": {
      "name": "ibm_cis",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Internet Services data sources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of an IBM Cloud Internet Services instance.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The CRN of your instance.",
          "args": []
        },
        {
          "name": "guid",
          "description": "The unique identifier of the instance.",
          "args": []
        },
        {
          "name": "plan",
          "description": "The service plan for the instance.",
          "args": []
        },
        {
          "name": "location",
          "description": "The location of your instance.",
          "args": []
        },
        {
          "name": "status",
          "description": "The status of your instance.",
          "args": []
        }
      ]
    },
    "ibm_cis_certificates": {
      "name": "ibm_cis_certificates",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Internet Services data sources",
      "args": [
        {
          "name": "cis_id",
          "description": "(Required, String) The ID of the IBM Cloud Internet Services instance.",
          "args": []
        },
        {
          "name": "domain_id",
          "description": "(Required, String) The ID of the domain.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "certificates",
          "description": "The collection of the certificates.",
          "args": [
            {
              "name": "id",
              "description": "It is a combination of `<certificate_id>:<domain_id>:<cis_id>`.",
              "args": []
            },
            {
              "name": "certificate_id",
              "description": "The certificate ID.",
              "args": []
            },
            {
              "name": "type",
              "description": "The certificate type.",
              "args": []
            },
            {
              "name": "hosts",
              "description": "The hosts of the ordered certificates.",
              "args": []
            },
            {
              "name": "status",
              "description": "The certificate status.",
              "args": []
            },
            {
              "name": "primary_certificate",
              "description": "The primary certificate ID.",
              "args": []
            },
            {
              "name": "certificates",
              "description": "The list of certificates associated with the ordered certificate.",
              "args": [
                {
                  "name": "id",
                  "description": "The certificate ID.",
                  "args": []
                },
                {
                  "name": "hosts",
                  "description": "The hosts of the associated with the certificates.",
                  "args": []
                },
                {
                  "name": "status",
                  "description": "The certificate status.",
                  "args": []
                }
              ]
            }
          ]
        }
      ]
    },
    "ibm_cis_custom_certificates": {
      "name": "ibm_cis_custom_certificates",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Internet Services data sources",
      "args": [],
      "attrs": [
        {
          "name": "cis_id",
          "description": "The ID of the IBM Cloud Internet Services instance.",
          "args": []
        },
        {
          "name": "domain_id",
          "description": "The ID of the domain to change custom certificate.",
          "args": []
        },
        {
          "name": "custom_certificates",
          "description": "The collection of the custom certificates.",
          "args": [
            {
              "name": "id",
              "description": "It is a combination of `<custom_cert_id>:<domain_id>:<cis_id>`.",
              "args": []
            },
            {
              "name": "custom_cert_id",
              "description": "The custom certificate ID.",
              "args": []
            },
            {
              "name": "bundle_method",
              "description": "The custom certificate bundle method.",
              "args": []
            },
            {
              "name": "type",
              "description": "The certificate type.",
              "args": []
            },
            {
              "name": "hosts",
              "description": "The list of hosts that are uploaded in a certificate.",
              "args": []
            },
            {
              "name": "priority",
              "description": "The custom certificate priority.",
              "args": []
            },
            {
              "name": "status",
              "description": "The custom certificate status.",
              "args": []
            },
            {
              "name": "issuer",
              "description": "The custom certificate issuer.",
              "args": []
            },
            {
              "name": "signature",
              "description": "The custom certificate signature.",
              "args": []
            },
            {
              "name": "expires_on",
              "description": "The expiry date and time of the certificate.",
              "args": []
            },
            {
              "name": "uploaded_on",
              "description": "The uploaded date and time of the certificate.",
              "args": []
            },
            {
              "name": "modified_on",
              "description": "The modified date and time of the certificate.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_cis_custom_pages": {
      "name": "ibm_cis_custom_pages",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Internet Services data sources",
      "args": [],
      "attrs": [
        {
          "name": "created_on",
          "description": "Created date and time of the custom page.",
          "args": []
        },
        {
          "name": "cis_id",
          "description": "The ID of the CIS service instance.",
          "args": []
        },
        {
          "name": "description",
          "description": "The description of the custom page.",
          "args": []
        },
        {
          "name": "domain_id",
          "description": "The domain ID to change custom page.",
          "args": []
        },
        {
          "name": "id",
          "description": "The custom page ID. It is a combination of `<page_id>, <domain_id>, <cis_id>` attributes concatenated with `:`.",
          "args": []
        },
        {
          "name": "modified_on",
          "description": "Modified date and time of the custom page.",
          "args": []
        },
        {
          "name": "page_id ",
          "description": "The custom page identifier. Valid values are `basic_challenge`, `waf_challenge`, `waf_block`, `ratelimit_block`, `country_challenge`, `ip_block`, `under_attack`, `500_errors`, `1000_errors`, `always_online`.",
          "args": []
        },
        {
          "name": "preview_target",
          "description": "The target custom page.",
          "args": []
        },
        {
          "name": "required_tokens",
          "description": "The custom page required token which is expected from the URL page.",
          "args": []
        },
        {
          "name": "state",
          "description": "The custom page state. This is set default when there is an empty URL and can customize when URL is set with some URL.",
          "args": []
        },
        {
          "name": "url",
          "description": "The URL for custom page settings. By default URL is set with empty string `\"\"`. Setting a duplicate empty string throws an error.",
          "args": []
        }
      ]
    },
    "ibm_cis_dns_record": {
      "name": "ibm_cis_dns_record",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Internet Services data sources",
      "args": [
        {
          "name": "domain_id",
          "description": "(Required, String) The resource domain ID of the DNS on which zones were created.",
          "args": []
        },
        {
          "name": "cis_id",
          "description": "(Required, String) The ID of the IBM Cloud Internet Services instance on which zones were created.",
          "args": []
        },
        {
          "name": "file",
          "description": "(Optional, String) The file that DNS records to be exported.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "cis_dns_records",
          "description": "The list of DNS records.",
          "args": [
            {
              "name": "id",
              "description": "The ID which consists of record id, zone id and CRN with `:` separator .",
              "args": []
            },
            {
              "name": "record_id",
              "description": "The DNS record identifier.",
              "args": []
            },
            {
              "name": "name",
              "description": "The name of a DNS record.",
              "args": []
            },
            {
              "name": "proxiable",
              "description": "Whether the record has option to set proxied.",
              "args": []
            },
            {
              "name": "proxied",
              "description": "Whether the record gets CIS's origin protection; defaults to `false`.",
              "args": []
            },
            {
              "name": "created_on",
              "description": "The created date of the DNS record.",
              "args": []
            },
            {
              "name": "modified_on",
              "description": "The modified date of the DNS record.",
              "args": []
            },
            {
              "name": "zone_name",
              "description": "The DNS zone name.",
              "args": []
            },
            {
              "name": "type",
              "description": "The type of the DNS record to be created. Supported Record types are `A`, `AAAA`, `CNAME`, `LOC`, `TXT`, `MX`, `SRV`, `SPF`, `NS`, `CAA`.",
              "args": []
            },
            {
              "name": "ttl",
              "description": "TTL of the record. It should be automatic that is `ttl=1`, if the record is proxied. Terraform provider takes `ttl` in unit seconds.",
              "args": []
            },
            {
              "name": "priority",
              "description": "The priority of the record. Mandatory field for `SRV` record type.",
              "args": []
            },
            {
              "name": "data",
              "description": "Map of attributes that constitute the record value. Only for `LOC`, `CAA` and `SRV` record types.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_cis_domain": {
      "name": "ibm_cis_domain",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Internet Services data sources",
      "args": [
        {
          "name": "domain",
          "description": "(Required, String) The DNS domain name that is added and managed for an IBM Cloud Internet Services instance.",
          "args": []
        },
        {
          "name": "cis_id",
          "description": "(Required, String) The ID of the IBM Cloud Internet Services instance.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of your domain.",
          "args": []
        },
        {
          "name": "paused",
          "description": "If set to **true**, network traffic to this domain is paused. If set to **false**, network traffic to this domain is permitted. The default value is **false**.",
          "args": []
        },
        {
          "name": "status",
          "description": "The status of your domain. Valid values are `active`, `pending`, `initializing`, `moved`, `deleted`, and `deactivated`. After creation, the status remains pending until the DNS Registrar is updated with the CIS name servers, exported in the ‘name_servers’ variable.",
          "args": []
        },
        {
          "name": "name_servers",
          "description": "The IBM Cloud Internet Services assigned name servers, to be passed by interpolation to the resource dns_domain_registration_nameservers.",
          "args": []
        },
        {
          "name": "original_name_servers",
          "description": "The name servers from when the Domain was initially registered with the DNS Registrar.",
          "args": []
        }
      ]
    },
    "ibm_cis_edge_functions_actions": {
      "name": "ibm_cis_edge_functions_actions",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Internet Services data sources",
      "args": [
        {
          "name": "domain_id",
          "description": "(Required, String) The ID of the domain to add an edge functions action.",
          "args": []
        },
        {
          "name": "cis_id",
          "description": "(Required, String) The ID of the IBM Cloud Internet Services instance.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "created_on",
          "description": "An action created date.",
          "args": []
        },
        {
          "name": "etag",
          "description": "An action E-Tag.",
          "args": []
        },
        {
          "name": "handler",
          "description": "An action handler methods.",
          "args": []
        },
        {
          "name": "modified_on",
          "description": "An action modified date.",
          "args": []
        },
        {
          "name": "routes",
          "description": "An action route detail.",
          "args": [
            {
              "name": "action_name",
              "description": "An action route detail.",
              "args": []
            },
            {
              "name": "pattern_url",
              "description": "The Route pattern. It is a domain name in which the action is performed.",
              "args": []
            },
            {
              "name": "request_limit_fail_open",
              "description": "An action request limit fail open.",
              "args": []
            },
            {
              "name": "trigger_id",
              "description": "The Trigger ID of an action.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_cis_edge_functions_triggers": {
      "name": "ibm_cis_edge_functions_triggers",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Internet Services data sources",
      "args": [
        {
          "name": "domain_id",
          "description": "(Required, String) The ID of the domain to add an edge functions triggers.",
          "args": []
        },
        {
          "name": "cis_id",
          "description": "(Required, String) The ID of the IBM Cloud Internet Services instance.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "action_name",
          "description": "An action script for execution.",
          "args": []
        },
        {
          "name": "pattern_url",
          "description": "The Route pattern. It is a domain name in which the action is performed.",
          "args": []
        },
        {
          "name": "request_limit_fail_open",
          "description": "An action request limit fail open.",
          "args": []
        },
        {
          "name": "trigger_id",
          "description": "The route ID of an action trigger.",
          "args": []
        }
      ]
    },
    "ibm_cis_firewall": {
      "name": "ibm_cis_firewall",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Internet Services data sources",
      "args": [
        {
          "name": "cis_id",
          "description": "(Required, String) The ID of the IBM Cloud Internet Services instance where you want to create the firewall.",
          "args": []
        },
        {
          "name": "domain_id",
          "description": "(Required, String) The ID of the domain where you want to add the lock down.",
          "args": []
        },
        {
          "name": "firewall_type",
          "description": "(Required, String) The type of firewall that you want to create for your domain. Supported values are `lockdowns`, `access_rules`, and `ua_rules`. Consider the following information when choosing your firewall type: <ul><li><strong><code>access_rules</code></strong>: Access rules allow, challenge, or block requests to your website. You can apply access rules to one domain only or all domains in the same service instance.</li><li><strong><code>ua_rules</code></strong>: Apply firewall rules only if the user agent that is used by the client matches the user agent that you defined. </li><li><strong><code>`lockdowns`</code></strong>: Allow access to your domain for specific IP addresses or IP address ranges only. If you choose this firewall type, you must define your firewall rules in the `lockdown` input parameter.</li></ul>",
          "args": []
        },
        {
          "name": "lockdown",
          "args": [
            {
              "name": "paused",
              "description": "(Required, Boolean) If set to **true**, the firewall rule is disabled. If set to **false**, the firewall rule is enabled.",
              "args": []
            }
          ]
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The ID of the record. The ID is composed of `<firewall_type>,<lockdown_id/access_rule_id/ua_rule_id>,<domain_ID>,<cis_crn>`. Attributes are concatenated with `:`.",
          "args": []
        },
        {
          "name": "lockdown",
          "args": [
            {
              "name": "lockdown_id",
              "description": "List of lock down to be created. The data describing a lock down rule.",
              "args": []
            },
            {
              "name": "description",
              "description": "A description for your firewall rule.",
              "args": []
            },
            {
              "name": "priority",
              "description": "The priority of the firewall rule. A low number is associated with a high priority.",
              "args": []
            },
            {
              "name": "urls",
              "description": "A list of URLs that you want to include in your firewall rule. You can specify wildcard URLs. The URL pattern is escaped before use.",
              "args": []
            },
            {
              "name": "configurations",
              "description": "A list of IP address or CIDR ranges that you want to allow access to the URLs that you defined in `lockdown.urls`.",
              "args": [
                {
                  "name": "target",
                  "description": "Specify if you want to target an `IP` or `ip_range`.",
                  "args": []
                },
                {
                  "name": "value",
                  "description": "The IP addresses or CIDR.",
                  "args": []
                }
              ]
            }
          ]
        },
        {
          "name": "access_rule",
          "description": "Create the data describing the access rule.",
          "args": [
            {
              "name": "rule_id",
              "description": "The access rule ID.",
              "args": []
            },
            {
              "name": "notes",
              "description": "The free text for notes.",
              "args": []
            },
            {
              "name": "mode",
              "description": "The mode of access rule. The valid modes are `block`, `challenge`, `whitelist`, `js_challenge`.",
              "args": []
            },
            {
              "name": "configuration",
              "description": "The Configuration of firewall. (Maximum items is 1)",
              "args": [
                {
                  "name": "target",
                  "description": "The request property to target. Valid values are `ip`, `ip_range`, `asn`, `country`.",
                  "args": []
                },
                {
                  "name": "value",
                  "description": "IP address or CIDR or Autonomous or Country code.",
                  "args": []
                }
              ]
            }
          ]
        },
        {
          "name": "ua_rule",
          "description": "Create the data describing the user agent rule.",
          "args": [
            {
              "name": "ua_rule_id",
              "description": "The user agent rule ID.",
              "args": []
            },
            {
              "name": "description ",
              "description": "The free text for description.",
              "args": []
            },
            {
              "name": "mode",
              "description": "The mode of access rule. The valid modes are `block`, `challenge`,  `js_challenge`.",
              "args": []
            },
            {
              "name": "paused",
              "description": "Whether the rule is currently disabled.",
              "args": []
            },
            {
              "name": "configuration",
              "description": "The Configuration of firewall.",
              "args": [
                {
                  "name": "target",
                  "description": "The request property to target. Valid values are `ua`.",
                  "args": []
                },
                {
                  "name": "value",
                  "description": "The exact User Agent string to match the rule.",
                  "args": []
                }
              ]
            }
          ]
        }
      ]
    },
    "ibm_cis_global_load_balancers": {
      "name": "ibm_cis_global_load_balancers",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Internet Services data sources",
      "args": [
        {
          "name": "domain_id",
          "description": "(Required, String) The ID of the domain to retrieve the load balancers from.",
          "args": []
        },
        {
          "name": "cis_id",
          "description": "(Required, String) The resource CRN ID of the CIS on which zones were created.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The Load balancer ID, domain ID and CRN. For example, `id:domain-id:crn`.",
          "args": []
        },
        {
          "name": "description",
          "description": "Free text description.",
          "args": []
        },
        {
          "name": "default_pool_ids",
          "description": "A list of pool IDs ordered by their failover priority. Used whenever region or pop pools are not defined.",
          "args": []
        },
        {
          "name": "fallback_pool_id",
          "description": "The pool ID to use when all other pools are detected as unhealthy.",
          "args": []
        },
        {
          "name": "glb_id",
          "description": "The Load balancer ID.",
          "args": []
        },
        {
          "name": "enabled",
          "description": "Indicates if the load balancer is enabled or not. Region and pop pools are not currently implemented in this version of the provider.",
          "args": []
        },
        {
          "name": "name",
          "description": "The DNS name to associate with the load balancer. This can be a hostname, for example, `www` or the fully qualified name `www.example.com`, or `example.com`.",
          "args": []
        },
        {
          "name": "proxied",
          "description": "Whether the hostname gets IBM's origin protection. Defaults to `false`.",
          "args": []
        },
        {
          "name": "pop_pools",
          "description": "A set containing mappings of IBM Point-of-Presence (PoP) identifiers to a list of pool IDs (ordered by their failover priority) for the PoP (datacenter). This feature is only available to enterprise customers.",
          "args": [
            {
              "name": "pop",
              "description": "A 3-letter code for the Point-of-Presence. Multiple entries should not be specified with the same PoP.",
              "args": []
            },
            {
              "name": "pool_ids",
              "description": "A list of pool IDs in failover priority to use for traffic reaching the given PoP.",
              "args": []
            }
          ]
        },
        {
          "name": "region_pools",
          "description": "A set containing mappings of region or country codes to a list of pool IDs (ordered by their failover priority) for the given region.",
          "args": [
            {
              "name": "region",
              "description": "A region code. Multiple entries is not allowed with the same region.",
              "args": []
            },
            {
              "name": "pool_ids",
              "description": "A list of pool IDs in failover priority to use in the given region.",
              "args": []
            }
          ]
        },
        {
          "name": "session_affinity",
          "description": "Associates all requests coming from an end-user with a single origin. IBM will set a cookie on the initial response to the client, such that consequent requests with the cookie in the request will go to the same origin, as long as it is available.",
          "args": []
        },
        {
          "name": "ttl",
          "description": "Time to live (TTL) of the DNS entry for the IP address returned by this load balancer.",
          "args": []
        }
      ]
    },
    "ibm_cis_healthchecks": {
      "name": "ibm_cis_healthchecks",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Internet Services data sources",
      "args": [
        {
          "name": "cis_id",
          "description": "(Required, String) The resource CRN ID of the IBM Cloud Internet Services on which zones were created.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "allow_insecure",
          "description": "Do not validate the certificate when health check uses `HTTPS`.",
          "args": []
        },
        {
          "name": "created_on",
          "description": "The RFC3339 timestamp of when the load balancer monitor was created.",
          "args": []
        },
        {
          "name": "description",
          "description": "Free text description.",
          "args": []
        },
        {
          "name": "expected_body",
          "description": "The requested body.",
          "args": []
        },
        {
          "name": "expected_codes",
          "description": "The expected HTTP response code or code range of the health check. For example, `2xx`.",
          "args": []
        },
        {
          "name": "headers",
          "description": "The health check header.",
          "args": []
        },
        {
          "name": "id",
          "description": "The load balancer monitor ID and CRN. For example, `monitor_id:crn`.",
          "args": []
        },
        {
          "name": "interval",
          "description": "The interval between each health check. Shorter intervals improve failover time, but can increase load on the origins as you check from multiple locations. The default value is `60`.",
          "args": []
        },
        {
          "name": "modified_on",
          "description": "The RFC3339 timestamp of when the load balancer monitor was last modified.",
          "args": []
        },
        {
          "name": "monitor_id",
          "description": "The load balancer monitor ID.",
          "args": []
        },
        {
          "name": "method",
          "description": "The HTTP method to use for the health check.",
          "args": []
        },
        {
          "name": "path",
          "description": "The endpoint path to health check.",
          "args": []
        },
        {
          "name": "port",
          "description": "The TCP port to use for the health check.",
          "args": []
        },
        {
          "name": "retries",
          "description": "The number of retries to attempt in case of a timeout before marking the origin as unhealthy. Retries are attempted immediately. The default value is `2`.",
          "args": []
        },
        {
          "name": "timeout",
          "description": "The timeout (in seconds) before marking the health check as failed. The default value is `5`.",
          "args": []
        },
        {
          "name": "type",
          "description": "The protocol to use for the health check. Currently supported protocols are `HTTP`, `HTTPS`, and `TCP`. The default value is `HTTP`.",
          "args": []
        },
        {
          "name": "follow_redirects",
          "description": "Follow redirects if returned by the origin.",
          "args": []
        }
      ]
    },
    "ibm_cis_ip_addresses": {
      "name": "ibm_cis_ip_addresses",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Internet Services data sources",
      "args": [],
      "attrs": [
        {
          "name": "ipv4_cidrs",
          "description": "The IPv4 address ranges that the CIS proxy uses and that you can reference to configure and allowed IP addresses in firewalls, network ACLs, and security groups.",
          "args": []
        },
        {
          "name": "ipv6_cidrs",
          "description": "The IPv6 address ranges that the CIS proxy uses and that you can reference to configure and allowed IP addresses in firewalls, network ACLs, and security groups.",
          "args": []
        }
      ]
    },
    "ibm_cis_origin_pools": {
      "name": "ibm_cis_origin_pools",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Internet Services data sources",
      "args": [
        {
          "name": "cis_id",
          "description": "(Required, String) The ID of the CIS service instance.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "created_on",
          "description": "Created RFC3339 timestamp of the Load Balancer.",
          "args": []
        },
        {
          "name": "description",
          "description": "The description of the origin pool.",
          "args": []
        },
        {
          "name": "enabled",
          "description": "The default value is `enabled`. Disabled pools do not receive traffic, and are excluded from health checks. Disabling a pool cause any Load Balancers using it to failover to the next pool (if any).",
          "args": []
        },
        {
          "name": "healthy",
          "description": "The status of the origin pool.",
          "args": []
        },
        {
          "name": "id",
          "description": "The ID of the Load Balancer pool.",
          "args": []
        },
        {
          "name": "modified_on",
          "description": "Last modified RFC3339 timestamp of the Load Balancer.",
          "args": []
        },
        {
          "name": "monitor",
          "description": "The ID of the monitor to use for health checking origins within this pool.",
          "args": []
        },
        {
          "name": "name",
          "description": "A short name `tag` for the pool. Only alphanumeric characters, hyphens, and underscores are allowed.",
          "args": []
        },
        {
          "name": "notification_email",
          "description": "The Email address to send health status notifications. This can be an individual mailbox or a mailing list.",
          "args": []
        },
        {
          "name": "origins",
          "description": "The list of origins within this pool. Traffic directed at this pool is balanced across all currently healthy origins, provided the pool itself is healthy. Description of it's complex value is stated.",
          "args": [
            {
              "name": "name",
              "description": "A human-identifiable name of the origin.",
              "args": []
            },
            {
              "name": "address",
              "description": "The IP address `IPv4` or `IPv6` of the origin, or the publicly addressable hostname. Hostnames entered is resolved directly to the origin, and not be a hostname proxied by CIS.",
              "args": []
            },
            {
              "name": "enabled",
              "description": "The default value is `enable`. Disabled origins do not receive traffic, and are excluded from health checks. The origin is disabled only for the current pool.",
              "args": []
            },
            {
              "name": "weight",
              "description": "The weight of the origin pool.",
              "args": []
            },
            {
              "name": "healthy",
              "description": "The status of origins health.",
              "args": []
            },
            {
              "name": "disabled_at",
              "description": "The disabled date and time.",
              "args": []
            },
            {
              "name": "failure_reason",
              "description": "The failure reason.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_cis_page_rules": {
      "name": "ibm_cis_page_rules",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Internet Services data sources",
      "args": [
        {
          "name": "cis_id",
          "description": "(Required, String) The ID of the IBM Cloud Internet Services instance .",
          "args": []
        },
        {
          "name": "domain_id",
          "description": "(Required, String) The ID of the domain.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "cis_page_rules",
          "description": "The page rules detail.",
          "args": [
            {
              "name": "rule_id",
              "description": "The page rule ID.",
              "args": []
            },
            {
              "name": "priority",
              "description": "The priority of the page rule.",
              "args": []
            },
            {
              "name": "status",
              "description": "The status of the page rule. Default value is `active`.",
              "args": []
            },
            {
              "name": "targets",
              "description": "The targets, of the added rule.",
              "args": [
                {
                  "name": "target",
                  "description": "The target type. Valid value is `url`.",
                  "args": []
                },
                {
                  "name": "constraint",
                  "description": "The constraint of the page rule.",
                  "args": [
                    {
                      "name": "operator",
                      "description": "The operation on page rule. Valid value is `matches`.",
                      "args": []
                    },
                    {
                      "name": "value",
                      "description": "The URL value on the applied page rule.",
                      "args": []
                    }
                  ]
                }
              ]
            },
            {
              "name": "actions",
              "description": "The actions to be performed on the URL.",
              "args": []
            },
            {
              "name": "id",
              "description": "The action ID. Valid values are `page rule action field map from UI` to `API CF-UI map API`).",
              "args": [
                {
                  "name": "disable_security",
                  "description": "The action conflicts with `email_obfuscation`, `server_side_exclude`, `waf`.",
                  "args": []
                },
                {
                  "name": "always_online",
                  "description": "The action conflicts with all other settings.",
                  "args": []
                },
                {
                  "name": "forwarding_url",
                  "description": "The action conflicts with all other settings.",
                  "args": []
                },
                {
                  "name": "always_use_https",
                  "description": "The action conflicts with all other settings.",
                  "args": []
                },
                {
                  "name": "ssl",
                  "description": "The TLS settings.",
                  "args": []
                },
                {
                  "name": "browser_cache_ttl",
                  "description": "The browser cache TTL.",
                  "args": []
                },
                {
                  "name": "security_level",
                  "description": "The security level.",
                  "args": []
                },
                {
                  "name": "cache_level",
                  "description": "The cache level.",
                  "args": []
                },
                {
                  "name": "edge_cache_ttl",
                  "description": "The edge cache TTL.",
                  "args": []
                },
                {
                  "name": "bypass_cache_on_cookie",
                  "description": "The bypass cache on cookie.",
                  "args": []
                },
                {
                  "name": "browser_check",
                  "description": "The browser integrity check.",
                  "args": []
                },
                {
                  "name": "server_side_exclude",
                  "description": "The server side excludes.",
                  "args": []
                },
                {
                  "name": "server_stale_content",
                  "description": "The server stale content.",
                  "args": []
                },
                {
                  "name": "email_obfuscation",
                  "description": "The Email obfuscation.",
                  "args": []
                },
                {
                  "name": "automatic_https_rewrites",
                  "description": "The automatic HTTPS rewrites.",
                  "args": []
                },
                {
                  "name": "opportunistic_encryption",
                  "description": "The opportunistic encryption.",
                  "args": []
                },
                {
                  "name": "ip_geolocation",
                  "description": "The IP geography location header.",
                  "args": []
                },
                {
                  "name": "explicit_cache_control",
                  "description": "The origin cache control.",
                  "args": []
                },
                {
                  "name": "cache_deception_armor",
                  "description": "The cache deception armor.",
                  "args": []
                },
                {
                  "name": "waf",
                  "description": "The Web Application Firewall.",
                  "args": []
                },
                {
                  "name": "host_header_override",
                  "description": "The host header override.",
                  "args": []
                },
                {
                  "name": "resolve_override",
                  "description": "The resolve override.",
                  "args": []
                },
                {
                  "name": "cache_on_cookie",
                  "description": "The cache on cookie.",
                  "args": []
                },
                {
                  "name": "disable_apps",
                  "description": "The disable apps.",
                  "args": []
                },
                {
                  "name": "disable_performance",
                  "description": "The disable performance.",
                  "args": []
                },
                {
                  "name": "image_load_optimization",
                  "description": "The image load optimization.",
                  "args": []
                },
                {
                  "name": "origin_error_page_pass_thru",
                  "description": "The origin error page pass-through.",
                  "args": []
                },
                {
                  "name": "response_buffering",
                  "description": "The response buffering.",
                  "args": []
                },
                {
                  "name": "image_size_optimization",
                  "description": "The image size optimization.",
                  "args": []
                },
                {
                  "name": "script_load_optimization",
                  "description": "The script load optimization.",
                  "args": []
                },
                {
                  "name": "true_client_ip_header",
                  "description": "The true client IP header.",
                  "args": []
                },
                {
                  "name": "sort_query_string_for_cache",
                  "description": "The sort query string.",
                  "args": []
                }
              ]
            },
            {
              "name": "value",
              "description": "The values for corresponding actions.",
              "args": [
                {
                  "name": "always_online",
                  "description": "The valid values are `on`, `off`.",
                  "args": []
                },
                {
                  "name": "ssl",
                  "description": "The valid values are `off`, `flexible`, `full`, `strict`, `origin_pull`.",
                  "args": []
                },
                {
                  "name": "browser_cache_ttl",
                  "description": "The valid values are `0, 1800, 3600, 7200, 10800, 14400, 18000, 28800, 43200, 57600, 72000, 86400, 172800, 259200, 345600, 432000, 691200, 1382400, 2073600, 2678400, 5356800, 16070400, 31536000`.",
                  "args": []
                },
                {
                  "name": "security_level",
                  "description": "The valid values are `disable_security`, `always_use_https`.",
                  "args": []
                },
                {
                  "name": "cache_level",
                  "description": "The valid values are `bypass`, `aggressive`, `basic`, `simplified`, `cache_everything`.",
                  "args": []
                },
                {
                  "name": "edge_cache_ttl",
                  "description": "The valid values are `0, 30, 60, 300, 600, 1200, 1800, 3600, 7200, 10800, 14400, 18000, 28800, 43200, 57600, 72000, 86400, 172800, 259200, 345600, 432000, 518400, 604800, 1209600, 2419200`.",
                  "args": []
                },
                {
                  "name": "bypass_cache_on_cookie",
                  "description": "The valid values are `cookie tags`.",
                  "args": []
                },
                {
                  "name": "browser_check",
                  "description": "The valid values are `on`, `off`.",
                  "args": []
                },
                {
                  "name": "server_side_exclude",
                  "description": "The valid values are `on`, `off`.",
                  "args": []
                },
                {
                  "name": "server_stale_content",
                  "description": "The valid values are `on`, `off`.",
                  "args": []
                },
                {
                  "name": "email_obfuscation",
                  "description": "The valid values are `on`, `off`.",
                  "args": []
                },
                {
                  "name": "automatic_https_rewrites",
                  "description": "The valid values are `on`, `off`.",
                  "args": []
                },
                {
                  "name": "opportunistic_encryption",
                  "description": "The valid values are `on`, `off`.",
                  "args": []
                },
                {
                  "name": "ip_geolocation",
                  "description": "The valid values are `on`, `off`.",
                  "args": []
                },
                {
                  "name": "explicit_cache_control",
                  "description": "The valid values are `on`, `off`.",
                  "args": []
                },
                {
                  "name": "cache_deception_armor",
                  "description": "The valid values are `on`, `off`.",
                  "args": []
                },
                {
                  "name": "waf",
                  "description": "The valid values are `on`, `off`.",
                  "args": []
                },
                {
                  "name": "host_header_override",
                  "description": "The header value.",
                  "args": []
                },
                {
                  "name": "resolve_override",
                  "description": "The value for resolving URL override.",
                  "args": []
                },
                {
                  "name": "cache_on_cookie",
                  "description": "The cookie value.",
                  "args": []
                },
                {
                  "name": "disable_apps",
                  "description": "The value is not required.",
                  "args": []
                },
                {
                  "name": "disable_performance",
                  "description": "The value is not required.",
                  "args": []
                },
                {
                  "name": "image_load_optimization",
                  "description": "The valid values are `on`, `off`.",
                  "args": []
                },
                {
                  "name": "origin_error_page_pass_thru",
                  "description": "The valid values are `on`, `off`.",
                  "args": []
                },
                {
                  "name": "response_buffering",
                  "description": "The valid values are `on`, `off`.",
                  "args": []
                },
                {
                  "name": "image_size_optimization",
                  "description": "The valid values are `on`, `off`.",
                  "args": []
                },
                {
                  "name": "script_load_optimization",
                  "description": "The valid values are `off`, `lossless`, `lossy`.",
                  "args": []
                },
                {
                  "name": "true_client_ip_header",
                  "description": "The valid values are `on`, `off`.",
                  "args": []
                },
                {
                  "name": "sort_query_string_for_cache",
                  "description": "The valid values are `on`, `off`.",
                  "args": []
                }
              ]
            },
            {
              "name": "url",
              "description": "The forward rule URL, a required attribute for `forwarding_url` action.",
              "args": []
            },
            {
              "name": "status_code",
              "description": "The status code to check for URL forwarding. The required attribute for `forwarding_url` action. Valid values are `301` and `302`. It returns `0` for all other actions.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_cis_range_apps": {
      "name": "ibm_cis_range_apps",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Internet Services data sources",
      "args": [],
      "attrs": [
        {
          "name": "id",
          "description": "The range application ID. It is a combination of `<app_id>,<domain_id>,<cis_id>` attributes are concatenated with `:` character.",
          "args": []
        },
        {
          "name": "app_id",
          "description": "The Range application id.",
          "args": []
        },
        {
          "name": "cis_id",
          "description": "The ID of the CIS service instance.",
          "args": []
        },
        {
          "name": "domain_id",
          "description": "The ID of the domain to add the range application.",
          "args": []
        },
        {
          "name": "protocol",
          "description": "The Edge application protocol type. Valid values are `tcp`, `udp`. This attribute specified along with port number. For example, `tcp/22`.",
          "args": []
        },
        {
          "name": "dns",
          "description": "The name of DNS record for the range application.",
          "args": []
        },
        {
          "name": "ip_firewall",
          "description": "Enables the IP firewall for the application. Only available for `TCP` applications.",
          "args": []
        },
        {
          "name": "proxy_protocol",
          "description": "Allows for the true client IP to be passed to the service. Valid values are `off`, `v1`, `v2`, `simple`. Default value is `off`.",
          "args": []
        },
        {
          "name": "edge_ips_type",
          "description": "The type of edge IP configuration. Valid value and default value is `dynamic`.",
          "args": []
        },
        {
          "name": "edge_ips_connectivity",
          "description": "Specified IP version. Valid values are `ipv4`, `ipv6`, `all`. Default value is `all`.",
          "args": []
        },
        {
          "name": "traffic_type",
          "description": "Configure how traffic is handled at the edge. If set to direct traffic is passed through to the service. In the case of HTTP or HTTPS, HTTPS features at the edge are applied to this traffic. Valid values are `direct`, `http`, `https`. Default value is `direct`.",
          "args": []
        },
        {
          "name": "tls",
          "description": "Configure how TLS connections are terminated at the edge. Valid values are `off`, `flexible`, `full`, `strict`. Default value is `off`.",
          "args": []
        }
      ]
    },
    "ibm_cis_rate_limit": {
      "name": "ibm_cis_rate_limit",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Internet Services data sources",
      "args": [
        {
          "name": "cis_id",
          "description": "(Required, String) The ID of the IBM Cloud Internet Services instance where you created the rate limiting rule.",
          "args": []
        },
        {
          "name": "domain_id",
          "description": "(Required, String) The ID of the domain where you created the rate limiting rule.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The record ID of the rate limiting rule in the format `<rule_ID>:<domain_ID>:<cis_ID>`.",
          "args": []
        },
        {
          "name": "rule_id",
          "description": "The ID of the rate limiting rule.",
          "args": []
        },
        {
          "name": "threshold",
          "description": "The number of requests received within a specific time period (`period`) before connections to the domain are refused. The threshold value can be between 2 and 1000000.",
          "args": []
        },
        {
          "name": "period",
          "description": "The period of time in seconds where incoming requests to a domain are counted. If the number of requests exceeds the `threshold`, then connections to the domain are refused. The `period` value can be between 1 and 3600.",
          "args": []
        },
        {
          "name": "match",
          "description": "A list of characteristics that incoming network traffic must match to be counted toward the `threshold`.",
          "args": [
            {
              "name": "request",
              "description": "A list of characteristics that the incoming request must match to be counted toward the `threshold`. If no list is provided, all incoming requests are counted toward the `threshold`.",
              "args": [
                {
                  "name": "url",
                  "description": "The URL that the request uses. Wildcard domains are expanded to match applicable traffic, query strings are not matched. If `*` is returned, the rule is applied to all URLs. The maximum length of this value can be 1024.",
                  "args": []
                },
                {
                  "name": "schemes",
                  "description": "The scheme of the request that determines the protocol that you want. Supported values are `HTTPS`, `HTTP,HTTPS`, and `ALL`.",
                  "args": []
                },
                {
                  "name": "methods",
                  "description": "The HTTP methods that the incoming request can use to be counted toward the `threshold`. Supported values are `GET`, `POST`, `PUT`, `DELETE`, `PATCH`, `HEAD`, and `ALL`. You can also combine multiple methods and separate them with a comma. For example `POST,PUT`.",
                  "args": []
                }
              ]
            }
          ]
        },
        {
          "name": "response",
          "description": "A list of HTTP responses that outgoing packets must match before they can be returned to the client. If an incoming request matches the request criteria, but the response does not match the response criteria, then the request packet is not counted toward the `threshold`.",
          "args": [
            {
              "name": "status",
              "description": "The HTTP status code that the response must have so that the request is counted toward the `threshold`. The value can be between 100 and 999. If you want to use multiple response codes, you must separate them with a comma, such as `401,403`.",
              "args": []
            },
            {
              "name": "header",
              "description": "A list of HTTP response headers that the response packet must match so that the original request is counted toward the `threshold`.",
              "args": [
                {
                  "name": "name",
                  "description": "The name of the HTTP response header.",
                  "args": []
                },
                {
                  "name": "op",
                  "description": "The operator that applied to your HTTP response header. Supported values are `eq` (equals) and `ne` (not equals).",
                  "args": []
                },
                {
                  "name": "value",
                  "description": "The value that the HTTP response header must match.",
                  "args": []
                }
              ]
            }
          ]
        },
        {
          "name": "action",
          "description": "A list of actions that you want to perform when incoming requests exceed the specified `threshold`.",
          "args": [
            {
              "name": "mode",
              "description": "The type of action that you want to perform. Supported values are `simulate`, `ban`, `challenge`, or `js_challenge`. For more information, about each type, see [Configure response](/docs/cis?topic=cis-cis-rate-limiting#rate-limiting-configure-response).",
              "args": []
            },
            {
              "name": "timeout",
              "description": "The time to wait in seconds before the action is performed. The timeout must be equal to or greater than the `period` and is valid only for actions of type `simulate` or `ban`. The value can be between 10 and 86400.",
              "args": []
            },
            {
              "name": "response",
              "description": "A list of information that you want to return to the client, such as the `content-type` and specific body information. The information provided in this parameter overrides the default HTML error page that is returned to the client. This option is valid only for actions of type `simulate` or `ban`.",
              "args": [
                {
                  "name": "content_type",
                  "description": "The `content-type` of the body that you want to return. Supported values are `text/plain`, `text/xml`, and `application/json`.",
                  "args": []
                },
                {
                  "name": "body",
                  "description": "The body of the response that you want to return to the client. The information must match the `action.response.content_type` that you specified. The value can have a maximum length of 1024.",
                  "args": []
                }
              ]
            }
          ]
        },
        {
          "name": "disabled",
          "description": "If set to **true**, rate limiting is disabled for the domain.",
          "args": []
        },
        {
          "name": "description",
          "description": "The description for your rate limiting rule.",
          "args": []
        },
        {
          "name": "correlate",
          "description": "If provided, NAT-based rate limiting is enabled.",
          "args": [
            {
              "name": "by",
              "description": "If set to `nat`, NAT-based rate limiting is enabled.",
              "args": []
            }
          ]
        },
        {
          "name": "bypass",
          "description": "A list of key-value pairs that, when matched, allow the rate limiting rule to be ignored.",
          "args": [
            {
              "name": "name",
              "description": "The name of the key that you want to apply. Supported values are `url`.",
              "args": []
            },
            {
              "name": "value",
              "description": "The value of the key that you want to match. When `bypass.name` is set to `url`, `bypass.value` contains the URL that you want to exclude from the rate limiting rule.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_cis_waf_groups": {
      "name": "ibm_cis_waf_groups",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Internet Services data sources",
      "args": [
        {
          "name": "cis_id",
          "description": "(Required, String) The resource CRN ID of the CIS on which zones were created.",
          "args": []
        },
        {
          "name": "domain_id",
          "description": "(Required, String) The ID of the domain to retrieve the Load Balancers.",
          "args": []
        },
        {
          "name": "package_id",
          "description": "(Required, String) The WAF Rule Package ID.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "name",
          "description": "The name of the  WAF rule group.",
          "args": []
        },
        {
          "name": "group_id",
          "description": "The WAF group ID.",
          "args": []
        },
        {
          "name": "mode",
          "description": "The `on`, `off` mode setting of the WAF rule group.",
          "args": []
        },
        {
          "name": "description",
          "description": "The WAF rule group description.",
          "args": []
        },
        {
          "name": "rules_count",
          "description": "Number of rules in WAF Group.",
          "args": []
        },
        {
          "name": "modified_rules_count",
          "description": "Number of rules modified in WAF Group.",
          "args": []
        }
      ]
    },
    "ibm_cis_waf_packages": {
      "name": "ibm_cis_waf_packages",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Internet Services data sources",
      "args": [
        {
          "name": "cis_id",
          "description": "(Required, String) The ID of the IBM Cloud Internet Services service instance.",
          "args": []
        },
        {
          "name": "domain_id",
          "description": "(Required, String) The ID of the domain.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The ID of resource. It is the combination of `<package_id>:<domain_id>:<cis_id>`.",
          "args": []
        },
        {
          "name": "description",
          "description": "The WAF package description.",
          "args": []
        },
        {
          "name": "package_id",
          "description": "The WAF package ID.",
          "args": []
        },
        {
          "name": "detection_mode",
          "description": "The WAF package detection mode.",
          "args": []
        }
      ]
    },
    "ibm_cis_waf_rules": {
      "name": "ibm_cis_waf_rules",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Internet Services data sources",
      "args": [
        {
          "name": "cis_id",
          "description": "(Required, String) The ID of the IBM Cloud Internet Services service instance.",
          "args": []
        },
        {
          "name": "domain_id",
          "description": "(Required, String) The ID of the domain to add the rate limit rule.",
          "args": []
        },
        {
          "name": "package_id",
          "description": "(Required, String) The ID of WAF rule package.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "waf_rules",
          "description": "The list of WAF rules.",
          "args": [
            {
              "name": "id",
              "description": "It is a combination of `<rule_id>,<package_id>,<domain_id>,<cis_id>` attributes concatenated with `:` character.",
              "args": []
            },
            {
              "name": "rule_id",
              "description": "The ID of WAF rule package.",
              "args": []
            },
            {
              "name": "package_id",
              "description": "The ID of WAF rule package.",
              "args": []
            },
            {
              "name": "mode",
              "description": "The mode setting that can be set only once. Valid values are `on`, `off`, `default`, `disable`, `simulate`, `block`, `challenge`.",
              "args": []
            },
            {
              "name": "description",
              "description": "The WAF rule description.",
              "args": []
            },
            {
              "name": "priority",
              "description": "The WAF rule priority.",
              "args": []
            },
            {
              "name": "group",
              "description": "The WAF rule group.",
              "args": [
                {
                  "name": "id",
                  "description": "The WAF rule group ID.",
                  "args": []
                },
                {
                  "name": "name",
                  "description": "The name of the WAF rule group.",
                  "args": []
                }
              ]
            },
            {
              "name": "allowed_modes",
              "description": "The allowed modes for setting the WAF rule mode.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_compute_bare_metal": {
      "name": "ibm_compute_bare_metal",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure data sources",
      "args": [
        {
          "name": "hostname",
          "description": "(Optional, String) The hostname of the Bare Metal server. If you specify the `hostname`, do not specify `global_identifier` at the same time.",
          "args": []
        },
        {
          "name": "domain",
          "description": "(Optional, String) The domain of the Bare Metal server. If you specify this option, do not specify `global_identifier` at the same time.",
          "args": []
        },
        {
          "name": "global_identifier",
          "description": "(Optional, String) The unique global identifier of the Bare Metal server. To see global identifier, log in to the [IBM Cloud Classic Infrastructure API](https://api.softlayer.com/rest/v3.1/SoftLayer_Account/getHardware.json), that uses your API key as the password. If you specify this option, do not specify `hostname`, `domain`, or `most_recent` at the same time.",
          "args": []
        },
        {
          "name": "most_recent",
          "description": "(Optional, Boolean) For multiple Bare Metal services, you can set this argument to `true` to import only the most recently created server. If you specify this option, do not specify `global_identifier` at the same time.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the Bare Metal server.",
          "args": []
        },
        {
          "name": "datacenter",
          "description": "The data center in which the Bare Metal server is deployed.",
          "args": []
        },
        {
          "name": "network_speed",
          "description": "The connection speed, expressed in Mbps, for the server network components.",
          "args": []
        },
        {
          "name": "public_bandwidth",
          "description": "The amount of public network traffic, allowed per month.",
          "args": []
        },
        {
          "name": "public_ipv4_address",
          "description": "The public IPv4 address of the Bare Metal server.",
          "args": []
        },
        {
          "name": "public_ipv4_address_id",
          "description": "The unique identifier for the public IPv4 address of the Bare Metal server.",
          "args": []
        },
        {
          "name": "private_ipv4_address",
          "description": "The private IPv4 address of the Bare Metal server.",
          "args": []
        },
        {
          "name": "private_ipv4_address_id",
          "description": "The unique identifier for the private IPv4 address of the Bare Metal server.",
          "args": []
        },
        {
          "name": "public_vlan_id",
          "description": "The public VLAN used for the public network interface of the server.",
          "args": []
        },
        {
          "name": "private_vlan_id",
          "description": "The private VLAN used for the private network interface of the server.",
          "args": []
        },
        {
          "name": "public_subnet",
          "description": "The public subnet used for the public network interface of the server.",
          "args": []
        },
        {
          "name": "private_subnet",
          "description": "The private subnet used for the private network interface of the server.",
          "args": []
        },
        {
          "name": "hourly_billing",
          "description": "The billing type of the server.",
          "args": []
        },
        {
          "name": "private_network_only",
          "description": "Specifies whether the server has only access to the private network.",
          "args": []
        },
        {
          "name": "user_metadata",
          "description": "Arbitrary data available to the computing server.",
          "args": []
        },
        {
          "name": "notes",
          "description": "Notes associated with the server.",
          "args": []
        },
        {
          "name": "memory",
          "description": "The amount of memory in gigabytes, for the server.",
          "args": []
        },
        {
          "name": "redundant_power_supply",
          "description": "When the value is `true`, it indicates that more power supply is provided.",
          "args": []
        },
        {
          "name": "redundant_network",
          "description": "When the value is `true`, two physical network interfaces are provided with a bonding configuration.",
          "args": []
        },
        {
          "name": "unbonded_network",
          "description": "When the value is `true`, two physical network interfaces are provided without a bonding configuration.",
          "args": []
        },
        {
          "name": "os_reference_code",
          "description": "An operating system reference code that provisioned the computing server.",
          "args": []
        },
        {
          "name": "tags",
          "description": "Tags associated with this Bare Metal server.",
          "args": []
        },
        {
          "name": "block_storage_ids",
          "description": "Block storage to which this computing server has access.",
          "args": []
        },
        {
          "name": "file_storage_ids",
          "description": "File storage to which this computing server has access.",
          "args": []
        },
        {
          "name": "ipv6_enabled",
          "description": "Indicates whether the public IPv6 address is enabled or not.",
          "args": []
        },
        {
          "name": "ipv6_address",
          "description": "The public IPv6 address of the Bare Metal server.",
          "args": []
        },
        {
          "name": "ipv6_address_id",
          "description": "The unique identifier for the public IPv6 address of the Bare Metal server.",
          "args": []
        },
        {
          "name": "secondary_ip_count",
          "description": "The number of secondary IPv4 addresses of the Bare Metal server.",
          "args": []
        },
        {
          "name": "secondary_ip_addresses",
          "description": "The public secondary IPv4 addresses of the Bare Metal server.",
          "args": []
        }
      ]
    },
    "ibm_compute_image_template": {
      "name": "ibm_compute_image_template",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure data sources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the image template. You can find the name in the [IBM Cloud infrastructure customer portal](https://cloud.ibm.com/classic) by navigating to **Devices > Manage > Images**.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the image template.",
          "args": []
        }
      ]
    },
    "ibm_compute_placement_group": {
      "name": "ibm_compute_placement_group",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure data sources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the placement group.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the placement group.",
          "args": []
        },
        {
          "name": "datacenter",
          "description": "The data center in which placement group resides.",
          "args": []
        },
        {
          "name": "pod",
          "description": "The pod in which placement group resides.",
          "args": []
        },
        {
          "name": "rule",
          "description": "The rule of the placement group.",
          "args": []
        },
        {
          "name": "virtual_guests",
          "description": "A nested block describes the VSIs attached to the placement group.",
          "args": [
            {
              "name": "id",
              "description": "The ID of the virtual guest.",
              "args": []
            },
            {
              "name": "domain",
              "description": "The domain of the virtual guest.",
              "args": []
            },
            {
              "name": "hostname",
              "description": "The hostname of the virtual guest.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_compute_ssh_key": {
      "name": "ibm_compute_ssh_key",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure data sources",
      "args": [
        {
          "name": "label",
          "description": "(Required, String) The label of the SSH key.",
          "args": []
        },
        {
          "name": "most_recent",
          "description": "(Optional, Boolean) If more than one SSH key matches the label, you can set this argument to `true` to import only the most recent key. **NOTE**: The search must return only one match. More or less than one match causes Terraform to fail. Ensure that your label is specific enough to return a single SSH key only, or use the `most_recent` argument.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the SSH key.",
          "args": []
        },
        {
          "name": "fingerprint",
          "description": "The sequence of bytes to authenticate or look up a longer SSH key.",
          "args": []
        },
        {
          "name": "public_key",
          "description": "The public key contents.",
          "args": []
        },
        {
          "name": "notes",
          "description": "The notes that are stored with the SSH key.",
          "args": []
        }
      ]
    },
    "ibm_compute_vm_instance": {
      "name": "ibm_compute_vm_instance",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure data sources",
      "args": [
        {
          "name": "hostname",
          "description": "(Required, String) The hostname of the VM instance.",
          "args": []
        },
        {
          "name": "domain",
          "description": "(Required, String) The domain of the VM instance.",
          "args": []
        },
        {
          "name": "most_recent",
          "description": "(Optional, Boolean) For multiple VM instances, you can set this argument to `true` to import only the most recently created instance.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the VM instance.",
          "args": []
        },
        {
          "name": "datacenter",
          "description": "The data center in which the VM instance is deployed.",
          "args": []
        },
        {
          "name": "public_interface_id",
          "description": "The ID of the primary public interface.",
          "args": []
        },
        {
          "name": "private_interface_id",
          "description": "The ID of the primary private interface.",
          "args": []
        },
        {
          "name": "cores",
          "description": "The number of CPU cores.",
          "args": []
        },
        {
          "name": "status",
          "description": "The VSI status.",
          "args": []
        },
        {
          "name": "last_known_power_state",
          "description": "The last known power state of a VM instance, if the instance is turned off outside the information management system (IMS) is offline.",
          "args": []
        },
        {
          "name": "power_state",
          "description": "The current power state of a VM instance.",
          "args": []
        },
        {
          "name": "ipv4_address",
          "description": "The public IPv4 address of the VM instance.",
          "args": []
        },
        {
          "name": "ip_address_id_private",
          "description": "The unique identifier for the private IPv4 address that is assigned to the VM instance.",
          "args": []
        },
        {
          "name": "ipv4_address_private",
          "description": "The private IPv4 address of the VM instance.",
          "args": []
        },
        {
          "name": "ip_address_id",
          "description": "The unique identifier for the public IPv4 address that is assigned to the VM instance.",
          "args": []
        },
        {
          "name": "ipv6_address",
          "description": "The public IPv6 address of the VM instance provided when `ipv6_enabled` is set to `true`.",
          "args": []
        },
        {
          "name": "ipv6_address_id",
          "description": "The unique identifier for the public IPv6 address assigned to the VM instance provided when `ipv6_enabled` is set to `true`.",
          "args": []
        },
        {
          "name": "private_subnet_id",
          "description": "The unique identifier of the subnet `ipv4_address_private` belongs to.",
          "args": []
        },
        {
          "name": "public_ipv6_subnet",
          "description": "The public IPv6 subnet provided when `ipv6_enabled` is set to `true`.",
          "args": []
        },
        {
          "name": "public_ipv6_subnet_id",
          "description": "The unique identifier of the subnet `ipv6_address` belongs to.",
          "args": []
        },
        {
          "name": "public_subnet_id",
          "description": "The unique identifier of the subnet `ipv4_address` belongs to.",
          "args": []
        },
        {
          "name": "secondary_ip_addresses",
          "description": "The public secondary IPv4 addresses of the VM instance.",
          "args": []
        },
        {
          "name": "secondary_ip_count",
          "description": "Number of secondary public IPv4 addresses.",
          "args": []
        }
      ]
    },
    "ibm_container_addons": {
      "name": "ibm_container_addons",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Kubernetes Service data sources",
      "args": [
        {
          "name": "cluster",
          "description": "(Required, String) The name or ID of the cluster.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "addons",
          "description": "The details of an enabled add-ons.",
          "args": [
            {
              "name": "name",
              "description": "The add-on name such as `istio`.",
              "args": []
            },
            {
              "name": "version",
              "description": "The add-on version. Omit the version, if you need to use the default version.",
              "args": []
            },
            {
              "name": "allowed_upgrade_versions",
              "description": "The versions that the add-on is upgraded to.",
              "args": []
            },
            {
              "name": "deprecated",
              "description": "Determines if the add-on version is deprecated.",
              "args": []
            },
            {
              "name": "health_state",
              "description": "The health state of an add-on, such as critical or pending.",
              "args": []
            },
            {
              "name": "health_status",
              "description": "The health status of an add-on, provides a description of the state in the form of error message.",
              "args": []
            },
            {
              "name": "min_kube_version",
              "description": "The minimum Kubernetes version of the add-on.",
              "args": []
            },
            {
              "name": "min_ocp_version",
              "description": "The minimum OpenShift version of the add-on.",
              "args": []
            },
            {
              "name": "supported_kube_range",
              "description": "The supported Kubernetes version range of the add-on.",
              "args": []
            },
            {
              "name": "target_version",
              "description": "The add-on target version.",
              "args": []
            },
            {
              "name": "vlan_spanning_required",
              "description": "The VLAN spanning required for multi-zone clusters.",
              "args": []
            }
          ]
        },
        {
          "name": "id",
          "description": "The ID of an add-ons.",
          "args": []
        },
        {
          "name": "resource_group_id",
          "description": "The ID of the cluster resource group in which the `addons` is installed.",
          "args": []
        }
      ]
    },
    "ibm_container_alb": {
      "name": "ibm_container_alb",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Kubernetes Service data sources",
      "args": [
        {
          "name": "alb_id",
          "description": "(Required, String) The ID of the ALB.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "alb_type",
          "description": "The ALB type.",
          "args": []
        },
        {
          "name": "cluster",
          "description": "The name of the cluster.",
          "args": []
        },
        {
          "name": "name",
          "description": "The name of the ALB.",
          "args": []
        },
        {
          "name": "user_ip",
          "description": "The IP address assigned by the user.",
          "args": []
        },
        {
          "name": "id",
          "description": "The ALB ID.",
          "args": []
        },
        {
          "name": "zone",
          "description": "The name of the zone.",
          "args": []
        },
        {
          "name": "enable",
          "description": "Enable an ALB for the cluster.",
          "args": []
        },
        {
          "name": "disable_deployment",
          "description": "Disable the ALB deployment details.",
          "args": []
        }
      ]
    },
    "ibm_container_alb_cert": {
      "name": "ibm_container_alb_cert",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Kubernetes Service data sources",
      "args": [
        {
          "name": "cluster_id",
          "description": "(Required, String) The cluster ID.",
          "args": []
        },
        {
          "name": "secret_name",
          "description": "(Required, String) The name of the ALB certificate secret.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "cert_crn",
          "description": "The certificate CRN.",
          "args": []
        },
        {
          "name": "cloud_cert_instance_id",
          "description": "The Cloud certificate instance ID from which certificate is downloaded.",
          "args": []
        },
        {
          "name": "cluster_crn",
          "description": "The cluster CRN.",
          "args": []
        },
        {
          "name": "domain_name",
          "description": "The domain name of the certificate.",
          "args": []
        },
        {
          "name": "expires_on",
          "description": "The expiry date of the certificate.",
          "args": []
        },
        {
          "name": "id",
          "description": "The ALB cert ID. The ID is composed of `<cluster_name_id>/<secret_name>`.",
          "args": []
        },
        {
          "name": "issuer_name",
          "description": "The issuer name of the certificate.",
          "args": []
        }
      ]
    },
    "ibm_container_bind_service": {
      "name": "ibm_container_bind_service",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Kubernetes Service data sources",
      "args": [
        {
          "name": "cluster_name_id",
          "description": "(Required, String) The name or Id of the cluster.",
          "args": []
        },
        {
          "name": "namespace_id",
          "description": "(Required, String) The Kubernetes namespace.",
          "args": []
        },
        {
          "name": "service_instance_name",
          "description": "(Optional, String) The name of the service that is attached to the cluster. This conflicts with the `service_instance_id` parameter.",
          "args": []
        },
        {
          "name": "service_instance_id",
          "description": "(Optional, String) The Id of the service that is attached to the cluster. This conflicts with the `service_instance_name` parameter.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique Id of the bind service resource. The ID is composed of `<cluster_name_id>/<service_instance_name or service_instance_id>/<namespace_id/>`.",
          "args": []
        },
        {
          "name": "service_key_name",
          "description": "The service key name.",
          "args": []
        }
      ]
    },
    "ibm_container_cluster": {
      "name": "ibm_container_cluster",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Kubernetes Service data sources",
      "args": [
        {
          "name": "alb_type",
          "description": "(Optional, String) Filters the  `albs` based on type. The valid values are `private`, `public`, and `all`. The default value is `all`.",
          "args": []
        },
        {
          "name": "cluster_name_id",
          "description": "(Deprecated, String) The name or ID of the cluster that you want to retrieve.",
          "args": []
        },
        {
          "name": "name",
          "description": "(Optional, String) The name or ID of the cluster.",
          "args": []
        },
        {
          "name": "list_bounded_services",
          "description": "(Optional, Bool) If set to `false` services which are bound to the cluster are not going to be listed. The default value is `true`.",
          "args": []
        },
        {
          "name": "resource_group_id",
          "description": "(Optional, String) The ID of the resource group where your cluster is provisioned into. To list resource groups, run `ibmcloud resource groups` or use the `ibm_resource_group` data source.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "api_key_id",
          "description": "The ID of the API key.",
          "args": []
        },
        {
          "name": "api_key_owner_name",
          "description": "The name of the key owner.",
          "args": []
        },
        {
          "name": "api_key_owner_email",
          "description": "The Email ID of the key owner.",
          "args": []
        },
        {
          "name": "albs",
          "description": "A list of Ingress application load balancers (ALBs) that are attached to the cluster.",
          "args": [
            {
              "name": "id",
              "description": "The unique identifier of the Ingress ALB.",
              "args": []
            },
            {
              "name": "name",
              "description": "The name of the Ingress ALB.",
              "args": []
            },
            {
              "name": "enable",
              "description": "Indicates if the ALB is enabled (**true**) or disabled (**false**) in the cluster.",
              "args": []
            },
            {
              "name": "state",
              "description": "The state of the ALB. Supported values are `enabled` or `disabled`.",
              "args": []
            },
            {
              "name": "num_of_instances",
              "description": "The number of ALB replicas.",
              "args": []
            },
            {
              "name": "alb_ip",
              "description": "BYOIP VIP to use for application load balancer. Currently supported only for private application load balancer.",
              "args": []
            },
            {
              "name": "resize",
              "description": "Indicate whether resizing should be done.",
              "args": []
            },
            {
              "name": "disable_deployment",
              "description": "Indicate whether to disable deployment only on disable application load balancer (ALB).",
              "args": []
            }
          ]
        },
        {
          "name": "bounded_services",
          "description": "A list of IBM Cloud services that are bounded to the cluster.",
          "args": []
        },
        {
          "name": "crn",
          "description": "The CRN of the cluster.",
          "args": []
        },
        {
          "name": "id",
          "description": "The unique identifier of the cluster.",
          "args": []
        },
        {
          "name": "ingress_hostname",
          "description": "The Ingress host name.",
          "args": []
        },
        {
          "name": "ingress_secret",
          "description": "The name of the Ingress secret.",
          "args": []
        },
        {
          "name": "name",
          "description": "The name of the cluster.",
          "args": []
        },
        {
          "name": "public_service_endpoint",
          "description": "Indicates if the public service endpoint is enabled (**true**) or disabled (**false**) for a cluster.",
          "args": []
        },
        {
          "name": "public_service_endpoint_url",
          "description": "The URL of the public service endpoint for your cluster.",
          "args": []
        },
        {
          "name": "private_service_endpoint",
          "description": "Indicates if the private service endpoint is enabled (**true**) or disabled (**false**) for a cluster.",
          "args": []
        },
        {
          "name": "private_service_endpoint_url",
          "description": "The URL of the private service endpoint for your cluster.",
          "args": []
        },
        {
          "name": "vlans",
          "description": "A list of VLANs that are attached to the cluster.",
          "args": [
            {
              "name": "id",
              "description": "The ID of the VLAN.",
              "args": []
            },
            {
              "name": "subnets",
              "description": "A list of subnets that belong to the cluster.",
              "args": [
                {
                  "name": "id",
                  "description": "The ID of the subnet.",
                  "args": []
                },
                {
                  "name": "cidr",
                  "description": "The IP address CIDR of the subnet.",
                  "args": []
                },
                {
                  "name": "ips",
                  "description": "The IP addresses that belong to the subnet.",
                  "args": []
                },
                {
                  "name": "isbyoip",
                  "description": "If set to **true**, you provided your own IP address range for the subnet. If set to **false**, the default IP address range is used.",
                  "args": []
                },
                {
                  "name": "is_public",
                  "description": "If set to **true**, the VLAN is public. If set to **false**, the VLAN is private.",
                  "args": []
                }
              ]
            }
          ]
        },
        {
          "name": "workers",
          "description": "A list of worker nodes that belong to the cluster.",
          "args": []
        },
        {
          "name": "worker_pools",
          "description": "A list of worker pools that exist in the cluster.",
          "args": [
            {
              "name": "machine_type",
              "description": "The machine type that is used for the worker nodes in the worker pool.",
              "args": []
            },
            {
              "name": "name",
              "description": "The name of the worker pool.",
              "args": []
            },
            {
              "name": "size_per_zone",
              "description": "The number of worker nodes per zone.",
              "args": []
            },
            {
              "name": "hardware",
              "description": "The level of hardware isolation that is used for the worker node of the worker pool.",
              "args": []
            },
            {
              "name": "id",
              "description": "The ID of the worker pool.",
              "args": []
            },
            {
              "name": "state",
              "description": "The state of the worker pool.",
              "args": []
            },
            {
              "name": "labels",
              "description": "A list of labels that are added to the worker pool.",
              "args": []
            },
            {
              "name": "zones",
              "description": "A list of zones that are attached to the worker pool.",
              "args": [
                {
                  "name": "zone",
                  "description": "The name of the zone.",
                  "args": []
                },
                {
                  "name": "private_vlan",
                  "description": "The ID of the private VLAN that is used in that zone.",
                  "args": []
                },
                {
                  "name": "public_vlan",
                  "description": "The ID of the private VLAN that is used in that zone.",
                  "args": []
                },
                {
                  "name": "worker_count",
                  "description": "The number of worker nodes that are attached to the zone.",
                  "args": []
                }
              ]
            }
          ]
        },
        {
          "name": "workers_info",
          "description": "A list of worker nodes that belong to the cluster.",
          "args": [
            {
              "name": "pool_name",
              "description": "The name of the worker pool the worker node belongs to.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_container_cluster_config": {
      "name": "ibm_container_cluster_config",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Kubernetes Service data sources",
      "args": [
        {
          "name": "admin",
          "description": "(Optional, Boolean) If set to **true**, the Kubernetes configuration for cluster administrators is downloaded. The default is **false**.",
          "args": []
        },
        {
          "name": "cluster_name_id",
          "description": "(Required, String) The name or ID of the cluster that you want to log in to.",
          "args": []
        },
        {
          "name": "config_dir",
          "description": "(Required, String) The directory on your local machine where you want to download the Kubernetes config files and certificates.",
          "args": []
        },
        {
          "name": "download",
          "description": "(Optional, Boolean) Set the value to **false** to skip downloading the configuration for the administrator. The default value is **true**. The configuration files and certificates are downloaded to the directory that you specified in `config_dir` every time that you run your infrastructure code.",
          "args": []
        },
        {
          "name": "network",
          "description": "(Optional, Boolean) If set to **true**, the Calico configuration file, TLS certificates, and permission files that are required to run `calicoctl` commands in your cluster are downloaded in addition to the configuration files for the administrator. The default value is **false**.",
          "args": []
        },
        {
          "name": "resource_group_id",
          "description": "(Optional, String) The ID of the resource group where your cluster is provisioned into. To find the resource group, run `ibmcloud resource groups` or use the `ibm_resource_group` data source. If this parameter is not provided, the `default` resource group is used.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "calico_config_file_path",
          "description": "The path on your local machine where your Calico configuration files and certificates are downloaded to.",
          "args": []
        },
        {
          "name": "config_file_path",
          "description": "The path on your local machine where the cluster configuration file and certificates are downloaded to.",
          "args": []
        },
        {
          "name": "id",
          "description": "The unique identifier of the cluster configuration.",
          "args": []
        },
        {
          "name": "admin_key",
          "description": "The admin key of the cluster configuration. Note that this key is case-sensitive.",
          "args": []
        },
        {
          "name": "admin_certificate",
          "description": "The admin certificate of the cluster configuration.",
          "args": []
        },
        {
          "name": "ca_certificate",
          "description": "The cluster CA certificate of the cluster configuration.",
          "args": []
        },
        {
          "name": "host",
          "description": "The host name of the cluster configuration.",
          "args": []
        },
        {
          "name": "token",
          "description": "The token of the cluster configuration.",
          "args": []
        }
      ]
    },
    "ibm_container_cluster_versions": {
      "name": "ibm_container_cluster_versions",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Kubernetes Service data sources",
      "args": [
        {
          "name": "resource_group_id",
          "description": "(Optional, String) The ID of the resource group where your cluster is provisioned into. To find the resource group, run `ibmcloud resource groups` or use the `ibm_resource_group` data source. If this parameter is not provided, the `default` resource group is used.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the cluster.",
          "args": []
        },
        {
          "name": "valid_kube_versions",
          "description": "The supported Kubernetes version in IBM Cloud Kubernetes Service clusters.",
          "args": []
        },
        {
          "name": "valid_openshift_versions",
          "description": "The supported OpenShift Container Platform version in {{site.data.keyword.openshiftlong_notm}} clusters.",
          "args": []
        }
      ]
    },
    "ibm_container_cluster_worker": {
      "name": "ibm_container_cluster_worker",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Kubernetes Service data sources",
      "args": [
        {
          "name": "resource_group_id",
          "description": "(Optional, String) The ID of the resource group where your cluster is provisioned into. To find the resource group, run `ibmcloud resource groups` or use the `ibm_resource_group` data source. If this parameter is not provided, the `default` resource group is used.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "private_ip",
          "description": "The private IP address that is assigned to the worker node.",
          "args": []
        },
        {
          "name": "private_vlan",
          "description": "The ID of the private VLAN that the worker node is attached to.",
          "args": []
        },
        {
          "name": "public_ip",
          "description": "The public IP address that is assigned to the worker node.",
          "args": []
        },
        {
          "name": "public_vlan",
          "description": "The ID of the public VLAN that the worker node is attached to.",
          "args": []
        },
        {
          "name": "state",
          "description": "The state of the worker node.",
          "args": []
        },
        {
          "name": "status",
          "description": "The status of the worker node.",
          "args": []
        }
      ]
    },
    "ibm_container_vpc_alb": {
      "name": "ibm_container_vpc_alb",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Kubernetes Service data sources",
      "args": [
        {
          "name": "alb_id",
          "description": "(Required, String) The name or ID of the application load balancer.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "alb_type",
          "description": "The ALB type.",
          "args": []
        },
        {
          "name": "cluster",
          "description": "The name of the cluster.",
          "args": []
        },
        {
          "name": "name",
          "description": "The name of the ALB.",
          "args": []
        },
        {
          "name": "id",
          "description": "The ALB ID.",
          "args": []
        },
        {
          "name": "load_balancer_hostname",
          "description": "The name of the load balancer.",
          "args": []
        },
        {
          "name": "resize",
          "description": "Resize of the ALB.",
          "args": []
        },
        {
          "name": "state",
          "description": "ALB state.",
          "args": []
        },
        {
          "name": "status",
          "description": "The status of the ALB.",
          "args": []
        },
        {
          "name": "zone",
          "description": "The name of the zone.",
          "args": []
        },
        {
          "name": "enable",
          "description": "Enable an ALB for the cluster.",
          "args": []
        },
        {
          "name": "disable_deployment",
          "description": "Disables the ALB deployment details.",
          "args": []
        }
      ]
    },
    "ibm_container_vpc_cluster": {
      "name": "ibm_container_vpc_cluster",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Kubernetes Service data sources",
      "args": [
        {
          "name": "cluster_name_id",
          "description": "(Deprecated, String) The name or ID of the VPC cluster that you want to retrieve.",
          "args": []
        },
        {
          "name": "alb_type",
          "description": "(Optional, String) The ALB type of a cluster.",
          "args": []
        },
        {
          "name": "name",
          "description": "(Optional, String) The name or ID of the cluster.",
          "args": []
        },
        {
          "name": "resource_group_id",
          "description": "(Optional, String) The ID of the resource group where your cluster is provisioned into. To list resource groups, run `ibmcloud resource groups` or use the `ibm_resource_group` data source.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "api_key_id",
          "description": "The ID of the API key.",
          "args": []
        },
        {
          "name": "api_key_owner_name",
          "description": "The name of the key owner.",
          "args": []
        },
        {
          "name": "api_key_owner_email",
          "description": "The Email ID of the key owner.",
          "args": []
        },
        {
          "name": "albs",
          "description": "A list of Ingress application load balancers (ALBs) that are attached to the cluster.",
          "args": [
            {
              "name": "id",
              "description": "The unique identifier of the Ingress ALB.",
              "args": []
            },
            {
              "name": "name",
              "description": "The name of the Ingress ALB.",
              "args": []
            },
            {
              "name": "enable",
              "description": "Indicates if the ALB is enabled (**true**) or disabled (**false**) in the cluster.",
              "args": []
            },
            {
              "name": "state",
              "description": "The state of the ALB. Supported values are `enabled` or `disabled`.",
              "args": []
            },
            {
              "name": "load_balancer_hostname",
              "description": "The host name of the ALB.",
              "args": []
            },
            {
              "name": "resize",
              "description": "Indicate whether resizing should be done.",
              "args": []
            },
            {
              "name": "disable_deployment",
              "description": "Indicate whether to disable deployment only on disable application load balancer (ALB).",
              "args": []
            }
          ]
        },
        {
          "name": "crn",
          "description": "The CRN of the cluster.",
          "args": []
        },
        {
          "name": "health",
          "description": "The health of the cluster master.",
          "args": []
        },
        {
          "name": "id",
          "description": "The unique identifier of the cluster.",
          "args": []
        },
        {
          "name": "ingress_hostname",
          "description": "The hostname that was assigned to your Ingress subdomain.",
          "args": []
        },
        {
          "name": "ingress_secret",
          "description": "The name of the Kubernetes secret that was created for your Ingress subdomain.",
          "args": []
        },
        {
          "name": "kube_version",
          "description": "The Kubernetes version of the cluster, including the major.minor version.",
          "args": []
        },
        {
          "name": "master_url",
          "description": "The URL of the cluster master.",
          "args": []
        },
        {
          "name": "name",
          "description": "The name of the cluster.",
          "args": []
        },
        {
          "name": "public_service_endpoint",
          "description": "Indicates if the public service endpoint is enabled (**true**) or disabled (**false**) for a cluster.",
          "args": []
        },
        {
          "name": "public_service_endpoint_url",
          "description": "The URL of the public service endpoint for your cluster.",
          "args": []
        },
        {
          "name": "private_service_endpoint",
          "description": "Indicates if the private service endpoint is enabled (**true**) or disabled (**false**) for a cluster.",
          "args": []
        },
        {
          "name": "private_service_endpoint_url",
          "description": "The URL of the private service endpoint for your cluster.",
          "args": []
        },
        {
          "name": "status",
          "description": "The status of the cluster master.",
          "args": []
        },
        {
          "name": "worker_count",
          "description": "The number of worker nodes per zone in the default worker pool. Default value ‘1’.",
          "args": []
        },
        {
          "name": "workers",
          "description": "A list of worker nodes that belong to the cluster.",
          "args": []
        },
        {
          "name": "worker_pools",
          "description": "A list of worker pools that exist in the cluster.",
          "args": [
            {
              "name": "flavor",
              "description": "The flavor that is used for the worker nodes in the worker pool.",
              "args": []
            },
            {
              "name": "name",
              "description": "The name of the worker pool.",
              "args": []
            },
            {
              "name": "worker_count",
              "description": "The total number of worker nodes in this worker pool.",
              "args": []
            },
            {
              "name": "isolation",
              "description": "The level of hardware isolation for the worker node. For VPC clusters, this value is always `shared`.",
              "args": []
            },
            {
              "name": "id",
              "description": "The ID of the worker pool.",
              "args": []
            },
            {
              "name": "labels",
              "description": "A list of labels that are added to the worker pool.",
              "args": []
            },
            {
              "name": "zones",
              "description": "A list of zones that are attached to the worker pool.",
              "args": [
                {
                  "name": "zone",
                  "description": "The name of the zone.",
                  "args": []
                },
                {
                  "name": "worker_count",
                  "description": "The number of worker nodes in this worker pool.",
                  "args": []
                },
                {
                  "name": "subnets",
                  "description": "The ID of the subnet that the worker pool is attached to in the zone.",
                  "args": [
                    {
                      "name": "id",
                      "description": "The ID of the subnet that the worker pool is attached to in the zone.",
                      "args": []
                    },
                    {
                      "name": "primary",
                      "description": "If set to **true**, the subnet is used as the primary subnet.",
                      "args": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    "ibm_container_vpc_cluster_worker": {
      "name": "ibm_container_vpc_cluster_worker",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Kubernetes Service data sources",
      "args": [
        {
          "name": "cluster_name_id",
          "description": "(Required, String) The name or ID of the cluster that the worker node belongs to.",
          "args": []
        },
        {
          "name": "flavor",
          "description": "(Optional, String) The flavor of the worker node.",
          "args": []
        },
        {
          "name": "resource_group_id",
          "description": "(Optional, String) The ID of the resource group where your cluster is provisioned into. To find the resource group, run `ibmcloud resource groups` or use the `ibm_resource_group` data source. If this parameter is not provided, the `default` resource group is used.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "cidr",
          "description": "The CIDR of the network.",
          "args": []
        },
        {
          "name": "ip_address",
          "description": "The IP address of the worker pool that the worker node belongs to.",
          "args": []
        },
        {
          "name": "network_interfaces",
          "description": "The network interface of the cluster.",
          "args": []
        },
        {
          "name": "pool_id",
          "description": "The ID of the worker pool that the worker node belongs to.",
          "args": []
        },
        {
          "name": "pool_name",
          "description": "The name of the worker pool that the worker node belongs to.",
          "args": []
        },
        {
          "name": "state",
          "description": "The state of the worker node.",
          "args": []
        },
        {
          "name": "subnet_id",
          "description": "The ID of the worker pool subnet that the worker node is attached to.",
          "args": []
        }
      ]
    },
    "ibm_container_vpc_worker_pool": {
      "name": "ibm_container_vpc_worker_pool",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Kubernetes Service data sources",
      "args": [
        {
          "name": "worker_pool_name",
          "description": "(Required, String) The name of the worker pool.",
          "args": []
        },
        {
          "name": "cluster",
          "description": "(Required, String) The name or ID of the cluster.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the worker pool resource, as <cluster_name_id>/<worker_pool_id>.",
          "args": []
        },
        {
          "name": "vpc_id",
          "description": "The ID of the VPC.",
          "args": []
        },
        {
          "name": "worker_count",
          "description": "The number of worker nodes per zone in the worker pool.",
          "args": []
        },
        {
          "name": "flavor",
          "description": "The flavour of the worker node.",
          "args": []
        },
        {
          "name": "zones",
          "description": "The name of the load balancer.",
          "args": []
        },
        {
          "name": "resize",
          "description": "Resize of the ALB.",
          "args": []
        },
        {
          "name": "state",
          "description": "ALB state.",
          "args": []
        },
        {
          "name": "status",
          "description": "The status of the ALB.",
          "args": []
        },
        {
          "name": "zone",
          "description": "A nested block describes the zones of the worker_pool. Nested zones blocks has `subnet-id` and `name`.",
          "args": [
            {
              "name": "subnet-id",
              "description": "The worker pool subnet to assign the cluster.",
              "args": []
            },
            {
              "name": "subnet-name",
              "description": "Name of the zone.",
              "args": []
            }
          ]
        },
        {
          "name": "labels",
          "description": "Labels on all the workers in the worker pool.",
          "args": []
        },
        {
          "name": "resource_group_id",
          "description": "The ID of the resource group.",
          "args": []
        },
        {
          "name": "provider",
          "description": "Provider Details of the worker Pool.",
          "args": []
        },
        {
          "name": "isolation",
          "description": "Isolation for the worker node.",
          "args": []
        }
      ]
    },
    "ibm_container_worker_pool": {
      "name": "ibm_container_worker_pool",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Kubernetes Service data sources",
      "args": [
        {
          "name": "cluster",
          "description": "(Required, String) The name or ID of the cluster.",
          "args": []
        },
        {
          "name": "worker_pool_name",
          "description": "(Required, String) The name of the worker pool that need to be retrieved.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the worker pool.",
          "args": []
        },
        {
          "name": "state",
          "description": "Worker pool state.",
          "args": []
        },
        {
          "name": "zones",
          "description": "List of zones attached to the worker_pool.",
          "args": [
            {
              "name": "zone",
              "description": "Zone name.",
              "args": []
            },
            {
              "name": "private_vlan",
              "description": "The ID of the private VLAN.",
              "args": []
            },
            {
              "name": "public_vlan",
              "description": "The ID of the public VLAN.",
              "args": []
            },
            {
              "name": "worker_count",
              "description": "Number of workers attached to this zone.",
              "args": []
            }
          ]
        },
        {
          "name": "machine_type",
          "description": "The machine type of the worker node.",
          "args": []
        },
        {
          "name": "size_per_zone",
          "description": "Number of workers per zone in this pool.",
          "args": []
        },
        {
          "name": "hardware",
          "description": "The level of hardware isolation for your worker node.",
          "args": []
        },
        {
          "name": "disk_encryption",
          "description": "Disk encryption on a worker.",
          "args": []
        },
        {
          "name": "labels",
          "description": "Labels on all the workers in the worker pool.",
          "args": []
        },
        {
          "name": "resource_group_id",
          "description": "The ID of the worker pool resource group.",
          "args": []
        }
      ]
    },
    "ibm_cos_bucket": {
      "name": "ibm_cos_bucket",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Object Storage data sources",
      "args": [
        {
          "name": "bucket_name",
          "description": "(Required, String) The name of the bucket.",
          "args": []
        },
        {
          "name": "bucket_region",
          "description": "(Required, String) The region of the bucket.",
          "args": []
        },
        {
          "name": "bucket_type",
          "description": "(Required, String) The type of the bucket. Supported values are `single_site_location`, `region_location`, and `cross_region_location`.",
          "args": []
        },
        {
          "name": "endpoint_type",
          "description": "(Optional, String) The type of the endpoint either public or private to be used for the buckets. Default value is `public`.",
          "args": []
        },
        {
          "name": "resource_instance_id",
          "description": "(Required, String) The ID of the IBM Cloud Object Storage service instance for which you want to create a bucket.",
          "args": []
        },
        {
          "name": "storage_class",
          "description": "(Required, String) Storage class of the bucket. Supported values are `standard`, `vault`, `cold`, `flex`, `smart`.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "allowed_ip",
          "description": "List of `IPv4` or `IPv6` addresses in CIDR notation to be affected by firewall.",
          "args": []
        },
        {
          "name": "activity_tracking",
          "description": "Nested block with the following structure.",
          "args": [
            {
              "name": "read_data_events",
              "description": "Enables sending log data to Activity Tracker and LogDNA to provide visibility into an object read and write events.",
              "args": []
            },
            {
              "name": "write_data_events",
              "description": "If set to `true`, all object write events (that is `uploads`) is sent to Activity Tracker.",
              "args": []
            },
            {
              "name": "activity_tracker_crn",
              "description": "The first time activity_tracking is configured.",
              "args": []
            }
          ]
        },
        {
          "name": "archive_rule",
          "description": "Nested block with the following structure.",
          "args": [
            {
              "name": "rule_id",
              "description": "Unique identifier for the rule. Archive rules allow you to set a specific time frame after which objects transition to archive.",
              "args": []
            },
            {
              "name": "enable",
              "description": "Specifies archive rule status either `enable` or `disable` for a bucket.",
              "args": []
            },
            {
              "name": "days",
              "description": "Specifies the number of days when the specific rule action takes effect.",
              "args": []
            },
            {
              "name": "type",
              "description": "Specifies the storage class or archive type to which you want the object to transition. Supported values are `Glacier` or `Accelerated`.",
              "args": []
            }
          ]
        },
        {
          "name": "crn",
          "description": "The CRN of the bucket.",
          "args": []
        },
        {
          "name": "cross_region_location",
          "description": "The location to create a cross-regional bucket.",
          "args": []
        },
        {
          "name": "expire_rule",
          "description": "Nested block with the following structure.",
          "args": [
            {
              "name": "rule_id",
              "description": "Unique identifier for the rule. Expire rules allow you to set a specific time frame after which objects are deleted.",
              "args": []
            },
            {
              "name": "enable",
              "description": "Specifies expire rule status either `enable` or `disable` for a bucket.",
              "args": []
            },
            {
              "name": "days",
              "description": "Specifies the number of days when the specific rule action takes effect.",
              "args": []
            },
            {
              "name": "prefix",
              "description": "Specifies a prefix filter to apply to only a subset of objects with names that match the prefix.",
              "args": []
            }
          ]
        },
        {
          "name": "id",
          "description": "The ID of the bucket.",
          "args": []
        },
        {
          "name": "key_protect",
          "description": "The CRN of the IBM Key Protect instance where a root key is already provisioned.",
          "args": []
        },
        {
          "name": "metrics_monitoring",
          "description": "Nested block with the following structure",
          "args": [
            {
              "name": "metrics_monitoring_crn",
              "description": "The first time `metrics_monitoring` is configured. The instance of IBM Cloud monitoring that will receive the bucket metrics.",
              "args": []
            }
          ]
        },
        {
          "name": "region_location",
          "description": "The location to create a regional bucket.",
          "args": []
        },
        {
          "name": "resource_instance_id",
          "description": "The ID of {site.data.keyword.cos_full_notm}} instance.",
          "args": []
        },
        {
          "name": "single_site_location",
          "description": "The location to create a single site bucket.",
          "args": []
        },
        {
          "name": "storage_class",
          "description": "The storage class of the bucket.",
          "args": []
        }
      ]
    },
    "ibm_cr_namespaces": {
      "name": "ibm_cr_namespaces",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Kubernetes Service data sources",
      "args": [],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the namespace datasource.",
          "args": []
        },
        {
          "name": "namespaces",
          "description": "List of namespaces available in the account.",
          "args": [
            {
              "name": "name",
              "description": "The name of the namespace to create.",
              "args": []
            },
            {
              "name": "resource_group_id",
              "description": "ID of the resource group to which the namespace is assigned.",
              "args": []
            },
            {
              "name": "crn",
              "description": "The `CRN` of the namespace.",
              "args": []
            },
            {
              "name": "created_on",
              "description": "The created time of the namespace.",
              "args": []
            },
            {
              "name": "updated_on",
              "description": "The updated time of the namespace.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_database": {
      "name": "ibm_database",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Cloud Databases data sources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the Cloud Databases instance. IBM Cloud does not enforce that service names are unique and it is possible that duplicate service names exist. The first located service instance is used by Terraform. The name must not include spaces.",
          "args": []
        },
        {
          "name": "resource_group_id",
          "description": "(Optional, String) The ID of the resource group where the Cloud Databases instance is deployed into. The default is `default`.",
          "args": []
        },
        {
          "name": "location",
          "description": "(Optional, String) The location where the Cloud Databases instance is deployed into.",
          "args": []
        },
        {
          "name": "service",
          "description": "(Optional, String) The service type of the instance. To retrieve this value, run `ibmcloud catalog service-marketplace` or `ibmcloud catalog search`.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The CRN of the Cloud Databases instance.",
          "args": []
        },
        {
          "name": "guid",
          "description": "The unique identifier of the Cloud Databases instance.",
          "args": []
        },
        {
          "name": "plan",
          "description": "The service plan of the Cloud Databases instance.",
          "args": []
        },
        {
          "name": "location",
          "description": "The location where the Cloud Databases instance is deployed into.",
          "args": []
        },
        {
          "name": "status",
          "description": "The status of the Cloud Databases instance.",
          "args": []
        },
        {
          "name": "status",
          "description": "The status of resource instance.",
          "args": []
        },
        {
          "name": "adminuser",
          "description": "The user ID of the default administration user for the database, such as `admin` or `root`.",
          "args": []
        },
        {
          "name": "version",
          "description": "The database version.",
          "args": []
        },
        {
          "name": "platform_options",
          "args": [
            {
              "name": "key_protect_key_id",
              "description": "The CRN of key protect key.",
              "args": []
            },
            {
              "name": "disk_encryption_key_crn",
              "description": "The CRN of disk encryption key.",
              "args": []
            },
            {
              "name": "backup_encryption_key_crn",
              "description": "The CRN of backup encryption key.",
              "args": []
            }
          ]
        },
        {
          "name": "connectionstrings",
          "description": "List of connection strings by userid for the database. For information about how to use connection strings, see the [documentation](/docs/databases-for-postgresql?topic=databases-for-postgresql-connection-strings). The results are returned in pairs of the userid and string: `connectionstrings.1.name = admin connectionstrings.1.string = postgres://admin:$PASSWORD@12345aa1-1111-1111-a1aa-a1aaa11aa1a1.a1a1a111a1a11a1a111a111a1a111a111.databases.appdomain.cloud:32554/ibmclouddb?sslmode=verify-full`",
          "args": []
        },
        {
          "name": "cert_file_path",
          "description": "The absolute path to certificate PEM file.",
          "args": []
        },
        {
          "name": "auto_scaling",
          "description": "Configure rules to allow your database to automatically increase its resources. Single block of autoscaling is allowed at once.",
          "args": [
            {
              "name": "cpu",
              "description": "Autoscaling CPU.",
              "args": [
                {
                  "name": "rate_increase_percent",
                  "description": "Auto scaling rate in increase percent.",
                  "args": []
                },
                {
                  "name": "rate_limit_count_per_member",
                  "description": "Auto scaling rate limit in count per number.",
                  "args": []
                },
                {
                  "name": "rate_period_seconds",
                  "description": "Auto scaling rate in period seconds.",
                  "args": []
                },
                {
                  "name": "rate_units",
                  "description": "Auto scaling rate in units.",
                  "args": []
                }
              ]
            },
            {
              "name": "disk",
              "description": "Disk auto scaling.",
              "args": [
                {
                  "name": "capacity_enabled",
                  "description": "Auto scaling scalar enables or disables the scalar capacity.",
                  "args": []
                },
                {
                  "name": "free_space_less_than_percent",
                  "description": "Auto scaling scalar capacity free space less than percent.",
                  "args": []
                },
                {
                  "name": "io_above_percent",
                  "description": "Auto scaling scalar I/O utilization above percent.",
                  "args": []
                },
                {
                  "name": "io_enabled",
                  "description": "Auto scaling scalar I/O utilization enabled.",
                  "args": []
                },
                {
                  "name": "io_over_period",
                  "description": "Auto scaling scalar I/O utilization over period.",
                  "args": []
                },
                {
                  "name": "rate_increase_percent",
                  "description": "Auto scaling rate increase percent.",
                  "args": []
                },
                {
                  "name": "rate_limit_mb_per_member",
                  "description": "Auto scaling rate limit in megabytes per member.",
                  "args": []
                },
                {
                  "name": "rate_period_seconds",
                  "description": "Auto scaling rate period in seconds.",
                  "args": []
                },
                {
                  "name": "rate_units",
                  "description": "Auto scaling rate in units.",
                  "args": []
                }
              ]
            },
            {
              "name": "memory",
              "description": "Memory Auto Scaling.",
              "args": [
                {
                  "name": "io_enabled",
                  "description": "Auto scaling scalar I/O utilization enabled.",
                  "args": []
                },
                {
                  "name": "io_over_period",
                  "description": "Auto scaling scalar I/O utilization over period.",
                  "args": []
                },
                {
                  "name": "rate_increase_percent",
                  "description": "Auto scaling rate in increase percent.",
                  "args": []
                },
                {
                  "name": "rate_limit_mb_per_member",
                  "description": "Auto scaling rate limit in megabytes per member.",
                  "args": []
                },
                {
                  "name": "rate_period_seconds",
                  "description": "Auto scaling rate period in seconds.",
                  "args": []
                },
                {
                  "name": "rate_units",
                  "description": "Auto scaling rate in units.",
                  "args": []
                }
              ]
            },
            {
              "name": "io_above_percent",
              "description": "Auto scaling scalar I/O utilization above percent.",
              "args": []
            }
          ]
        },
        {
          "name": "whitelist",
          "description": "A list of allowed IP addresses or ranges.",
          "args": []
        }
      ]
    },
    "ibm_dl_gateway": {
      "name": "ibm_dl_gateway",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Direct Link Gateway data sources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The unique user-defined name for the gateway.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "bgp_asn",
          "description": "Customer BGP ASN.",
          "args": []
        },
        {
          "name": "created_at",
          "description": "The date and time resource is created.",
          "args": []
        },
        {
          "name": "crn",
          "description": "The CRN of the gateway.",
          "args": []
        },
        {
          "name": "global",
          "description": "Gateway with global routing as `true` can connect networks outside your associated region.",
          "args": []
        },
        {
          "name": "id",
          "description": "The unique identifier of the gateway.",
          "args": []
        },
        {
          "name": "location_display_name",
          "description": "Long name of the gateway location.",
          "args": []
        },
        {
          "name": "location_name",
          "description": "The location name of the gateway.",
          "args": []
        },
        {
          "name": "metered",
          "description": "Metered billing option. If set `true` gateway usage is billed per GB. Otherwise, flat rate is charged for the gateway.",
          "args": []
        },
        {
          "name": "operational_status",
          "description": "The gateway operational status",
          "args": []
        },
        {
          "name": "resource_group",
          "description": "The resource group identifier.",
          "args": []
        },
        {
          "name": "speed_mbps",
          "description": "The gateway speed in MBPS.",
          "args": []
        },
        {
          "name": "type",
          "description": "The gateway type.",
          "args": []
        },
        {
          "name": "bgp_base_cidr",
          "description": "The BGP base CIDR.",
          "args": []
        },
        {
          "name": "bgp_cer_cidr",
          "description": "The BGP customer edge router CIDR.",
          "args": []
        },
        {
          "name": "bgp_ibm_asn",
          "description": "The {{site.data.keyword.IBM_notm}} BGP ASN.",
          "args": []
        },
        {
          "name": "bgp_ibm_cidr",
          "description": "The {{site.data.keyword.IBM_notm}} BGP  CIDR.",
          "args": []
        },
        {
          "name": "bgp_status",
          "description": "The gateway BGP status.",
          "args": []
        },
        {
          "name": "completion_notice_reject_reason",
          "description": "The reason for completion notice rejection. Only included on a dedicated gateways type with a rejected completion notice.",
          "args": []
        },
        {
          "name": "cross_connect_router",
          "description": "The cross connect router. Only included on a dedicated gateways type.",
          "args": []
        },
        {
          "name": "port",
          "description": "The port identifier.",
          "args": []
        },
        {
          "name": "provider_api_managed",
          "description": "Indicates the gateway is created through a provider portal. If set `true`, gateway can only be changed. If set `false`, gateway is deleted through the corresponding provider portal.",
          "args": []
        },
        {
          "name": "vlan",
          "description": "The VLAN allocated for the gateway. Only set for connect gateways type created directly through the {{site.data.keyword.IBM_notm}} portal.",
          "args": []
        },
        {
          "name": "virtual_connections",
          "description": "List of the specified gateway's virtual connections.",
          "args": [
            {
              "name": "created_at",
              "description": "The creation date and time resource.",
              "args": []
            },
            {
              "name": "id",
              "description": "The unique identifier of the virtual connection. For example, `ef4dcbtyu1a-fee4-41c7-9e11-9cd99e65c1f4`",
              "args": []
            },
            {
              "name": "name",
              "description": "The unique user-defined name of the only virtual connection in the gateway.",
              "args": []
            },
            {
              "name": "status",
              "description": "The status of the virtual connection. Possible values are `pending`,`attached`,`approval_pending`,`rejected`,`expired`,`deleting`,`detached_by_network_pending`,`detached_by_network`.",
              "args": []
            },
            {
              "name": "type",
              "description": "The virtual connection type. Possible values are `classic`,`vpc`.",
              "args": []
            },
            {
              "name": "network_id",
              "description": "The unique identifier of the target network. For type `vpc`, virtual connections is the CRN of the target VPC. This field do not apply for type `classic` connections. For example, `crn:v1:bluemix:public:is:us-east:a/28e4d90ac7504be69447111122223333::vpc:aaa81ac8-5e96-42a0-a4b7-6c2e2dbb`",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_dl_gateways": {
      "name": "ibm_dl_gateways",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Direct Link Gateway data sources",
      "args": [],
      "attrs": [
        {
          "name": "gateways",
          "description": "List of all the direct link gateways in the IBM Cloud infrastructure.",
          "args": [
            {
              "name": "bgp_asn",
              "description": "Customer BGP ASN.",
              "args": []
            },
            {
              "name": "created_at",
              "description": "The date and time resource is created.",
              "args": []
            },
            {
              "name": "crn",
              "description": "The CRN of the gateway.",
              "args": []
            },
            {
              "name": "global",
              "description": "Gateway with global routing as `true` can connect networks outside your associated region.",
              "args": []
            },
            {
              "name": "id",
              "description": "The unique identifier of the gateway.",
              "args": []
            },
            {
              "name": "location_display_name",
              "description": "Long name of the gateway location.",
              "args": []
            },
            {
              "name": "location_name",
              "description": "The location name of the gateway.",
              "args": []
            },
            {
              "name": "metered",
              "description": "Metered billing option. If set `true` gateway usage is billed per GB. Otherwise, flat rate is charged for the gateway.",
              "args": []
            },
            {
              "name": "name",
              "description": "The unique user defined name of the gateway.",
              "args": []
            },
            {
              "name": "operational_status",
              "description": "The gateway operational status",
              "args": []
            },
            {
              "name": "resource_group",
              "description": "The resource group identifier.",
              "args": []
            },
            {
              "name": "speed_mbps",
              "description": "The gateway speed in MBPS.",
              "args": []
            },
            {
              "name": "type",
              "description": "The gateway type.",
              "args": []
            },
            {
              "name": "bgp_base_cidr",
              "description": "The BGP base CIDR.",
              "args": []
            },
            {
              "name": "bgp_cer_cidr",
              "description": "The BGP customer edge router CIDR.",
              "args": []
            },
            {
              "name": "bgp_ibm_asn",
              "description": "The {{site.data.keyword.IBM_notm}} BGP ASN.",
              "args": []
            },
            {
              "name": "bgp_ibm_cidr",
              "description": "The {{site.data.keyword.IBM_notm}} BGP  CIDR.",
              "args": []
            },
            {
              "name": "bgp_status",
              "description": "The gateway BGP status.",
              "args": []
            },
            {
              "name": "completion_notice_reject_reason",
              "description": "The reason for completion notice rejection. Only included on a dedicated gateways type with a rejected completion notice.",
              "args": []
            },
            {
              "name": "cross_connect_router",
              "description": "The cross connect router. Only included on a dedicated gateways type.",
              "args": []
            },
            {
              "name": "port",
              "description": "The port identifier.",
              "args": []
            },
            {
              "name": "provider_api_managed",
              "description": "Indicates the gateway is created through a provider portal. If set `true`, gateway can only be changed. If set `false`, gateway is deleted through the corresponding provider portal.",
              "args": []
            },
            {
              "name": "vlan",
              "description": "The VLAN allocated for the gateway. Only set for connect gateways type created directly through the {{site.data.keyword.IBM_notm}} portal.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_dl_locations": {
      "name": "ibm_dl_locations",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Direct Link Gateway data sources",
      "args": [
        {
          "name": "offering_type",
          "description": "(Required, String) The direct link offering type. Possible values are `dedicated`,`connect`.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "locations",
          "description": "List of all the direct link locations in the IBM Cloud infrastructure.",
          "args": [
            {
              "name": "billing_location",
              "description": "The billing location.",
              "args": []
            },
            {
              "name": "building_colocation_owner",
              "description": "The building co-location owner. Only present for dedicated offering type locations.",
              "args": []
            },
            {
              "name": "name",
              "description": "The location short name.",
              "args": []
            },
            {
              "name": "display_name",
              "description": "The location long name.",
              "args": []
            },
            {
              "name": "location_type",
              "description": "The location type.",
              "args": []
            },
            {
              "name": "market",
              "description": "The market location.",
              "args": []
            },
            {
              "name": "market_geography",
              "description": "The location geography.",
              "args": []
            },
            {
              "name": "mzr",
              "description": "Is location a multi-zone region.",
              "args": []
            },
            {
              "name": "vpc_region",
              "description": "The location VPC region.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_dl_offering_speeds": {
      "name": "ibm_dl_offering_speeds",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Direct Link Gateway data sources",
      "args": [
        {
          "name": "offering_type",
          "description": "(Required, String) The direct link offering type. Possible values are `dedicated`,`connect`.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "offering_speeds",
          "description": "List of all the direct link offering speeds in the IBM Cloud infrastructure.",
          "args": [
            {
              "name": "link_speed",
              "description": "The link speed in megabits per second.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_dl_port": {
      "name": "ibm_dl_port",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Direct Link Gateway data sources",
      "args": [
        {
          "name": "port_id",
          "description": "(Required, String) The unique ID for the direct link port.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "direct_link_count",
          "description": "The count of the existing direct link gateways on the port.",
          "args": []
        },
        {
          "name": "label",
          "description": "The port label.",
          "args": []
        },
        {
          "name": "location_display_name",
          "description": "The port location long name.",
          "args": []
        },
        {
          "name": "location_name",
          "description": "The port location name.",
          "args": []
        },
        {
          "name": "provider_name",
          "description": "The port's provider name.",
          "args": []
        },
        {
          "name": "supported_link_speeds",
          "description": "The port supported speeds in megabits per second.",
          "args": []
        }
      ]
    },
    "ibm_dl_ports": {
      "name": "ibm_dl_ports",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Direct Link Gateway data sources",
      "args": [],
      "attrs": [
        {
          "name": "ports",
          "description": "List of all the direct link ports.",
          "args": [
            {
              "name": "direct_link_count",
              "description": "Count of the existing direct link gateways in this port account.",
              "args": []
            },
            {
              "name": "label",
              "description": "The port label.",
              "args": []
            },
            {
              "name": "location_display_name",
              "description": "The port location long name.",
              "args": []
            },
            {
              "name": "location_name",
              "description": "The port location name.",
              "args": []
            },
            {
              "name": "id",
              "description": "The port identifier.",
              "args": []
            },
            {
              "name": "provider_name",
              "description": "The port's provider name.",
              "args": []
            },
            {
              "name": "supported_link_speeds",
              "description": "The port supported speeds in megabits per second.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_dl_provider_gateways": {
      "name": "ibm_dl_provider_gateways",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Direct Link Gateway data sources",
      "args": [],
      "attrs": [
        {
          "name": "gateways",
          "description": "List of all the direct link ports.List of all Direct Link provider gateways in the IBM Cloud Infrastructure.",
          "args": [
            {
              "name": "bgp_asn",
              "description": "The customer BGP ASN.",
              "args": []
            },
            {
              "name": "created_at",
              "description": "The date and time resource was created.",
              "args": []
            },
            {
              "name": "crn",
              "description": "The CRN of the gateway.",
              "args": []
            },
            {
              "name": "global",
              "description": "The gateways with global routing set as `true` can connect to networks outside their associated region.",
              "args": []
            },
            {
              "name": "id",
              "description": "The unique identifier of the gateway.",
              "args": []
            },
            {
              "name": "name",
              "description": "The unique user defined name for the gateway.",
              "args": []
            },
            {
              "name": "operational_status",
              "description": "The operational status of the gateway.",
              "args": []
            },
            {
              "name": "resource_group",
              "description": "The resource group identifier.",
              "args": []
            },
            {
              "name": "speed_mbps",
              "description": "The gateway speed in megabits per second.",
              "args": []
            },
            {
              "name": "type",
              "description": "The gateway type.",
              "args": []
            },
            {
              "name": "bgp_cer_cidr",
              "description": "The BGP customer edge router CIDR.",
              "args": []
            },
            {
              "name": "bgp_ibm_asn",
              "description": "The IBM BGP ASN.",
              "args": []
            },
            {
              "name": "bgp_ibm_cidr",
              "description": "The IBM BGP CIDR.",
              "args": []
            },
            {
              "name": "bgp_status",
              "description": "The gateway BGP status.",
              "args": []
            },
            {
              "name": "port",
              "description": "The port identifier.",
              "args": []
            },
            {
              "name": "provider_api_managed",
              "description": "Indicates whether gateway was created through a provider portal. If set `true`, gateway can only be changed or deleted through the corresponding provider portal.",
              "args": []
            },
            {
              "name": "vlan",
              "description": "The VLAN allocated for the gateway. Only set for `type=connect` gateways created directly through the IBM portal.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_dl_provider_ports": {
      "name": "ibm_dl_provider_ports",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Direct Link Gateway data sources",
      "args": [],
      "attrs": [
        {
          "name": "ports",
          "description": "List of all the direct link ports in the IBM Cloud infrastructure.",
          "args": [
            {
              "name": "label",
              "description": "The port label.",
              "args": []
            },
            {
              "name": "location_display_name",
              "description": "The port location long name.",
              "args": []
            },
            {
              "name": "location_name",
              "description": "The port location name.",
              "args": []
            },
            {
              "name": "port_id",
              "description": "The port identifier.",
              "args": []
            },
            {
              "name": "provider_name",
              "description": "The port's provider name.",
              "args": []
            },
            {
              "name": "supported_link_speeds",
              "description": "The port supported speeds in megabits per second.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_dl_routers": {
      "name": "ibm_dl_routers",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Direct Link Gateway data sources",
      "args": [
        {
          "name": "offering_type",
          "description": "(Required, String) The direct link offering type. Only `dedicated` is supported in this API.",
          "args": []
        },
        {
          "name": "location_name",
          "description": "(Required, String) The name of the direct link location.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "cross_connect_routers",
          "description": "List of all the cross connect router details.",
          "args": [
            {
              "name": "router_name",
              "description": "The name of the router.",
              "args": []
            },
            {
              "name": "total_connections",
              "description": "Count of existing direct link dedicated gateways on this router account.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_dns_domain": {
      "name": "ibm_dns_domain",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure data sources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the domain.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the domain.",
          "args": []
        }
      ]
    },
    "ibm_dns_domain_registration": {
      "name": "ibm_dns_domain_registration",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure data sources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the DNS domain registration as it was defined in IBM Cloud Infrastructure DNS Registration Service.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the domain.",
          "args": []
        }
      ]
    },
    "ibm_dns_secondary": {
      "name": "ibm_dns_secondary",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure data sources",
      "args": [
        {
          "name": "zone_name",
          "description": "(Required, String) The name of the secondary zone.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the secondary.",
          "args": []
        },
        {
          "name": "transfer_frequency",
          "description": "Signifies how often a secondary DNS zone transferred in minutes.",
          "args": []
        },
        {
          "name": "master_ip_address",
          "description": "The IP address of the master name server where a secondary DNS zone is transferred from.",
          "args": []
        },
        {
          "name": "status_id",
          "description": "The status of a secondary DNS record.",
          "args": []
        },
        {
          "name": "status_text",
          "description": "The textual representation of a secondary DNS zone's status.",
          "args": []
        }
      ]
    },
    "ibm_event_streams_topic": {
      "name": "ibm_event_streams_topic",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Event Streams data sources",
      "args": [
        {
          "name": "resource_instance_id",
          "description": "(Required, String) The ID/CRN of the Event Streams service instance.",
          "args": []
        },
        {
          "name": "name",
          "description": "(Required, String) The name of the topic.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The ID of the topic in CRN format. For example, `crn:v1:bluemix:public:messagehub:us-south:a/6db1b0d0b5c54ee5c201552547febcd8:cb5a0252-8b8d-4390-b017-80b743d32839:topic:my-es-topic`",
          "args": []
        },
        {
          "name": "kafka_http_url",
          "description": "The API endpoint for interacting with Event Streams REST API.",
          "args": []
        },
        {
          "name": "kafka_brokers_sasl",
          "description": "Kafka brokers use for interacting with Kafka native API.",
          "args": []
        }
      ]
    },
    "ibm_function_action": {
      "name": "ibm_function_action",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Functions data sources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the action.",
          "args": []
        },
        {
          "name": "namespace",
          "description": "(Required, String) The name of the function namespace.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The ID of the action.",
          "args": []
        },
        {
          "name": "namespace",
          "description": "The name of the function namespace.",
          "args": []
        },
        {
          "name": "version",
          "description": "The version of the action.",
          "args": []
        },
        {
          "name": "annotations",
          "description": "Annotations to describe the action, including those set by you or by IBM Cloud Functions.",
          "args": []
        },
        {
          "name": "parameters",
          "description": "Parameters passed to the action when the action is invoked, including those set by you or by IBM Cloud Functions.",
          "args": []
        },
        {
          "name": "limits",
          "description": "A nested block to describe assigned limits.",
          "args": [
            {
              "name": "timeout",
              "description": "The timeout limit to terminate the action, specified in milliseconds. Default value is `60000`.",
              "args": []
            },
            {
              "name": "memory",
              "description": "The maximum memory for the action, specified in megabytes. Default value is `256`.",
              "args": []
            },
            {
              "name": "log_size",
              "description": "The maximum log size for the action, specified in megabytes. Default value is `10`.",
              "args": []
            }
          ]
        },
        {
          "name": "exec",
          "description": "A nested block to describe executable binaries.",
          "args": [
            {
              "name": "image",
              "description": "When using the `blackbox` executable, the name of the container image name.",
              "args": []
            },
            {
              "name": "init",
              "description": "When using `nodejs`, the optional reference to the compressed file.",
              "args": []
            },
            {
              "name": "code",
              "description": "When not using the `blackbox` executable, the code to execute.",
              "args": []
            },
            {
              "name": "kind",
              "description": "The type of action. Accepted values: `nodejs`, `blackbox`, `swift`, `sequence`.",
              "args": []
            },
            {
              "name": "main",
              "description": "The name of the action entry point (function or fully-qualified method name, when applicable).",
              "args": []
            },
            {
              "name": "components",
              "description": "The list of fully qualified actions.",
              "args": []
            }
          ]
        },
        {
          "name": "publish",
          "description": "Action visibility.",
          "args": []
        },
        {
          "name": "action_id",
          "description": "Action ID.",
          "args": []
        }
      ]
    },
    "ibm_function_namespace": {
      "name": "ibm_function_namespace",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Functions data sources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the namespace.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The ID of the namespace.",
          "args": []
        },
        {
          "name": "resource_group_id",
          "description": "The ID of the resource group.",
          "args": []
        },
        {
          "name": "location",
          "description": "The target location of the namespace.",
          "args": []
        }
      ]
    },
    "ibm_function_package": {
      "name": "ibm_function_package",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Functions data sources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the package.",
          "args": []
        },
        {
          "name": "namespace",
          "description": "(Required, String) The name of the function namespace.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The ID of the package.",
          "args": []
        },
        {
          "name": "namespace",
          "description": "The name of the function namespace.",
          "args": []
        },
        {
          "name": "version",
          "description": "Semantic version of the package.",
          "args": []
        },
        {
          "name": "publish",
          "description": "Package visibility.",
          "args": []
        },
        {
          "name": "annotations",
          "description": "All annotations to describe the package, including those set by you or by IBM Cloud Functions.",
          "args": []
        },
        {
          "name": "parameters",
          "description": "All parameters passed to the package, including those set by you or by IBM Cloud Functions.",
          "args": []
        },
        {
          "name": "package_id",
          "description": "The package ID.",
          "args": []
        }
      ]
    },
    "ibm_function_rule": {
      "name": "ibm_function_rule",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Functions data sources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the rule.",
          "args": []
        },
        {
          "name": "namespace",
          "description": "(Required, String) The name of the function namespace.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The ID of the rule.",
          "args": []
        },
        {
          "name": "namespace",
          "description": "The name of the function namespace.",
          "args": []
        },
        {
          "name": "publish",
          "description": "Rule visibility.",
          "args": []
        },
        {
          "name": "version",
          "description": "Semantic version of the rule.",
          "args": []
        },
        {
          "name": "status",
          "description": "The status of the rule.",
          "args": []
        },
        {
          "name": "trigger_name",
          "description": "The name of the trigger that the rule belongs to.",
          "args": []
        },
        {
          "name": "action_name",
          "description": "The name of the action that the rule belongs to.",
          "args": []
        },
        {
          "name": "rule_id",
          "description": "The rule ID.",
          "args": []
        }
      ]
    },
    "ibm_function_trigger": {
      "name": "ibm_function_trigger",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Functions data sources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the trigger.",
          "args": []
        },
        {
          "name": "namespace",
          "description": "(Required, String) The name of the function namespace.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The ID of the trigger.",
          "args": []
        },
        {
          "name": "namespace",
          "description": "The name of the function namespace.",
          "args": []
        },
        {
          "name": "publish",
          "description": "Trigger visibility.",
          "args": []
        },
        {
          "name": "version",
          "description": "Semantic version of the trigger.",
          "args": []
        },
        {
          "name": "annotations",
          "description": "All annotations to describe the trigger, including those set by you or by IBM Cloud Functions.",
          "args": []
        },
        {
          "name": "parameters",
          "description": "All parameters passed to the trigger, including those set by you or by IBM Cloud Functions.",
          "args": []
        },
        {
          "name": "trigger_id",
          "description": "The trigger ID.",
          "args": []
        }
      ]
    },
    "ibm_iam_access_group": {
      "name": "ibm_iam_access_group",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Identity & Access (IAM) data sources",
      "args": [
        {
          "name": "access_group_name",
          "description": "(Optional, String) The name of the access group that you want to retrieve details for. If no access group is specified, all access groups that exist in the IBM Cloud account are returned.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "groups",
          "description": "A list of IAM access groups that are set up for an IBM Cloud account.",
          "args": [
            {
              "name": "id",
              "description": "The ID of the IAM access group.",
              "args": []
            },
            {
              "name": "name",
              "description": "The name of the IAM access group.",
              "args": []
            },
            {
              "name": "description",
              "description": "The description of the IAM access group.",
              "args": []
            },
            {
              "name": "ibm_ids",
              "description": "A list of IBM ID that belong to the access group.",
              "args": []
            },
            {
              "name": "iam_service_ids",
              "description": "A list of service IDs that belong to the access group.",
              "args": []
            },
            {
              "name": "rules",
              "description": "A list of dynamic rules that are applied to the IAM access group.",
              "args": [
                {
                  "name": "name",
                  "description": "The name of the dynamic rule.",
                  "args": []
                },
                {
                  "name": "expiration",
                  "description": "The number of hours that authenticated users can work in IBM Cloud before they must refresh their access.",
                  "args": []
                },
                {
                  "name": "identity_provider",
                  "description": "The URI of your identity provider. This is the SAML \"entity ID\" field, which is sometimes referred to as the issuer ID, for the identity provider as part of the federation configuration for onboarding with IBMid.",
                  "args": []
                },
                {
                  "name": "conditions",
                  "description": "A list of conditions that the rule must satisfy.",
                  "args": [
                    {
                      "name": "claim",
                      "description": "The key value to evaluate the condition against. The key depends on what key-value pairs your identity provider provides. For example, your identity provider might include a key that is named `blueGroups` and that holds all the user groups that have access. To apply a condition for a specific user group within the `blueGroups` key, you specify `blueGroups` as your claim and add the value that you are looking for in `conditions.value`.",
                      "args": []
                    },
                    {
                      "name": "operator",
                      "description": "The operation to perform on the claim. Supported values are `EQUALS`, `QUALS_IGNORE_CASE`, `IN`, `NOT_EQUALS_IGNORE_CASE`, `NOT_EQUALS`, and `CONTAINS`.",
                      "args": []
                    },
                    {
                      "name": "value",
                      "description": "The value that the claim is compared to by using the `groups.rules.conditions.operator`.",
                      "args": []
                    }
                  ]
                },
                {
                  "name": "rule_id",
                  "description": "The ID of the dynamic rule.",
                  "args": []
                }
              ]
            }
          ]
        }
      ]
    },
    "ibm_iam_auth_token": {
      "name": "ibm_iam_auth_token",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Identity & Access (IAM) data sources",
      "args": [],
      "attrs": [
        {
          "name": "iam_access_token",
          "description": "The IAM access token.",
          "args": []
        },
        {
          "name": "iam_refresh_token",
          "description": "The IAM refresh token.",
          "args": []
        },
        {
          "name": "uaa_access_token",
          "description": "The UAA access token.",
          "args": []
        },
        {
          "name": "uaa_refresh_token",
          "description": "The UAA refresh token.",
          "args": []
        }
      ]
    },
    "ibm_iam_role_actions": {
      "name": "ibm_iam_role_actions",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Identity & Access (IAM) data sources",
      "args": [
        {
          "name": "service",
          "description": "(Required, String) The name of the IBM Cloud service for which you want to list supported actions. For account management services, you can find supported values in the [documentation](/docs/account?topic=account-account-services#api-acct-mgmt). For other services, run the `ibmcloud catalog service-marketplace` command and retrieve the value from the **Name** column of your command line output.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the service.",
          "args": []
        },
        {
          "name": "manager",
          "description": "A list of supported actions that require the **Manager** service access role.",
          "args": []
        },
        {
          "name": "reader",
          "description": "A list of supported actions that require the **Reader** service access role.",
          "args": []
        },
        {
          "name": "reader_plus",
          "description": "A list of supported actions that require the **Reader plus** service access role.",
          "args": []
        },
        {
          "name": "writer",
          "description": "A list of supported actions that require the **Writer** service access role.",
          "args": []
        }
      ]
    },
    "ibm_iam_roles": {
      "name": "ibm_iam_roles",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Identity & Access (IAM) data sources",
      "args": [
        {
          "name": "service",
          "description": "(Required, String) The name of the IBM Cloud service for which you want to list supported IAM roles. For account management services, you can find supported values in the [documentation](/docs/account?topic=account-account-services#api-acct-mgmt). For other services, run the `ibmcloud catalog service-marketplace` command and retrieve the value from the **Name** column of your command line output.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The ID of your IBM Cloud account.",
          "args": []
        },
        {
          "name": "roles",
          "description": "A list of supported IAM service access, platform, and custom roles for an IBM Cloud service.",
          "args": [
            {
              "name": "name",
              "description": "The name of the role.",
              "args": []
            },
            {
              "name": "description",
              "description": "The description of the role.",
              "args": []
            },
            {
              "name": "type",
              "description": "The type of role. Supported values are `service`, `platform`, and `custom`.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_iam_service_id": {
      "name": "ibm_iam_service_id",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Identity & Access (IAM) data sources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the service.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "service_ids",
          "description": "A nested block list of IAM service IDs.",
          "args": [
            {
              "name": "bound_to",
              "description": "The service the service ID is bound to.",
              "args": []
            },
            {
              "name": "crn",
              "description": "The CRN of the service ID.",
              "args": []
            },
            {
              "name": "description",
              "description": "A description of the service ID.",
              "args": []
            },
            {
              "name": "iam_id",
              "description": "The IAM ID of the service ID.",
              "args": []
            },
            {
              "name": "id",
              "description": "The unique identifier of the service ID.",
              "args": []
            },
            {
              "name": "locked",
              "description": "If set to **true**, the service ID is locked.",
              "args": []
            },
            {
              "name": "version",
              "description": "The version of the service ID.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_iam_service_policy": {
      "name": "ibm_iam_service_policy",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Identity & Access (IAM) data sources",
      "args": [
        {
          "name": "iam_service_id",
          "description": "(Required, String) The UUID of the service ID.",
          "args": []
        },
        {
          "name": "policies",
          "args": [
            {
              "name": "resources",
              "description": "(A nested block describes the resources in the policy., List of objects) `policies.resources.service`",
              "args": []
            }
          ]
        }
      ],
      "attrs": [
        {
          "name": "policies",
          "description": "A nested block describes IAM service policies that are assigned to a service ID.",
          "args": [
            {
              "name": "id",
              "description": "The unique identifier of the IAM service policy. The ID is composed of \\<iam_service_id\\>/\\<service_policy_id\\>",
              "args": []
            },
            {
              "name": "roles",
              "description": "The roles that are assigned to the policy.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_iam_user_policy": {
      "name": "ibm_iam_user_policy",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Identity & Access (IAM) data sources",
      "args": [
        {
          "name": "ibm_id",
          "description": "(Required, String) The IBMid or email address of the user.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "policies",
          "description": "A nested block describes IAM Policies assigned to user.",
          "args": [
            {
              "name": "id",
              "description": "The unique identifier of the IAM user policy. The ID is composed of \\<ibm_id\\>/\\<user_policy_id\\>.",
              "args": []
            },
            {
              "name": "roles",
              "description": "The roles that are assigned to the policy.",
              "args": []
            },
            {
              "name": "resources",
              "description": "A nested block describes the resources in the policy.",
              "args": [
                {
                  "name": "service",
                  "description": "The service name of the policy definition.",
                  "args": []
                },
                {
                  "name": "region",
                  "description": "The region of the policy definition.",
                  "args": []
                },
                {
                  "name": "resource_type",
                  "description": "The resource type of the policy definition.",
                  "args": []
                },
                {
                  "name": "resource",
                  "description": "The resource of the policy definition.",
                  "args": []
                },
                {
                  "name": "resource_group_id",
                  "description": "The ID of the resource group.",
                  "args": []
                }
              ]
            }
          ]
        }
      ]
    },
    "ibm_iam_user_profile": {
      "name": "ibm_iam_user_profile",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Identity & Access (IAM) data sources",
      "args": [
        {
          "name": "id",
          "description": "(Required, String) The IBMid or email address of the user.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "allowed_ip_addresses",
          "description": "List of invited users IP's to access the IBM cloud console.",
          "args": []
        },
        {
          "name": "id",
          "description": "The unique identifier or email address of the IAM user.",
          "args": []
        },
        {
          "name": "firstname",
          "description": "The first name of the user.",
          "args": []
        },
        {
          "name": "lastname",
          "description": "The last name of the user.",
          "args": []
        },
        {
          "name": "state",
          "description": "The state of the user.",
          "args": []
        },
        {
          "name": "phonenumber",
          "description": "The contact number of the user.",
          "args": []
        },
        {
          "name": "email",
          "description": "The email address of the user.",
          "args": []
        }
      ]
    },
    "ibm_iam_users": {
      "name": "ibm_iam_users",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Identity & Access (IAM) data sources",
      "args": [],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier user.",
          "args": []
        },
        {
          "name": "users",
          "description": "List of all IAM users. Each user profile has following list of arguments.",
          "args": [
            {
              "name": "iam_id",
              "description": "The Id of the IAM user.",
              "args": []
            },
            {
              "name": "realm",
              "description": "The realm of the user.",
              "args": []
            },
            {
              "name": "user_id",
              "description": "The user ID used for log in.",
              "args": []
            },
            {
              "name": "firstname",
              "description": "The first name of the user.",
              "args": []
            },
            {
              "name": "lastname",
              "description": "The last name of the user.",
              "args": []
            },
            {
              "name": "state",
              "description": "The state of the user.",
              "args": []
            },
            {
              "name": "email",
              "description": "The email of the user.",
              "args": []
            },
            {
              "name": "phonenumber",
              "description": "The phone for the user.",
              "args": []
            },
            {
              "name": "altphonenumber",
              "description": "The alternative phone number of the user.",
              "args": []
            },
            {
              "name": "account_id",
              "description": "The account ID of the user.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_is_floating_ip": {
      "name": "ibm_is_floating_ip",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure data sources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the floating IP.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the floating IP.",
          "args": []
        },
        {
          "name": "address",
          "description": "The floating IP address that is created.",
          "args": []
        },
        {
          "name": "status",
          "description": "Provisioning status of the floating IP address.",
          "args": []
        },
        {
          "name": "tags",
          "description": "The tags associated with VPC.",
          "args": []
        },
        {
          "name": "target",
          "description": "The ID of the network interface used to allocate the floating IP address.",
          "args": []
        },
        {
          "name": "zone",
          "description": "The zone name where to create the floating IP address.",
          "args": []
        }
      ]
    },
    "ibm_is_flow_logs": {
      "name": "ibm_is_flow_logs",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure data sources",
      "args": [],
      "attrs": [
        {
          "name": "flow_log_collectors",
          "description": "Lists all the flow logs in the IBM Cloud.",
          "args": [
            {
              "name": "active",
              "description": "Indicates whether the collector is active.",
              "args": []
            },
            {
              "name": "created_at",
              "description": "The date and time the flow log created.",
              "args": []
            },
            {
              "name": "crn",
              "description": "The CRN of the flow log collector.",
              "args": []
            },
            {
              "name": "href",
              "description": "The URL of the flow log collector.",
              "args": []
            },
            {
              "name": "id",
              "description": "The unique identifier of the flow log collector.",
              "args": []
            },
            {
              "name": "lifecycle_state",
              "description": "The lifecycle state of the flow log collector.",
              "args": []
            },
            {
              "name": "name",
              "description": "The flow log collector name.",
              "args": []
            },
            {
              "name": "resource_group",
              "description": "The resource group of the flow log.",
              "args": []
            },
            {
              "name": "storage_bucket",
              "description": "The IBM Cloud Object Storage bucket name where the flow logs are logged.",
              "args": []
            },
            {
              "name": "target",
              "description": "The target ID that the flow log collector collects the flow logs.",
              "args": []
            },
            {
              "name": "vpc",
              "description": "The VPC of the flow log collector that are associated.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_is_image": {
      "name": "ibm_is_image",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure data sources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the image.",
          "args": []
        },
        {
          "name": "visibility",
          "description": "(Optional, String) The visibility of the image. Accepted values are `public` or `private`.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier for this image.",
          "args": []
        },
        {
          "name": "crn",
          "description": "The CRN for this image.",
          "args": []
        },
        {
          "name": "os",
          "description": "The name of the operating system.",
          "args": []
        },
        {
          "name": "status",
          "description": "The status of this image.",
          "args": []
        },
        {
          "name": "architecture",
          "description": "The architecture for this image.",
          "args": []
        }
      ]
    },
    "ibm_is_images": {
      "name": "ibm_is_images",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure data sources",
      "args": [],
      "attrs": [
        {
          "name": "images",
          "description": "List of all supported images.",
          "args": [
            {
              "name": "name",
              "description": "The name for this image.",
              "args": []
            },
            {
              "name": "id",
              "description": "The unique identifier for this image.",
              "args": []
            },
            {
              "name": "crn",
              "description": "The CRN for this image.",
              "args": []
            },
            {
              "name": "os",
              "description": "The name of the operating system.",
              "args": []
            },
            {
              "name": "status",
              "description": "The status of this image.",
              "args": []
            },
            {
              "name": "architecture",
              "description": "The architecture for this image.",
              "args": []
            },
            {
              "name": "visibility",
              "description": "The visibility of the image public or private.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_is_instance": {
      "name": "ibm_is_instance",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure data sources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the Virtual Servers for VPC instance that you want to retrieve.",
          "args": []
        },
        {
          "name": "private_key",
          "description": "(Optional, String) The private key of an SSH key that you want to add to your Virtual Servers for VPC instance during creation in PEM format. It is used to decrypt the default password of the Windows administrator for the virtual server instance if the image is used of type `windows`.",
          "args": []
        },
        {
          "name": "passphrase",
          "description": "(Optional, String) The passphrase that you used when you created your SSH key. If you did not enter a passphrase when you created the SSH key, do not provide this input parameter.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The ID that was assigned to the Virtual Servers for VPC instance.",
          "args": []
        },
        {
          "name": "memory",
          "description": "The amount of memory that was allocated to the instance.",
          "args": []
        },
        {
          "name": "status",
          "description": "The status of the instance.",
          "args": []
        },
        {
          "name": "image",
          "description": "The ID of the virtual server image that is used in the instance.",
          "args": []
        },
        {
          "name": "zone",
          "description": "The zone where the instance was created.",
          "args": []
        },
        {
          "name": "vpc",
          "description": "The ID of the VPC that the instance belongs to.",
          "args": []
        },
        {
          "name": "resource_group",
          "description": "The name of the resource group where the instance was created.",
          "args": []
        },
        {
          "name": "vcpu",
          "description": "A list of virtual CPUs that were allocated to the instance.",
          "args": [
            {
              "name": "architecture",
              "description": "The architecture of the virtual CPU.",
              "args": []
            },
            {
              "name": "count",
              "description": "The number of virtual CPUs that are allocated to the instance.",
              "args": []
            }
          ]
        },
        {
          "name": "gpu",
          "description": "A list of graphics processing units that are allocated to the instance.",
          "args": [
            {
              "name": "cores",
              "description": "The number of cores that are assigned to the GPU.",
              "args": []
            },
            {
              "name": "count",
              "description": "The number of GPUs that are allocated to the instance.",
              "args": []
            },
            {
              "name": "manufacture",
              "description": "The manufacturer of the GPU.",
              "args": []
            },
            {
              "name": "memory",
              "description": "The amount of memory that was allocated to the GPU.",
              "args": []
            },
            {
              "name": "model",
              "description": "The model of the GPU.",
              "args": []
            }
          ]
        },
        {
          "name": "primary_network_interface",
          "description": "A list of primary network interfaces that were created for the instance.",
          "args": [
            {
              "name": "id",
              "description": "The ID of the primary network interface.",
              "args": []
            },
            {
              "name": "name",
              "description": "The name of the primary network interface.",
              "args": []
            },
            {
              "name": "subnet",
              "description": "The ID of the subnet that is used in the primary network interface.",
              "args": []
            },
            {
              "name": "security_groups",
              "description": "A list of security groups that were created for the interface.",
              "args": []
            },
            {
              "name": "primary_ipv4_address",
              "description": "The IPv4 address range that the subnet uses.",
              "args": []
            }
          ]
        },
        {
          "name": "network_interfaces",
          "description": "A list of more network interfaces that the instance uses.",
          "args": [
            {
              "name": "id",
              "description": "The ID of the more network interface.",
              "args": []
            },
            {
              "name": "name",
              "description": "The name of the more network interface.",
              "args": []
            },
            {
              "name": "subnet",
              "description": "The ID of the subnet that is used in the more network interface.",
              "args": []
            },
            {
              "name": "security_groups",
              "description": "A list of security groups that were created for the interface.",
              "args": []
            },
            {
              "name": "primary_ipv4_address",
              "description": "The IPv4 address range that the subnet uses.",
              "args": []
            }
          ]
        },
        {
          "name": "boot_volume",
          "description": "A list of boot volumes that were created for the instance.",
          "args": [
            {
              "name": "id",
              "description": "The ID of the boot volume attachment.",
              "args": []
            },
            {
              "name": "name",
              "description": "The name of the boot volume.",
              "args": []
            },
            {
              "name": "device",
              "description": "The name of the device that is associated with the boot volume.",
              "args": []
            },
            {
              "name": "volume_id",
              "description": "The ID of the volume that is associated with the boot volume attachment.",
              "args": []
            },
            {
              "name": "volume_crn",
              "description": "The CRN of the volume that is associated with the boot volume attachment.",
              "args": []
            }
          ]
        },
        {
          "name": "volume_attachments",
          "description": "A list of volume attachments that were created for the instance.",
          "args": [
            {
              "name": "id",
              "description": "The ID of the volume attachment.",
              "args": []
            },
            {
              "name": "name",
              "description": "The name of the volume attachment.",
              "args": []
            },
            {
              "name": "volume_id",
              "description": "The ID of the volume that is associated with the volume attachment.",
              "args": []
            },
            {
              "name": "volume_name",
              "description": "The name of the volume that is associated with the volume attachment.",
              "args": []
            },
            {
              "name": "crn",
              "description": "The CRN of the volume that is associated with the volume attachment.",
              "args": []
            }
          ]
        },
        {
          "name": "resource_controller_url",
          "description": "The URL of the IBM Cloud dashboard that you can use to see details for your instance.",
          "args": []
        },
        {
          "name": "password",
          "description": "The password that you can use to access your instance.",
          "args": []
        },
        {
          "name": "keys",
          "description": "A list of SSH keys that were added to the instance during creation.",
          "args": [
            {
              "name": "id",
              "description": "The ID of the SSH key.",
              "args": []
            },
            {
              "name": "name",
              "description": "The name of the SSH key that you entered when you uploaded the key to IBM Cloud.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_is_instance_group": {
      "name": "ibm_is_instance_group",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure data sources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of an instance group.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The ID of an instance group.",
          "args": []
        },
        {
          "name": "managers",
          "description": "List of managers associated with the instance group.",
          "args": []
        },
        {
          "name": "vpc",
          "description": "The VPC ID.",
          "args": []
        },
        {
          "name": "status",
          "description": "The status of an instance group.",
          "args": []
        },
        {
          "name": "instance_template",
          "description": "The ID of an instance template to create an instance group.",
          "args": []
        },
        {
          "name": "instance_count",
          "description": "The number of instances created in an instance group.",
          "args": []
        },
        {
          "name": "resource_group",
          "description": "The resource group ID.",
          "args": []
        },
        {
          "name": "subnets",
          "description": "The list of subnet IDs used by an instances.",
          "args": []
        },
        {
          "name": "application_port",
          "description": "Scales an instances to supply the port for the Load Balancer pool member.",
          "args": []
        },
        {
          "name": "load_balancer_pool",
          "description": "The Load Balancer pool ID.",
          "args": []
        }
      ]
    },
    "ibm_is_instance_group_manager_policies": {
      "name": "ibm_is_instance_group_manager_policies",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure data sources",
      "args": [
        {
          "name": "instance_group",
          "description": "(Required, String) The instance group ID.",
          "args": []
        },
        {
          "name": "instance_group_manager",
          "description": "(Required, String) The instance group manager ID",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "This ID is the combination of instance group ID, instance group manager ID and instance group manager policy ID.",
          "args": []
        },
        {
          "name": "name",
          "description": "The policy name.",
          "args": []
        },
        {
          "name": "policy_type",
          "description": "The type of metric to evaluate.",
          "args": []
        },
        {
          "name": "metric_type",
          "description": "The type of metric to evaluate. The possible values are `cpu`, `memory`, `network_in` and `network_out`.",
          "args": []
        },
        {
          "name": "metric_value",
          "description": "The metric value to evaluate.",
          "args": []
        },
        {
          "name": "policy_id",
          "description": "The policy ID.",
          "args": []
        }
      ]
    },
    "ibm_is_instance_group_manager_policy": {
      "name": "ibm_is_instance_group_manager_policy",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure data sources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the policy.",
          "args": []
        },
        {
          "name": "instance_group",
          "description": "(Required, String) The instance group ID.",
          "args": []
        },
        {
          "name": "instance_group_manager",
          "description": "(Required, String) The instance group manager ID",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "This ID is the combination of instance group ID, instance group manager ID and instance group manager policy ID.",
          "args": []
        },
        {
          "name": "policy_type",
          "description": "The type of metric to evaluate.",
          "args": []
        },
        {
          "name": "metric_type",
          "description": "The type of metric to evaluate. The possible values are `cpu`, `memory`, `network_in` and `network_out`.",
          "args": []
        },
        {
          "name": "metric_value",
          "description": "The metric value to evaluate.",
          "args": []
        },
        {
          "name": "policy_id",
          "description": "The policy ID.",
          "args": []
        }
      ]
    },
    "ibm_is_instance_group_managers": {
      "name": "ibm_is_instance_group_managers",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure data sources",
      "args": [
        {
          "name": "instance_group",
          "description": "(Required, String) The instance group ID where the instance group manager is created.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "instance_group_managers",
          "description": "Nested block with list of instance manager properties.",
          "args": [
            {
              "name": "id",
              "description": "This ID is the combination of instance group ID, and instance group manager ID.",
              "args": []
            },
            {
              "name": "manager_type",
              "description": "The type of an instance group manager.",
              "args": []
            },
            {
              "name": "aggregation_window",
              "description": "The time window in seconds to aggregate metrics prior to evaluation.",
              "args": []
            },
            {
              "name": "manager_id",
              "description": "The instance group manager ID.",
              "args": []
            },
            {
              "name": "policies",
              "description": "List of policies associated with the instance group manager.",
              "args": []
            },
            {
              "name": "max_membership_count",
              "description": "The maximum number of members in a managed instance group.",
              "args": []
            },
            {
              "name": "min_membership_count",
              "description": "The minimum number of members in a managed instance group.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_is_instance_profile": {
      "name": "ibm_is_instance_profile",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure data sources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name for this virtual server instance profile.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "family",
          "description": "The family of the virtual server instance profile.",
          "args": []
        },
        {
          "name": "architecture",
          "description": "The default Operating System architecture for an instance of the profile.",
          "args": []
        }
      ]
    },
    "ibm_is_instance_profiles": {
      "name": "ibm_is_instance_profiles",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure data sources",
      "args": [],
      "attrs": [
        {
          "name": "profiles",
          "description": "List of all server instance profiles in the region.",
          "args": [
            {
              "name": "name",
              "description": "The name for this virtual server instance profile.",
              "args": []
            },
            {
              "name": "family",
              "description": "The family of the virtual server instance profile.",
              "args": []
            },
            {
              "name": "architecture",
              "description": "The default Operating System architecture for an instance of the profile.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_is_instance_templates": {
      "name": "ibm_is_instance_templates",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure data sources",
      "args": [],
      "attrs": [
        {
          "name": "templates",
          "description": "List of templates.",
          "args": [
            {
              "name": "id",
              "description": "The ID of the instance template.",
              "args": []
            },
            {
              "name": "name",
              "description": "The name of the instance template.",
              "args": []
            },
            {
              "name": "image",
              "description": "The ID of the image to create the template.",
              "args": []
            },
            {
              "name": "profile",
              "description": "The number of instances created in the instance group.",
              "args": []
            },
            {
              "name": "vpc",
              "description": "The VPC ID that the instance templates needs to be created.",
              "args": []
            },
            {
              "name": "zone",
              "description": "The name of the zone.",
              "args": []
            },
            {
              "name": "keys",
              "description": "List of SSH key IDs used to allow log in user to the instances.",
              "args": []
            },
            {
              "name": "resource_group",
              "description": "The resource group ID.",
              "args": []
            },
            {
              "name": "primary_network_interfaces",
              "description": "A nested block describes the primary network interface for the template.",
              "args": [
                {
                  "name": "subnet",
                  "description": "The VPC subnet to assign to the interface.",
                  "args": []
                },
                {
                  "name": "name",
                  "description": "The name of the interface.",
                  "args": []
                },
                {
                  "name": "security_groups",
                  "description": "List of security groups of the subnet.",
                  "args": []
                },
                {
                  "name": "primary_ipv4_address",
                  "description": "The IPv4 address assigned to the primary network interface.",
                  "args": []
                }
              ]
            },
            {
              "name": "network_interfaces",
              "description": "A nested block describes the network interfaces for the template.",
              "args": [
                {
                  "name": "subnet",
                  "description": "The VPC subnet to assign to the interface.",
                  "args": []
                },
                {
                  "name": "name",
                  "description": "The name of the interface.",
                  "args": []
                },
                {
                  "name": "security_groups",
                  "description": "List of security groups of  the subnet.",
                  "args": []
                },
                {
                  "name": "primary_ipv4_address",
                  "description": "The IPv4 address assigned to the network interface.",
                  "args": []
                }
              ]
            },
            {
              "name": "boot_volume",
              "description": "A nested block describes the boot volume configuration for the template.",
              "args": [
                {
                  "name": "encryption",
                  "description": "The encryption key CRN such as HPCS, Key Protect, etc., is provided to encrypt the boot volume attached.",
                  "args": []
                },
                {
                  "name": "name",
                  "description": "The name of the boot volume.",
                  "args": []
                },
                {
                  "name": "size",
                  "description": "The boot volume size to configure in giga bytes.",
                  "args": []
                },
                {
                  "name": "iops",
                  "description": "The IOPS for the boot volume.",
                  "args": []
                },
                {
                  "name": "profile",
                  "description": "The profile for the boot volume configuration.",
                  "args": []
                },
                {
                  "name": "delete_volume_on_instance_delete",
                  "description": "You can configure to delete the boot volume based on instance deletion.",
                  "args": []
                }
              ]
            },
            {
              "name": "volume_attachments",
              "description": "A nested block describes the storage volume configuration for the template.",
              "args": [
                {
                  "name": "name",
                  "description": "The name of the boot volume.",
                  "args": []
                },
                {
                  "name": "volume",
                  "description": "The storage volume ID created in VPC.",
                  "args": []
                },
                {
                  "name": "delete_volume_on_instance_delete",
                  "description": "You can configure to delete the storage volume to delete based on instance deletion.",
                  "args": []
                }
              ]
            },
            {
              "name": "user_data",
              "description": "The user data provided for the instance.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_is_instances": {
      "name": "ibm_is_instances",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure data sources",
      "args": [
        {
          "name": "vpc_name",
          "description": "(Optional, String) The name of the VPC to filter the instances attached.",
          "args": []
        },
        {
          "name": "vpc",
          "description": "(Optional, String) The VPC ID to filter the instances attached.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "instances",
          "description": "A list of Virtual Servers for VPC instances that exist in your account.",
          "args": [
            {
              "name": "id",
              "description": "The ID that was assigned to the Virtual Servers for VPC instance.",
              "args": []
            },
            {
              "name": "memory",
              "description": "The amount of memory that was allocated to the instance.",
              "args": []
            },
            {
              "name": "status",
              "description": "The status of the instance.",
              "args": []
            },
            {
              "name": "image",
              "description": "The ID of the virtual server image that is used in the instance.",
              "args": []
            },
            {
              "name": "zone",
              "description": "The zone where the instance was created.",
              "args": []
            },
            {
              "name": "vpc",
              "description": "The ID of the VPC that the instance belongs to.",
              "args": []
            },
            {
              "name": "resource_group",
              "description": "The name of the resource group where the instance was created.",
              "args": []
            },
            {
              "name": "vcpu",
              "description": "A list of virtual CPUs that were allocated to the instance.",
              "args": [
                {
                  "name": "architecture",
                  "description": "The architecture of the virtual CPU.",
                  "args": []
                },
                {
                  "name": "count",
                  "description": "The number of virtual CPUs that are allocated to the instance.",
                  "args": []
                }
              ]
            },
            {
              "name": "primary_network_interface",
              "description": "A list of primary network interfaces that were created for the instance.",
              "args": [
                {
                  "name": "id",
                  "description": "The ID of the primary network interface.",
                  "args": []
                },
                {
                  "name": "name",
                  "description": "The name of the primary network interface.",
                  "args": []
                },
                {
                  "name": "subnet",
                  "description": "The ID of the subnet that is used in the primary network interface.",
                  "args": []
                },
                {
                  "name": "security_groups",
                  "description": "A list of security groups that were created for the interface.",
                  "args": []
                },
                {
                  "name": "primary_ipv4_address",
                  "description": "The IPv4 address range that the subnet uses.",
                  "args": []
                }
              ]
            },
            {
              "name": "network_interfaces",
              "description": "A list of more network interfaces that the instance uses.",
              "args": [
                {
                  "name": "id",
                  "description": "The ID of the more network interface.",
                  "args": []
                },
                {
                  "name": "name",
                  "description": "The name of the more network interface.",
                  "args": []
                },
                {
                  "name": "subnet",
                  "description": "The ID of the subnet that is used in the more network interface.",
                  "args": []
                },
                {
                  "name": "security_groups",
                  "description": "A list of security groups that were created for the interface.",
                  "args": []
                },
                {
                  "name": "primary_ipv4_address",
                  "description": "The IPv4 address range that the subnet uses.",
                  "args": []
                }
              ]
            },
            {
              "name": "boot_volume",
              "description": "A list of boot volumes that were created for the instance.",
              "args": [
                {
                  "name": "id",
                  "description": "The ID of the boot volume attachment.",
                  "args": []
                },
                {
                  "name": "name",
                  "description": "The name of the boot volume.",
                  "args": []
                },
                {
                  "name": "device",
                  "description": "The name of the device that is associated with the boot volume.",
                  "args": []
                },
                {
                  "name": "volume_id",
                  "description": "The ID of the volume that is associated with the boot volume attachment.",
                  "args": []
                },
                {
                  "name": "volume_crn",
                  "description": "The CRN of the volume that is associated with the boot volume attachment.",
                  "args": []
                }
              ]
            },
            {
              "name": "volume_attachments",
              "description": "A list of volume attachments that were created for the instance.",
              "args": [
                {
                  "name": "id",
                  "description": "The ID of the volume attachment.",
                  "args": []
                },
                {
                  "name": "name",
                  "description": "The name of the volume attachment.",
                  "args": []
                },
                {
                  "name": "volume_id",
                  "description": "The ID of the volume that is associated with the volume attachment.",
                  "args": []
                },
                {
                  "name": "volume_name",
                  "description": "The name of the volume that is associated with the volume attachment.",
                  "args": []
                },
                {
                  "name": "crn",
                  "description": "The CRN of the volume that is associated with the volume attachment.",
                  "args": []
                }
              ]
            }
          ]
        }
      ]
    },
    "ibm_is_lb": {
      "name": "ibm_is_lb",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure data sources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the load balancer.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "hostname",
          "description": "Fully qualified domain name assigned to this load balancer.",
          "args": []
        },
        {
          "name": "id",
          "description": "The ID of the load balancer.",
          "args": []
        },
        {
          "name": "listeners",
          "description": "The ID of the listeners attached to this load balancer.",
          "args": []
        },
        {
          "name": "operating_status",
          "description": "The operating status of this load balancer.",
          "args": []
        },
        {
          "name": "pools",
          "description": "List all the Pools attached to this load balancer.",
          "args": [
            {
              "name": "algorithm",
              "description": "The load balancing algorithm.",
              "args": []
            },
            {
              "name": "created_at",
              "description": "The date and time pool was created.",
              "args": []
            },
            {
              "name": "href",
              "description": "The pool's canonical URL.",
              "args": []
            },
            {
              "name": "id",
              "description": "The unique identifier for this load balancer pool.",
              "args": []
            },
            {
              "name": "name",
              "description": "The user-defined name for this load balancer pool.",
              "args": []
            },
            {
              "name": "protocol",
              "description": "The protocol used for this load balancer pool.",
              "args": []
            },
            {
              "name": "provisioning_status",
              "description": "The provisioning status of this pool.",
              "args": []
            },
            {
              "name": "health_monitor",
              "description": "The health monitor of this pool.",
              "args": [
                {
                  "name": "delay",
                  "description": "The health check interval in seconds. Interval must be greater than timeout value.",
                  "args": []
                },
                {
                  "name": "max_retries",
                  "description": "The health check max retries.",
                  "args": []
                },
                {
                  "name": "timeout",
                  "description": "The health check timeout in seconds.",
                  "args": []
                },
                {
                  "name": "type",
                  "description": "The protocol type of this load balancer pool health monitor.",
                  "args": []
                },
                {
                  "name": "url_path",
                  "description": "The health monitor of this pool.",
                  "args": []
                }
              ]
            },
            {
              "name": "health_monitor",
              "description": "The health check URL. This is applicable only to HTTP type of health monitor.",
              "args": []
            },
            {
              "name": "instance_group",
              "description": "The instance group that is managing this pool.",
              "args": [
                {
                  "name": "crn",
                  "description": "The CRN for this instance group.",
                  "args": []
                },
                {
                  "name": "href",
                  "description": "The URL for this instance group.",
                  "args": []
                },
                {
                  "name": "id",
                  "description": "The unique identifier for this instance group.",
                  "args": []
                },
                {
                  "name": "name",
                  "description": "The user-defined name for this instance group.",
                  "args": []
                }
              ]
            },
            {
              "name": "members",
              "description": "The backend server members of the pool.",
              "args": [
                {
                  "name": "href",
                  "description": "The canonical URL of the member.",
                  "args": []
                },
                {
                  "name": "id",
                  "description": "The unique identifier for this load balancer pool member.",
                  "args": []
                }
              ]
            },
            {
              "name": "session_persistence",
              "description": "The session persistence of this pool.",
              "args": [
                {
                  "name": "type",
                  "description": "The session persistence type.",
                  "args": []
                }
              ]
            }
          ]
        },
        {
          "name": "public_ips",
          "description": "The public IP addresses assigned to this load balancer.",
          "args": []
        },
        {
          "name": "private_ips",
          "description": "The private IP addresses assigned to this load balancer.",
          "args": []
        },
        {
          "name": "resource_group",
          "description": "The resource group where the load balancer is created.",
          "args": []
        },
        {
          "name": "subnets",
          "description": "The ID of the subnets to provision this load balancer.",
          "args": []
        },
        {
          "name": "status",
          "description": "The status of load balancer.",
          "args": []
        },
        {
          "name": "tags",
          "description": "The tags associated with the load balancer.",
          "args": []
        },
        {
          "name": "type",
          "description": "The type of the load balancer.",
          "args": []
        }
      ]
    },
    "ibm_is_lb_profiles": {
      "name": "ibm_is_lb_profiles",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure data sources",
      "args": [],
      "attrs": [
        {
          "name": "lb_profiles",
          "description": "List of all load balancer profiles in the IBM Cloud Infrastructure.",
          "args": [
            {
              "name": "family",
              "description": "The product family this load balancer profile belongs to.",
              "args": []
            },
            {
              "name": "href",
              "description": "The URL for this load balancer profile.",
              "args": []
            },
            {
              "name": "name",
              "description": "The name for this load balancer profile.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_is_lbs": {
      "name": "ibm_is_lbs",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure data sources",
      "args": [],
      "attrs": [
        {
          "name": "load_balancers",
          "description": "The Collection of load balancers.",
          "args": []
        },
        {
          "name": "loadbalancers",
          "args": [
            {
              "name": "id",
              "description": "The unique identifier of the load balancer.",
              "args": []
            },
            {
              "name": "created_at",
              "description": "The date and time this load balancer was created.",
              "args": []
            },
            {
              "name": "crn",
              "description": "The load balancer's CRN.",
              "args": []
            },
            {
              "name": "name",
              "description": "Name of the load balancer.",
              "args": []
            },
            {
              "name": "subnets",
              "description": "The subnets this load balancer is part of.",
              "args": [
                {
                  "name": "crn",
                  "description": "The CRN for the subnet.",
                  "args": []
                },
                {
                  "name": "id",
                  "description": "The unique identifier for this subnet.",
                  "args": []
                },
                {
                  "name": "href",
                  "description": "The URL for this subnet.",
                  "args": []
                },
                {
                  "name": "name",
                  "description": "The user-defined name for this subnet.",
                  "args": []
                }
              ]
            },
            {
              "name": "hostname",
              "description": "The Fully qualified domain name assigned to this load balancer.",
              "args": []
            },
            {
              "name": "listeners",
              "description": "The listeners of this load balancer.",
              "args": [
                {
                  "name": "id",
                  "description": "The unique identifier for this load balancer listener.",
                  "args": []
                },
                {
                  "name": "href",
                  "description": "The listener's canonical URL.",
                  "args": []
                }
              ]
            },
            {
              "name": "operating_status",
              "description": "The operating status of this load balancer.",
              "args": []
            },
            {
              "name": "pools",
              "description": "The pools of this load balancer.",
              "args": [
                {
                  "name": "href",
                  "description": "The pool's canonical URL.",
                  "args": []
                },
                {
                  "name": "id",
                  "description": "The unique identifier for this load balancer pool.",
                  "args": []
                },
                {
                  "name": "name",
                  "description": "The user-defined name for this load balancer pool.",
                  "args": []
                }
              ]
            },
            {
              "name": "profile",
              "description": "The profile to use for this load balancer.",
              "args": [
                {
                  "name": "family",
                  "description": "The product family this load balancer profile belongs to.",
                  "args": []
                },
                {
                  "name": "href",
                  "description": "The URL for this load balancer profile.",
                  "args": []
                },
                {
                  "name": "name",
                  "description": "The name for this load balancer profile.",
                  "args": []
                }
              ]
            },
            {
              "name": "private_ips",
              "description": "The private IP addresses assigned to this load balancer.",
              "args": []
            },
            {
              "name": "provisioning_status",
              "description": "The provisioning status of this load balancer. Possible values are: **active**, **create_pending**, **delete_pending**, **failed**, **maintenance_pending**, **update_pending**",
              "args": []
            },
            {
              "name": "public_ips",
              "description": "The public IP addresses assigned to this load balancer.",
              "args": []
            },
            {
              "name": "resource_group",
              "description": "The resource group where the load balancer is created.",
              "args": []
            },
            {
              "name": "status",
              "description": "The status of the load balancers.",
              "args": []
            },
            {
              "name": "type",
              "description": "The type of the load balancer.",
              "args": []
            },
            {
              "name": "tags",
              "description": "Tags associated with the load balancer.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_is_public_gateway": {
      "name": "ibm_is_public_gateway",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure data sources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the gateway.",
          "args": []
        },
        {
          "name": "resource_group",
          "description": "(Optional, String) The resource group ID of the public gateway. **Note** This parameter is supported only for VPC Gen 2 infrastructure.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "is",
          "description": "The ID of the public gateway.",
          "args": []
        },
        {
          "name": "status",
          "description": "The status of the gateway.",
          "args": []
        },
        {
          "name": "vpc",
          "description": "The VPC ID of the gateway.",
          "args": []
        },
        {
          "name": "zone",
          "description": "The public gateway zone name.",
          "args": []
        },
        {
          "name": "floating_ip",
          "description": "Lists the nested block describes the floating IP of the gateway.  with **id** and **address**.",
          "args": [
            {
              "name": "id",
              "description": "The ID of the floating IP that is bound to the public gateway.",
              "args": []
            },
            {
              "name": "address",
              "description": "The IP address of the floating IP that is bound to the public gateway.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_is_region": {
      "name": "ibm_is_region",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure data sources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the region.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "status",
          "description": "The status of the region.",
          "args": []
        },
        {
          "name": "endpoint",
          "description": "The endpoint of the region.",
          "args": []
        }
      ]
    },
    "ibm_is_security_group": {
      "name": "ibm_is_security_group",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure data sources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the security group.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The ID of the security group.",
          "args": []
        },
        {
          "name": "rules",
          "description": "Rules associated with security group. Each rule has following attributes.",
          "args": [
            {
              "name": "rule_id",
              "description": "ID of the rule.",
              "args": []
            },
            {
              "name": "direction",
              "description": "Direction of traffic to enforce, either inbound or outbound.",
              "args": []
            },
            {
              "name": "ip_version",
              "description": "IP version: IPv4 or IPv6.",
              "args": []
            },
            {
              "name": "protocol",
              "description": "The type of the protocol `all`, `icmp`, `tcp`, `udp`.",
              "args": []
            },
            {
              "name": "type",
              "description": "The traffic type to allow.",
              "args": []
            },
            {
              "name": "code",
              "description": "The traffic code to allow.",
              "args": []
            },
            {
              "name": "port_max",
              "description": "The TCP/UDP port range that includes the maximum bound.",
              "args": []
            },
            {
              "name": "port_min",
              "description": "The TCP/UDP port range that includes the minimum bound.",
              "args": []
            },
            {
              "name": "remote",
              "description": "Security group ID, an IP address, a CIDR block, or a single security group identifier.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_is_ssh_key": {
      "name": "ibm_is_ssh_key",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure data sources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the SSH key.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The ID of the SSH key.",
          "args": []
        },
        {
          "name": "fingerprint",
          "description": "The SHA256 fingerprint of the public key.",
          "args": []
        },
        {
          "name": "length",
          "description": "The length of the SSH key.",
          "args": []
        },
        {
          "name": "type",
          "description": "The crypto system that is used by this key.",
          "args": []
        }
      ]
    },
    "ibm_is_subnet": {
      "name": "ibm_is_subnet",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure data sources",
      "args": [
        {
          "name": "identifier",
          "description": "(Optional, String) The ID of the subnet.",
          "args": []
        },
        {
          "name": "name",
          "description": "(Optional, String) The name of the subnet.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "ipv4_cidr_block",
          "description": "The IPv4 range of the subnet.",
          "args": []
        },
        {
          "name": "ipv6_cidr_block",
          "description": "The IPv6 range of the subnet.",
          "args": []
        },
        {
          "name": "total_ipv4_address_count",
          "description": "The total number of IPv4 addresses.",
          "args": []
        },
        {
          "name": "ip_version",
          "description": "The IP version.",
          "args": []
        },
        {
          "name": "name",
          "description": "The name of the subnet.",
          "args": []
        },
        {
          "name": "network_acl",
          "description": "The ID of the network ACL for the subnet.",
          "args": []
        },
        {
          "name": "public_gateway",
          "description": "The ID of the public gateway for the subnet.",
          "args": []
        },
        {
          "name": "status",
          "description": "The status of the subnet.",
          "args": []
        },
        {
          "name": "vpc",
          "description": "The ID of the VPC that the subnet belongs to.",
          "args": []
        },
        {
          "name": "zone",
          "description": "The subnet zone name.",
          "args": []
        },
        {
          "name": "available_ipv4_address_count",
          "description": "The total number of available IPv4 addresses.",
          "args": []
        }
      ]
    },
    "ibm_is_subnets": {
      "name": "ibm_is_subnets",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure data sources",
      "args": [],
      "attrs": [
        {
          "name": "subnets",
          "description": "A list of subnets in the IBM Cloud account.",
          "args": [
            {
              "name": "name",
              "description": "The name of the subnet.",
              "args": []
            },
            {
              "name": "id",
              "description": "The ID of the subnet.",
              "args": []
            },
            {
              "name": "ipv4_cidr_block",
              "description": "The IPv4 CIDR block of this subnet.",
              "args": []
            },
            {
              "name": "ipv6_cidr_block",
              "description": "The IPv6 CIDR block of this subnet.",
              "args": []
            },
            {
              "name": "status",
              "description": "The status of the subnet.",
              "args": []
            },
            {
              "name": "crn",
              "description": "The CRN of the subnet.",
              "args": []
            },
            {
              "name": "available_ipv4_address_count",
              "description": "The number of IPv4 addresses that are available in the subnet.",
              "args": []
            },
            {
              "name": "total_ipv4_address_count",
              "description": "The total number of IPv4 addresses in the subnet.",
              "args": []
            },
            {
              "name": "network_acl",
              "description": "The access control list (ACL) that is attached to the subnet.",
              "args": []
            },
            {
              "name": "public_gateway",
              "description": "If set to **true**, a public gateway is attached to the subnet. If set to **false**, no public gateway for this subnet exists.",
              "args": []
            },
            {
              "name": "resource_group",
              "description": "The resource group that the subnet belongs to.",
              "args": []
            },
            {
              "name": "vpc",
              "description": "The ID of the VPC that this subnet belongs to.",
              "args": []
            },
            {
              "name": "zone",
              "description": "The zone where the subnet was created.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_is_virtual_endpoint_gateway": {
      "name": "ibm_is_virtual_endpoint_gateway",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure data sources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The endpoint gateway name.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "created_at",
          "description": "The created date and time of the endpoint gateway.",
          "args": []
        },
        {
          "name": "health_state",
          "description": "Endpoint gateway health state. `ok: Healthy`, `degraded: Suffering from compromised performance, capacity, or connectivity`, `faulted: Completely unreachable, inoperative, or entirely incapacitated`, `inapplicable: The health state does not apply because of the current lifecycle state`. A resource with a lifecycle state of failed or deleting will have a health state of inapplicable. A pending resource may have this state.",
          "args": []
        },
        {
          "name": "lifecycle_state",
          "description": "The endpoint gateway lifecycle state, supported values are `deleted`, `deleting`, `failed`, `pending`, `stable`, `updating`, `waiting`, `suspended`.",
          "args": []
        },
        {
          "name": "ips",
          "description": "The unique identifier for the reserved IP.",
          "args": [
            {
              "name": "id",
              "description": "The collection of reserved IPs bound to an endpoint gateway.",
              "args": []
            },
            {
              "name": "name",
              "description": "The user defined or system provided name of the resource IP.",
              "args": []
            },
            {
              "name": "resource_type",
              "description": "The endpoint gateway IP resource type.",
              "args": []
            }
          ]
        },
        {
          "name": "resource_group",
          "description": "The unique identifier for the resource group.",
          "args": []
        },
        {
          "name": "target",
          "description": "The endpoint gateway target.",
          "args": [
            {
              "name": "name",
              "description": "The target name.",
              "args": []
            },
            {
              "name": "resource_type",
              "description": "The resource type of the subnet reserved IP.",
              "args": []
            }
          ]
        },
        {
          "name": "vpc",
          "description": "The VPC ID.",
          "args": []
        }
      ]
    },
    "ibm_is_virtual_endpoint_gateway_ips": {
      "name": "ibm_is_virtual_endpoint_gateway_ips",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure data sources",
      "args": [
        {
          "name": "gateway",
          "description": "(Required, String) The endpoint gateway ID.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "address",
          "description": "The endpoint gateway IP address.",
          "args": []
        },
        {
          "name": "auto_delete",
          "description": "The endpoint gateway IP auto delete.",
          "args": []
        },
        {
          "name": "created_at",
          "description": "The created date and time of the endpoint gateway IP.",
          "args": []
        },
        {
          "name": "id",
          "description": "The endpoint gateway reserved IP ID.",
          "args": []
        },
        {
          "name": "name",
          "description": "The endpoint gateway IP name.",
          "args": []
        },
        {
          "name": "reserved_ip",
          "description": "The endpoint gateway reserved IP ID.",
          "args": []
        },
        {
          "name": "resource_type",
          "description": "The endpoint gateway IP resource type.",
          "args": []
        },
        {
          "name": "target",
          "description": "The endpoint gateway target details.",
          "args": [
            {
              "name": "id",
              "description": "The IPs target ID.",
              "args": []
            },
            {
              "name": "name",
              "description": "The IPs target name.",
              "args": []
            },
            {
              "name": "resource_type",
              "description": "The endpoint gateway resource type.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_is_virtual_endpoint_gateways": {
      "name": "ibm_is_virtual_endpoint_gateways",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure data sources",
      "args": [],
      "attrs": [
        {
          "name": "created_at",
          "description": "The created date and time of the endpoint gateway.",
          "args": []
        },
        {
          "name": "health_state",
          "description": "Endpoint gateway health state. `ok: Healthy`, `degraded: Suffering from compromised performance, capacity, or connectivity`, `faulted: Completely unreachable, inoperative, or entirely incapacitated`, `inapplicable: The health state does not apply because of the current lifecycle state`. A resource with a lifecycle state of failed or deleting will have a health state of inapplicable. A pending resource may have this state.",
          "args": []
        },
        {
          "name": "lifecycle_state",
          "description": "The endpoint gateway lifecycle state, supported values are `deleted`, `deleting`, `failed`, `pending`, `stable`, `updating`, `waiting`, `suspended`.",
          "args": []
        },
        {
          "name": "id",
          "description": "The endpoint gateway ID.",
          "args": []
        },
        {
          "name": "ips",
          "description": "The collection of reserved IPs bound to an endpoint gateway.",
          "args": [
            {
              "name": "id",
              "description": "The unique identifier for the reserved IP.",
              "args": []
            },
            {
              "name": "name",
              "description": "The user defined or system provided name of the resource IP.",
              "args": []
            },
            {
              "name": "resource_type",
              "description": "The endpoint gateway IP resource type or the subnet reserved IP.",
              "args": []
            }
          ]
        },
        {
          "name": "name",
          "description": "The endpoint gateway name.",
          "args": []
        },
        {
          "name": "resource_group",
          "description": "The unique identifier for the resource group.",
          "args": []
        },
        {
          "name": "target",
          "description": "The endpoint gateway target services.",
          "args": [
            {
              "name": "name",
              "description": "The endpoint gateway target name.",
              "args": []
            },
            {
              "name": "resource_type",
              "description": "The endpoint gateway target resource type.",
              "args": []
            }
          ]
        },
        {
          "name": "vpc",
          "description": "The VPC ID.",
          "args": []
        }
      ]
    },
    "ibm_is_volume_profile": {
      "name": "ibm_is_volume_profile",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure data sources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name for the virtual server volume profile.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "href",
          "description": "The family of the virtual server volume profile.",
          "args": []
        }
      ]
    },
    "ibm_is_volume_profiles": {
      "name": "ibm_is_volume_profiles",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure data sources",
      "args": [],
      "attrs": [
        {
          "name": "profiles",
          "description": "Lists all server volume profiles in the region.",
          "args": [
            {
              "name": "name",
              "description": "The name of the virtual server volume profile.",
              "args": []
            },
            {
              "name": "family",
              "description": "The family of the virtual server volume profile.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_is_vpc": {
      "name": "ibm_is_vpc",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure data sources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the VPC.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "classic_access",
          "description": "Indicates whether this VPC is connected to Classic Infrastructure.",
          "args": []
        },
        {
          "name": "crn",
          "description": "The CRN of the VPC.",
          "args": []
        },
        {
          "name": "cse_source_addresses",
          "description": "A list of the cloud service endpoints that are associated with your VPC, including their source IP address and zone.",
          "args": [
            {
              "name": "address",
              "description": "The IP address of the cloud service endpoint.",
              "args": []
            },
            {
              "name": "zone_name",
              "description": "The zone where the cloud service endpoint is located.",
              "args": []
            }
          ]
        },
        {
          "name": "default_network_acl",
          "description": "The ID of the default network ACL.",
          "args": []
        },
        {
          "name": "resource_group",
          "description": "The resource group ID where the VPC created.",
          "args": []
        },
        {
          "name": "subnets",
          "description": "A list of subnets that are attached to a VPC.",
          "args": [
            {
              "name": "name",
              "description": "The name of the subnet.",
              "args": []
            },
            {
              "name": "id",
              "description": "The ID of the subnet.",
              "args": []
            },
            {
              "name": "zone",
              "description": "The zone that the subnet belongs to.",
              "args": []
            },
            {
              "name": "status",
              "description": "The status of the subnet.",
              "args": []
            },
            {
              "name": "total_ipv4_address_count",
              "description": "The total number of IPv4 addresses in the subnet.",
              "args": []
            },
            {
              "name": "available_ipv4_address_count",
              "description": "The number of IPv4 addresses in the subnet that are available for you to be used.",
              "args": []
            }
          ]
        },
        {
          "name": "status",
          "description": "The status of the VPC.",
          "args": []
        },
        {
          "name": "tags",
          "description": "Tags associated with the instance.",
          "args": []
        }
      ]
    },
    "ibm_is_vpc_default_routing_table": {
      "name": "ibm_is_vpc_default_routing_table",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure data sources",
      "args": [
        {
          "name": "vpc",
          "description": "(Required, String) The ID of the VPC.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "created_at",
          "description": "The date and time that the default routing table was created.",
          "args": []
        },
        {
          "name": "href",
          "description": "The routing table URL.",
          "args": []
        },
        {
          "name": "id",
          "description": "The unique ID for the default routing table.",
          "args": []
        },
        {
          "name": "is_default",
          "description": "Indicates the default routing table for this VPC.",
          "args": []
        },
        {
          "name": "name",
          "description": "The name for the default routing table.",
          "args": []
        },
        {
          "name": "lifecycle_state",
          "description": "The lifecycle state of the routing table.",
          "args": []
        },
        {
          "name": "resource_type",
          "description": "The resource type.",
          "args": []
        },
        {
          "name": "route_direct_link_ingress",
          "description": "Indicates the routing table is used to route traffic that originates from Direct Link to the VPC.",
          "args": []
        },
        {
          "name": "route_transit_gateway_ingress",
          "description": "Indicates the routing table is used to route traffic that originates from Transit Gateway to the VPC.",
          "args": []
        },
        {
          "name": "route_vpc_zone_ingress",
          "description": "Indicates the routing table is used to route traffic that originates from subnets in other zones in the VPC.",
          "args": []
        },
        {
          "name": "routes",
          "description": "The routes for the default routing table.",
          "args": [
            {
              "name": "id",
              "description": "The unique ID of the route.",
              "args": []
            },
            {
              "name": "name",
              "description": "The name of the route.",
              "args": []
            }
          ]
        },
        {
          "name": "subnets",
          "description": "The subnets to which routing table is attached.",
          "args": [
            {
              "name": "id",
              "description": "The unique ID of the subnet.",
              "args": []
            },
            {
              "name": "name",
              "description": "The name of the subnet.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_is_vpc_routing_table_routes": {
      "name": "ibm_is_vpc_routing_table_routes",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure data sources",
      "args": [
        {
          "name": "vpc",
          "description": "(Required, String) The ID of the VPC.",
          "args": []
        },
        {
          "name": "routing_table",
          "description": "(Required, String) The ID of the routing table.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "routing_table_routes",
          "description": "List of all the routing table in a VPC.",
          "args": [
            {
              "name": "name",
              "description": "The name for the default routing table.",
              "args": []
            },
            {
              "name": "route_id",
              "description": "The unique ID for the route.",
              "args": []
            },
            {
              "name": "lifecycle_state",
              "description": "The lifecycle state of the route.",
              "args": []
            },
            {
              "name": "href",
              "description": "The routing table URL.",
              "args": []
            },
            {
              "name": "created_at",
              "description": "The date and time that the route was created.",
              "args": []
            },
            {
              "name": "action",
              "description": "The action to perform with a packet matching the route.",
              "args": []
            },
            {
              "name": "destination",
              "description": "The destination of the route.",
              "args": []
            },
            {
              "name": "next_hop",
              "description": "The next hop address of the route.",
              "args": []
            },
            {
              "name": "zone",
              "description": "The zone name of the route.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_is_vpc_routing_tables": {
      "name": "ibm_is_vpc_routing_tables",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure data sources",
      "args": [
        {
          "name": "vpc",
          "description": "(Required, String) The ID of the VPC.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "routing_tables",
          "description": "List of all the routing tables in a VPC.",
          "args": [
            {
              "name": "name",
              "description": "The name for the default routing tables.",
              "args": []
            },
            {
              "name": "route_table",
              "description": "The unique ID for the routing table.",
              "args": []
            },
            {
              "name": "lifecycle_state",
              "description": "The lifecycle state of the routing table.",
              "args": []
            },
            {
              "name": "href",
              "description": "The routing table URL.",
              "args": []
            },
            {
              "name": "resource_type",
              "description": "The type of resource referenced.",
              "args": []
            },
            {
              "name": "created_at",
              "description": "The date and time the routing table was created.",
              "args": []
            },
            {
              "name": "is_default",
              "description": "Indicates whether the default routing table.",
              "args": []
            },
            {
              "name": "route_direct_link_ingress",
              "description": "Indicates if the routing table is used to route traffic that originates from Direct Link to the VPC.",
              "args": []
            },
            {
              "name": "route_transit_gateway_ingress",
              "description": "Indicates if the routing table is used to route traffic that originates from Transit Gateway to the VPC.",
              "args": []
            },
            {
              "name": "route_vpc_zone_ingress",
              "description": "Indicates if the routing table is used to route traffic that originates from subnets in other zones of the VPC.",
              "args": []
            }
          ]
        },
        {
          "name": "routes",
          "description": "The routes for the routing table.",
          "args": [
            {
              "name": "id",
              "description": "The unique ID of the route.",
              "args": []
            },
            {
              "name": "name",
              "description": "The user-defined name of the route.",
              "args": []
            }
          ]
        },
        {
          "name": "subnets",
          "description": "The subnets to which routing table is attached.",
          "args": [
            {
              "name": "id",
              "description": "The unique ID of the subnet.",
              "args": []
            },
            {
              "name": "name",
              "description": "The user-defined name of the subnet.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_is_vpn_gateway_connections": {
      "name": "ibm_is_vpn_gateway_connections",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure data sources",
      "args": [
        {
          "name": "status",
          "description": "(Optional, String) Filters the collection to VPN gateway connections with the specified status.",
          "args": []
        },
        {
          "name": "vpn_gateway",
          "description": "(Required, String) The VPN gateway ID.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The ID of the VPN gateway connection.",
          "args": []
        },
        {
          "name": "name",
          "description": "The VPN gateway connection name.",
          "args": []
        },
        {
          "name": "created_at",
          "description": "The date and time the VPN gateway connection was created.",
          "args": []
        },
        {
          "name": "admin_state_up",
          "description": "The VPN gateway connection admin state. Default value is `true`.",
          "args": []
        },
        {
          "name": "authentication_mode",
          "description": "The authentication mode.",
          "args": []
        },
        {
          "name": "ike_policy",
          "description": "The VPN gateway connection IKE Policy.",
          "args": []
        },
        {
          "name": "interval",
          "description": "Interval for dead peer detection.",
          "args": []
        },
        {
          "name": "ipsec_policy",
          "description": "The IP security policy VPN gateway connection.",
          "args": []
        },
        {
          "name": "local_cidrs",
          "description": "The VPN gateway connection local CIDRs.",
          "args": []
        },
        {
          "name": "mode",
          "description": "The mode of the VPN gateway.",
          "args": []
        },
        {
          "name": "peer_address",
          "description": "The VPN gateway connection peer address.",
          "args": []
        },
        {
          "name": "peer_cidrs",
          "description": "The VPN gateway connection peer CIDRs.",
          "args": []
        },
        {
          "name": "resource_type",
          "description": "The resource type.",
          "args": []
        },
        {
          "name": "timeout",
          "description": "Timeout for dead peer detection.",
          "args": []
        },
        {
          "name": "action",
          "description": "Action detection for dead peer detection action.",
          "args": []
        },
        {
          "name": "tunnels",
          "description": "The VPN tunnel configuration for the VPN gateway connection (in static route mode).",
          "args": [
            {
              "name": "address",
              "description": "The IP address of the VPN gateway member in which the tunnel resides.",
              "args": []
            },
            {
              "name": "status",
              "description": "The status of the VPN tunnel.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_is_vpn_gateways": {
      "name": "ibm_is_vpn_gateways",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure data sources",
      "args": [],
      "attrs": [
        {
          "name": "id",
          "description": "The ID of the VPN gateway.",
          "args": []
        },
        {
          "name": "name",
          "description": "The VPN gateway instance name.",
          "args": []
        },
        {
          "name": "created_at",
          "description": "The date and time the VPN gateway was created.",
          "args": []
        },
        {
          "name": "crn",
          "description": "The VPN gateway's CRN.",
          "args": []
        },
        {
          "name": "members",
          "description": "Collection of VPN gateway members.",
          "args": [
            {
              "name": "address",
              "description": "The public IP address assigned to the VPN gateway member.",
              "args": []
            },
            {
              "name": "role",
              "description": "The high availability role assigned to the VPN gateway member.",
              "args": []
            },
            {
              "name": "status",
              "description": "The status of the VPN gateway member.",
              "args": []
            }
          ]
        },
        {
          "name": "resource_type",
          "description": "The resource type, supported value is `vpn_gateway`.",
          "args": []
        },
        {
          "name": "status",
          "description": "The status of the VPN gateway, support values are `available`, `deleting`, `failed`, `pending`).",
          "args": []
        },
        {
          "name": "subnet",
          "description": "The VPN gateway subnet information.",
          "args": []
        },
        {
          "name": "resource_group",
          "description": "The resource group ID.",
          "args": []
        },
        {
          "name": "mode",
          "description": "The VPN gateway mode, supported values are `policy` and `route`.",
          "args": []
        }
      ]
    },
    "ibm_is_zone": {
      "name": "ibm_is_zone",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure data sources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the zone.",
          "args": []
        },
        {
          "name": "region",
          "description": "(Required, String) The name of the region.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "status",
          "description": "The status of the zone.",
          "args": []
        }
      ]
    },
    "ibm_is_zones": {
      "name": "ibm_is_zones",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure data sources",
      "args": [
        {
          "name": "region",
          "description": "(Required, String) The name of the region.",
          "args": []
        },
        {
          "name": "status",
          "description": "(Optional, String) Filter the list by status of zones.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "zones",
          "description": "The list of zones in an IBM Cloud region.  For example, `us-south-1`,`us-south-2`.",
          "args": []
        }
      ]
    },
    "ibm_kms_key": {
      "name": "ibm_kms_key",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Key Management Service data sources",
      "args": [
        {
          "name": "instance_id",
          "description": "(Required, String) The key-protect instance ID.",
          "args": []
        },
        {
          "name": "key_name",
          "description": "(Required, String) The name of the key. Only matching name of the keys are retrieved",
          "args": []
        },
        {
          "name": "endpoint_type",
          "description": "(Optional, String) The type of the public or private endpoint to be used for fetching keys.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "keys",
          "description": "Lists the Keys of HPCS or Key-protect instance.",
          "args": [
            {
              "name": "name",
              "description": "The name for the key.",
              "args": []
            },
            {
              "name": "id",
              "description": "The unique ID for the key.",
              "args": []
            },
            {
              "name": "crn",
              "description": "The CRN of the key.",
              "args": []
            },
            {
              "name": "standard_key",
              "description": "Set the flag `true` for standard key, and `false` for root key. Default value is **false**.",
              "args": []
            },
            {
              "name": "policy",
              "description": "The policies associated with the key.",
              "args": [
                {
                  "name": "rotation",
                  "description": "The key rotation time interval in months, with a minimum of 1, and a maximum of 12.",
                  "args": [
                    {
                      "name": "created_by",
                      "description": "The unique ID for the resource that created the policy.",
                      "args": []
                    },
                    {
                      "name": "creation_date",
                      "description": "The date the policy was created. The date format follows RFC 3339.",
                      "args": []
                    },
                    {
                      "name": "id",
                      "description": "The v4 UUID used to uniquely identify the policy resource, as specified by RFC 4122.",
                      "args": []
                    },
                    {
                      "name": "interval_month",
                      "description": "The key rotation time interval in months.",
                      "args": []
                    },
                    {
                      "name": "last_update_date",
                      "description": "The date when the policy last replaced or modified. The date format follows RFC 3339.",
                      "args": []
                    },
                    {
                      "name": "updated_by",
                      "description": "The unique ID for the resource that updated the policy.",
                      "args": []
                    }
                  ]
                },
                {
                  "name": "dual_auth_delete",
                  "description": "The data associated with the dual authorization delete policy.",
                  "args": [
                    {
                      "name": "created_by",
                      "description": "The unique ID for the resource that created the policy.",
                      "args": []
                    },
                    {
                      "name": "creation_date",
                      "description": "The date the policy was created. The date format follows RFC 3339.",
                      "args": []
                    },
                    {
                      "name": "id",
                      "description": "The v4 UUID used to uniquely identify the policy resource, as specified by RFC 4122.",
                      "args": []
                    },
                    {
                      "name": "enabled",
                      "description": "If set to `true`, Key Protect enables a dual authorization policy on the key.",
                      "args": []
                    },
                    {
                      "name": "last_update_date",
                      "description": "The date when the policy last replaced or modified. The date format follows RFC 3339.",
                      "args": []
                    },
                    {
                      "name": "updated_by",
                      "description": "The unique ID for the resource that updated the policy.",
                      "args": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    "ibm_kms_keys": {
      "name": "ibm_kms_keys",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Key Management Service data sources",
      "args": [
        {
          "name": "instance_id",
          "description": "(Required, String) The key-protect instance ID.",
          "args": []
        },
        {
          "name": "key_name",
          "description": "(Optional, String) The name of the key. Only matching name of the keys are retrieved",
          "args": []
        },
        {
          "name": "endpoint_type",
          "description": "(Optional, String) The type of the public or private endpoint to be used for fetching keys.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "keys",
          "description": "Lists the Keys of HPCS or Key-protect instance.",
          "args": [
            {
              "name": "name",
              "description": "The name for the key.",
              "args": []
            },
            {
              "name": "id",
              "description": "The unique ID for the key.",
              "args": []
            },
            {
              "name": "crn",
              "description": "The CRN of the key.",
              "args": []
            },
            {
              "name": "standard_key",
              "description": "Set the flag `true` for standard key, and `false` for root key. Default value is **false**.",
              "args": []
            },
            {
              "name": "policy",
              "description": "The policies associated with the key.",
              "args": [
                {
                  "name": "rotation",
                  "description": "The key rotation time interval in months, with a minimum of 1, and a maximum of 12.",
                  "args": [
                    {
                      "name": "created_by",
                      "description": "The unique ID for the resource that created the policy.",
                      "args": []
                    },
                    {
                      "name": "creation_date",
                      "description": "The date the policy was created. The date format follows RFC 3339.",
                      "args": []
                    },
                    {
                      "name": "id",
                      "description": "The v4 UUID used to uniquely identify the policy resource, as specified by RFC 4122.",
                      "args": []
                    },
                    {
                      "name": "interval_month",
                      "description": "The key rotation time interval in months.",
                      "args": []
                    },
                    {
                      "name": "last_update_date",
                      "description": "The date when the policy last replaced or modified. The date format follows RFC 3339.",
                      "args": []
                    },
                    {
                      "name": "updated_by",
                      "description": "The unique ID for the resource that updated the policy.",
                      "args": []
                    }
                  ]
                },
                {
                  "name": "dual_auth_delete",
                  "description": "The data associated with the dual authorization delete policy.",
                  "args": [
                    {
                      "name": "created_by",
                      "description": "The unique ID for the resource that created the policy.",
                      "args": []
                    },
                    {
                      "name": "creation_date",
                      "description": "The date the policy was created. The date format follows RFC 3339.",
                      "args": []
                    },
                    {
                      "name": "id",
                      "description": "The v4 UUID used to uniquely identify the policy resource, as specified by RFC 4122.",
                      "args": []
                    },
                    {
                      "name": "enabled",
                      "description": "If set to `true`, Key Protect enables a dual authorization policy on the key.",
                      "args": []
                    },
                    {
                      "name": "last_update_date",
                      "description": "The date when the policy last replaced or modified. The date format follows RFC 3339.",
                      "args": []
                    },
                    {
                      "name": "updated_by",
                      "description": "The unique ID for the resource that updated the policy.",
                      "args": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    "ibm_kp_key": {
      "name": "ibm_kp_key",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Key Management Service data sources",
      "args": [
        {
          "name": "key_protect_id",
          "description": "(Required, String) The ID of the Key Protect service instance.",
          "args": []
        },
        {
          "name": "key_name",
          "description": "(Optional, String) The name of the key. Only the keys with matching name will be retrieved.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "keys",
          "description": "A list of all keys in your Key Protect service instance.",
          "args": [
            {
              "name": "name",
              "description": "The name of the key.",
              "args": []
            },
            {
              "name": "id",
              "description": "The unique identifier of the key.",
              "args": []
            },
            {
              "name": "crn",
              "description": "The CRN of the key.",
              "args": []
            },
            {
              "name": "standard_key",
              "description": "Set the flag `true` for standard key, and `false` for root key. Default value is **false**.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_lbaas": {
      "name": "ibm_lbaas",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure data sources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the load balancer.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "description",
          "description": "A description of the load balancer.",
          "args": []
        },
        {
          "name": "datacenter",
          "description": "The data center where load balancer is located.",
          "args": []
        },
        {
          "name": "protocols",
          "description": "A nested block describes the protocols that are assigned to the load balancer.",
          "args": [
            {
              "name": "frontend_protocol",
              "description": "The front-end protocol.",
              "args": []
            },
            {
              "name": "frontend_port",
              "description": "The front-end protocol port number.",
              "args": []
            },
            {
              "name": "backend_protocol",
              "description": "The backend protocol.",
              "args": []
            },
            {
              "name": "backend_port",
              "description": "The backend protocol port number.",
              "args": []
            },
            {
              "name": "load_balancing_method",
              "description": "The load-balancing algorithm.",
              "args": []
            },
            {
              "name": "session_stickiness",
              "description": "Session stickiness.",
              "args": []
            },
            {
              "name": "max_conn",
              "description": "The number of connections the listener can accept.",
              "args": []
            },
            {
              "name": "tls_certificate_id",
              "description": "The ID of the SSL/TLS certificate used for a protocol.",
              "args": []
            }
          ]
        },
        {
          "name": "protocol_id",
          "description": "The UUID of a load balancer protocol.",
          "args": []
        },
        {
          "name": "server_instances",
          "description": "A nested block describes the server instances for this load balancer.",
          "args": [
            {
              "name": "private_ip_address",
              "description": "The private IP address of a load balancer member.",
              "args": []
            },
            {
              "name": "weight",
              "description": "The weight of a load balancer member.",
              "args": []
            },
            {
              "name": "status",
              "description": "Specifies the status of a load balancer member as `UP` or `DOWN`.",
              "args": []
            },
            {
              "name": "member_id",
              "description": "The UUID of a load balancer member.",
              "args": []
            }
          ]
        },
        {
          "name": "health_monitors",
          "description": "A nested block describes the health_monitors assigned to the load balancer.",
          "args": [
            {
              "name": "protocol",
              "description": "The backend protocol.",
              "args": []
            },
            {
              "name": "port",
              "description": "The backend port.",
              "args": []
            },
            {
              "name": "interval",
              "description": "The interval in seconds to perform the health check.",
              "args": []
            },
            {
              "name": "max_retries",
              "description": "The maximum retries before the load balancer are considered unhealthy.",
              "args": []
            },
            {
              "name": "timeout",
              "description": "The health check method.",
              "args": []
            },
            {
              "name": "url_path",
              "description": "If monitor is \"HTTP\", it specifies the URL path.",
              "args": []
            },
            {
              "name": "monitor_id",
              "description": "The health monitor UUID.",
              "args": []
            }
          ]
        },
        {
          "name": "type",
          "description": "Specifies whether a load balancer is public or private.",
          "args": []
        },
        {
          "name": "status",
          "description": "Specifies the operation status of the load balancer as `online` or `offline`.",
          "args": []
        },
        {
          "name": "vip",
          "description": "The virtual IP address of the load balancer.",
          "args": []
        },
        {
          "name": "server_instances_up",
          "description": "The number of service instances, that are in the `UP` health state.",
          "args": []
        },
        {
          "name": "server_instances_down",
          "description": "The number of service instances, that are in the `DOWN` health state.",
          "args": []
        },
        {
          "name": "active_connections",
          "description": "The number of total established connections.",
          "args": []
        },
        {
          "name": "use_system_public_ip_pool",
          "description": "It specifies whether the public IP addresses are allocated from system public IP pool or public subnet from the account order of the load balancer.",
          "args": []
        },
        {
          "name": "ssl_ciphers",
          "description": "The list of SSL offloads.",
          "args": []
        }
      ]
    },
    "ibm_network_vlan": {
      "name": "ibm_network_vlan",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure data sources",
      "args": [
        {
          "name": "name",
          "description": "(Conditional, String) The name of the VLAN. This value is required if neither the VLAN number nor the router host name is specified. To retrieve the name, go to the [IBM Cloud infrastructure portal](https://cloud.ibm.com/classic/network/vlans) and navigate to **Network > IP Management > VLANs**.",
          "args": []
        },
        {
          "name": "number",
          "description": "(Conditional, Integer) The VLAN number. This value is required if no VLAN name is provided. To find the number, go to the [IBM Cloud infrastructure portal](https://cloud.ibm.com/classic/network/vlans).",
          "args": []
        },
        {
          "name": "router_hostname",
          "description": "(Conditional, String) The host name of the primary VLAN router. This value is required if no VLAN name is provided. To find the host name, go to the [IBM Cloud infrastructure portal](https://cloud.ibm.com/classic/network/vlans).",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the VLAN.",
          "args": []
        },
        {
          "name": "subnets",
          "description": "The collection of subnets associated with the VLAN.",
          "args": [
            {
              "name": "id",
              "description": "The ID of the subnet.",
              "args": []
            },
            {
              "name": "subnet",
              "description": "The subnet for the VLAN.",
              "args": []
            },
            {
              "name": "subnet-type",
              "description": "A subnet can be one of several types. `PRIMARY, ADDITIONAL_PRIMARY, SECONDARY, ROUTED_TO_VLAN, SECONDARY_ON_VLAN, STORAGE_NETWORK, and STATIC_IP_ROUTED`. A `PRIMARY` subnet is the primary network that is bound to a VLAN within the IBM Cloud network. An `ADDITIONAL_PRIMARY` subnet is bound to a network VLAN to augment the pool of available primary IP addresses that might be assigned to a server. A `SECONDARY` subnet is any of the secondary subnets bound to a VLAN interface. A `ROUTED_TO_VLAN` subnet is a portable subnet that can be routed to any server on a VLAN. A `SECONDARY_ON_VLAN` subnet also doesn't exist as a VLAN interface, but is routed directly to a VLAN instead of a single IP address.",
              "args": []
            },
            {
              "name": "subnet-size",
              "description": "The size of the subnet for the VLAN.",
              "args": []
            },
            {
              "name": "gateway",
              "description": "A subnet gateway address.",
              "args": []
            },
            {
              "name": "cidr",
              "description": "A subnet Classless Inter-Domain Routing prefix. The number in the range of 0 - 32 signifying the number of bits in a subnet mask.",
              "args": []
            }
          ]
        },
        {
          "name": "virtual_guests",
          "description": "A nested block describes the VSIs attached to the VLAN.",
          "args": [
            {
              "name": "id",
              "description": "The ID of the virtual guest.",
              "args": []
            },
            {
              "name": "domain",
              "description": "The domain of the virtual guest.",
              "args": []
            },
            {
              "name": "hostname",
              "description": "The hostname of the virtual guest.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_org": {
      "name": "ibm_org",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Cloud Foundry data sources",
      "args": [
        {
          "name": "name",
          "description": "(Optional, String) The name of the IBM Cloud organization.",
          "args": []
        },
        {
          "name": "org",
          "description": "(Deprecated, String) The name of the IBM Cloud organization.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the Cloud Foundry organization.",
          "args": []
        }
      ]
    },
    "ibm_org_quota": {
      "name": "ibm_org_quota",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Cloud Foundry data sources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the quota plan for the Cloud Foundry organization. You can retrieve the value by running the `ibmcloud cf quotas` command in the IBM Cloud CLI.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the Cloud Foundry organization.",
          "args": []
        },
        {
          "name": "app_instance_limit",
          "description": "Defines the total number of app instances that are allowed for the Cloud Foundry organization.",
          "args": []
        },
        {
          "name": "app_tasks_limit",
          "description": "Defines the total number of app tasks for a Cloud Foundry organization.",
          "args": []
        },
        {
          "name": "instance_memory_limit",
          "description": "Defines the total amount of memory that an instance can use in a Cloud Foundry organization.",
          "args": []
        },
        {
          "name": "memory_limit",
          "description": "Defines the total amount of memory that can be used by the Cloud Foundry organization.",
          "args": []
        },
        {
          "name": "non_basic_services_allowed",
          "description": "Defines if non-basic (paid) services are allowed for the Cloud Foundry organization.",
          "args": []
        },
        {
          "name": "total_private_domains",
          "description": "Defines the total number of private domains that can be created for a Cloud Foundry organization.",
          "args": []
        },
        {
          "name": "total_reserved_route_ports",
          "description": "Defines the number of routes with reserved ports for the Cloud Foundry organization.",
          "args": []
        },
        {
          "name": "total_routes",
          "description": "Defines the maximum number of routes that can be created for a Cloud Foundry organization.",
          "args": []
        },
        {
          "name": "total_service_keys",
          "description": "Defines the maximum number of service keys for the Cloud Foundry organization.",
          "args": []
        },
        {
          "name": "total_services",
          "description": "Defines the maximum number of services that can be created in a Cloud Foundry organization.",
          "args": []
        },
        {
          "name": "trial_db_allowed",
          "description": "Defines if a trial database is allowed for the Cloud Foundry organization.",
          "args": []
        }
      ]
    },
    "ibm_pi_catalog_images": {
      "name": "ibm_pi_catalog_images",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Power Systems data sources",
      "args": [
        {
          "name": "pi_cloud_instance_id",
          "description": "(Required, String) The GUID of the service instance associated with an account.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "architecture",
          "description": "The CPU architecture that the image is designed for.",
          "args": []
        },
        {
          "name": "id",
          "description": "The unique identifier of the image.",
          "args": []
        },
        {
          "name": "operatingsystem",
          "description": "The operating system that is installed with the image.",
          "args": []
        },
        {
          "name": "size",
          "description": "The size of the image in megabytes.",
          "args": []
        },
        {
          "name": "state",
          "description": "The state for this image.",
          "args": []
        },
        {
          "name": "images",
          "description": "Lists all the images in the IBM Power Virtual Server Cloud.",
          "args": [
            {
              "name": "image_id",
              "description": "The unique identifier of an image.",
              "args": []
            },
            {
              "name": "name",
              "description": "The name of the image.",
              "args": []
            },
            {
              "name": "state",
              "description": "The state of an Operating System.",
              "args": []
            },
            {
              "name": "description",
              "description": "The description of an image.",
              "args": []
            },
            {
              "name": "storage_type",
              "description": "The storage type of an image.",
              "args": []
            },
            {
              "name": "href",
              "description": "The `href` of an image.",
              "args": []
            },
            {
              "name": "creation_date",
              "description": "The creation date of an image.",
              "args": []
            },
            {
              "name": "last_update_date",
              "description": "The last updated date of an image.",
              "args": []
            },
            {
              "name": "image_type",
              "description": "The type of the format.",
              "args": []
            },
            {
              "name": "disk_format",
              "description": "The disk format.",
              "args": []
            },
            {
              "name": "operating_system",
              "description": "Operating System.",
              "args": []
            },
            {
              "name": "hypervisor_type",
              "description": "Hypervisor type.",
              "args": []
            },
            {
              "name": "architecture",
              "description": "Architecture.",
              "args": []
            },
            {
              "name": "endianness",
              "description": "The `Endianness` order.",
              "args": []
            },
            {
              "name": "href",
              "description": "Address of an Image.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_pi_image": {
      "name": "ibm_pi_image",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Power Systems data sources",
      "args": [
        {
          "name": "pi_cloud_instance_id",
          "description": "(Required, String) The GUID of the service instance associated with an account.",
          "args": []
        },
        {
          "name": "pi_image_name",
          "description": "(Required, String) The ID of the image. To find supported images, run the `ibmcloud pi images` command.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "architecture",
          "description": "The CPU architecture that the image is designed for.",
          "args": []
        },
        {
          "name": "id",
          "description": "The unique identifier of the image.",
          "args": []
        },
        {
          "name": "operatingsystem",
          "description": "The operating system that is installed with the image.",
          "args": []
        },
        {
          "name": "size",
          "description": "The size of the image in megabytes.",
          "args": []
        },
        {
          "name": "state",
          "description": "The state for this image.",
          "args": []
        }
      ]
    },
    "ibm_pi_images": {
      "name": "ibm_pi_images",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Power Systems data sources",
      "args": [
        {
          "name": "pi_cloud_instance_id",
          "description": "(Required, String) The GUID of the service instance associated with an account.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "image_info",
          "description": "A list of all supported images.",
          "args": [
            {
              "name": "href",
              "description": "The hyper link of an image.",
              "args": []
            },
            {
              "name": "id",
              "description": "The unique identifier of an image.",
              "args": []
            },
            {
              "name": "name",
              "description": "The name of an image.",
              "args": []
            },
            {
              "name": "state",
              "description": "The state of an image.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_pi_instance": {
      "name": "ibm_pi_instance",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Power Systems data sources",
      "args": [
        {
          "name": "pi_cloud_instance_id",
          "description": "(Required, String) The GUID of the service instance associated with an account.",
          "args": []
        },
        {
          "name": "pi_instance_name",
          "description": "(Required, String) The name of the instance.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "addresses",
          "description": "The address associated with this instance.",
          "args": [
            {
              "name": "ip",
              "description": "The IP address of the instance.",
              "args": []
            },
            {
              "name": "macaddress",
              "description": "The MAC address of the instance.",
              "args": []
            },
            {
              "name": "network_id",
              "description": "The network ID of the instance.",
              "args": []
            },
            {
              "name": "network_name",
              "description": "The network name of the instance.",
              "args": []
            },
            {
              "name": "type",
              "description": "The type of the network.",
              "args": []
            },
            {
              "name": "externalip",
              "description": "The external IP address of the instance.",
              "args": []
            }
          ]
        },
        {
          "name": "health_status",
          "description": "The health of the instance.",
          "args": []
        },
        {
          "name": "id",
          "description": "The unique identifier of the instance.",
          "args": []
        },
        {
          "name": "state",
          "description": "The state of the instance.",
          "args": []
        },
        {
          "name": "memory",
          "description": "The amount of memory that is allocated to the instance.",
          "args": []
        },
        {
          "name": "min_processors",
          "description": "The minimum number of processors that must be allocated to the instance.",
          "args": []
        },
        {
          "name": "max_processors",
          "description": "The maximum number of processors that can be allocated to the instance without shutting down or rebooting the `LPAR`.",
          "args": []
        },
        {
          "name": "max_virtual_cores",
          "description": "The maximum value that you increase without a reboot.",
          "args": []
        },
        {
          "name": "min_memory",
          "description": "The minimum amount of memory that must be allocated to the instance.",
          "args": []
        },
        {
          "name": "max_memory",
          "description": "The maximum amount of memory that can be allocated to the instance without shutting down or rebooting the `LPAR`.",
          "args": []
        },
        {
          "name": "min_virtual_cores",
          "description": "The minimum cores assigned to an instance.",
          "args": []
        },
        {
          "name": "processors",
          "description": "The number of processors that are allocated to the instance.",
          "args": []
        },
        {
          "name": "proctype",
          "description": "The procurement type of the instance. Supported values are `shared` and `dedicated`.",
          "args": []
        },
        {
          "name": "status",
          "description": "The status of the instance.",
          "args": []
        },
        {
          "name": "virtual_cores_assigned",
          "description": "The virtual cores that are assigned to the instance.",
          "args": []
        },
        {
          "name": "volumes",
          "description": "The list of volume IDs that are attached to the instance.",
          "args": []
        }
      ]
    },
    "ibm_pi_instance_ip": {
      "name": "ibm_pi_instance_ip",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Power Systems data sources",
      "args": [
        {
          "name": "pi_cloud_instance_id",
          "description": "(Required, String) The GUID of the service instance associated with an account.",
          "args": []
        },
        {
          "name": "pi_instance_name",
          "description": "(Required, String) The name of the instance.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "ip",
          "description": "The IP address that is attached to this instance from the subnet.",
          "args": []
        },
        {
          "name": "id",
          "description": "The unique identifier of the network.",
          "args": []
        },
        {
          "name": "macaddress",
          "description": "The MAC address of the network that is attached to this instance.",
          "args": []
        },
        {
          "name": "external_ip",
          "description": "The external IP of the network that is attached to this instance.",
          "args": []
        },
        {
          "name": "type",
          "description": "The type of the network that is attached to this instance.",
          "args": []
        },
        {
          "name": "ipoctet",
          "description": "The IP octet of the network that is attached to this instance.",
          "args": []
        }
      ]
    },
    "ibm_pi_instance_volumes": {
      "name": "ibm_pi_instance_volumes",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Power Systems data sources",
      "args": [
        {
          "name": "pi_cloud_instance_id",
          "description": "(Required, String) The GUID of the service instance associated with an account.",
          "args": []
        },
        {
          "name": "pi_volume_name",
          "description": "(Required, String) The name of the volume for which you want to retrieve detailed information.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "boot_volume_id",
          "description": "The unique identifier of the boot volume.",
          "args": []
        },
        {
          "name": "instance_volumes",
          "description": "List of volumes attached to instance.",
          "args": [
            {
              "name": "id",
              "description": "The unique identifier of the volume.",
              "args": []
            },
            {
              "name": "name",
              "description": "The name of the volume.",
              "args": []
            },
            {
              "name": "shareable",
              "description": "If set to **true**, the volume can be shared across multiple Power Systems Virtual Server instances. If set to **false**, the volume can be mounted to one instance only.",
              "args": []
            },
            {
              "name": "size",
              "description": "The size of this volume in gigabytes.",
              "args": []
            },
            {
              "name": "state",
              "description": "The state of the volume.",
              "args": []
            },
            {
              "name": "type",
              "description": "The disk type that is used for this volume.",
              "args": []
            },
            {
              "name": "bootable",
              "description": "Indicates if the volume is bootable (**true**) or not (**false**).",
              "args": []
            },
            {
              "name": "href",
              "description": "The hyper link of the volume.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_pi_key": {
      "name": "ibm_pi_key",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Power Systems data sources",
      "args": [
        {
          "name": "pi_cloud_instance_id",
          "description": "(Required, String) The GUID of the service instance associated with an account.",
          "args": []
        },
        {
          "name": "pi_key_name",
          "description": "(Required, String) The name of the key.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "creation_date",
          "description": "The timestamp when the SSH key was created.",
          "args": []
        },
        {
          "name": "id",
          "description": "The unique identifier of the SSH key.",
          "args": []
        },
        {
          "name": "sshkey",
          "description": "The public SSH key value.",
          "args": []
        }
      ]
    },
    "ibm_pi_network": {
      "name": "ibm_pi_network",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Power Systems data sources",
      "args": [
        {
          "name": "pi_cloud_instance_id",
          "description": "(Required, String) The GUID of the service instance associated with an account.",
          "args": []
        },
        {
          "name": "pi_network_name",
          "description": "(Required, String) The name of the network.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "available_ip_count",
          "description": "The total number of IP addresses that you have in your network.",
          "args": []
        },
        {
          "name": "gateway",
          "description": "The network gateway that is attached to your network.",
          "args": []
        },
        {
          "name": "id",
          "description": "The ID of the network.",
          "args": []
        },
        {
          "name": "used_ip_count",
          "description": "The number of used IP addresses.",
          "args": []
        },
        {
          "name": "used_ip_percent",
          "description": "The percentage of IP addresses used.",
          "args": []
        },
        {
          "name": "vlan_id",
          "description": "The VLAN ID that the network is connected to.",
          "args": []
        },
        {
          "name": "type",
          "description": "The type of network.",
          "args": []
        },
        {
          "name": "cidr",
          "description": "The CIDR of the network.",
          "args": []
        }
      ]
    },
    "ibm_pi_public_network": {
      "name": "ibm_pi_public_network",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Power Systems data sources",
      "args": [
        {
          "name": "pi_cloud_instance_id",
          "description": "(Required, String) The GUID of the service instance associated with an account.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "name",
          "description": "The name of the network.",
          "args": []
        },
        {
          "name": "id",
          "description": "The ID of the network.",
          "args": []
        },
        {
          "name": "type",
          "description": "The type of VLAN that the network is connected to.",
          "args": []
        },
        {
          "name": "vlan_id",
          "description": "The ID of the VLAN that the network is connected to.",
          "args": []
        }
      ]
    },
    "ibm_pi_tenant": {
      "name": "ibm_pi_tenant",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Power Systems data sources",
      "args": [
        {
          "name": "pi_cloud_instance_id",
          "description": "(Required, String) The GUID of the service instance associated with an account.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "creation_date",
          "description": "The timestamp when the tenant was created.",
          "args": []
        },
        {
          "name": "enabled",
          "description": "If set to **true**, the tenant is enabled for the Power Systems Virtual Server instance ID. If set to **false**, the tenant is not enabled for the instance.",
          "args": []
        },
        {
          "name": "id",
          "description": "The ID of the tenant.",
          "args": []
        },
        {
          "name": "tenantname",
          "description": "The name of the tenant.",
          "args": []
        },
        {
          "name": "cloudinstances",
          "description": "A list with the regions and Power Systems Virtual Server instance IDs that the tenant owns.",
          "args": [
            {
              "name": "cloud_instance_id",
              "description": "The unique identifier of the cloud instance.",
              "args": []
            },
            {
              "name": "region",
              "description": "The region of the cloud instance.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_pi_volume": {
      "name": "ibm_pi_volume",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Power Systems data sources",
      "args": [
        {
          "name": "pi_cloud_instance_id",
          "description": "(Required, String) The GUID of the service instance associated with an account.",
          "args": []
        },
        {
          "name": "pi_volume_name",
          "description": "(Required, String) The name of the volume for which you want to retrieve detailed information.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "bootable",
          "description": "If set to **true**, the Power Systems Virtual Server instance can boot from this volume. If set to **false**, this volume is not used during the boot process of the instance.",
          "args": []
        },
        {
          "name": "id",
          "description": "The unique identifier of the volume.",
          "args": []
        },
        {
          "name": "size",
          "description": "The size of the volume in gigabytes.",
          "args": []
        },
        {
          "name": "state",
          "description": "The state of the volume.",
          "args": []
        },
        {
          "name": "type",
          "description": "The disk type that is used for the volume.",
          "args": []
        },
        {
          "name": "wwn",
          "description": "The world wide name of the volume.",
          "args": []
        }
      ]
    },
    "ibm_resource_group": {
      "name": "ibm_resource_group",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Resource management data sources",
      "args": [
        {
          "name": "name",
          "description": "(Optional, String) The name of the resource group. You can retrieve the value by running the `ibmcloud resource groups` command. If you set this option, do not specify `is_default` at the same time.",
          "args": []
        },
        {
          "name": "is_default",
          "description": "(Optional, Boolean) If set to **true**, you retrieve information about the default resource group. If set to **false**, you retrieve information about a resource group other than default. The default value is `false`. If you set this option, do not specify `name` at the same time.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the resource group.",
          "args": []
        }
      ]
    },
    "ibm_resource_instance": {
      "name": "ibm_resource_instance",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Resource management data sources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the resource instance.",
          "args": []
        },
        {
          "name": "resource_group_id",
          "description": "(Optional, String) The ID of the resource group where the service instance exists. If no value is specified, the `default` resource group is used by default.",
          "args": []
        },
        {
          "name": "location",
          "description": "(Optional, String) The location where the instance is deployed to.",
          "args": []
        },
        {
          "name": "service",
          "description": "(Optional, String) The service type of the instance. You can retrieve the value by running the `ibmcloud catalog service-marketplace` or `ibmcloud catalog search` command.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the service instance.",
          "args": []
        },
        {
          "name": "status",
          "description": "The status of the service instance.",
          "args": []
        },
        {
          "name": "plan",
          "description": "The service plan that is used for the service instance.",
          "args": []
        },
        {
          "name": "guid",
          "description": "The GUID of the resource instance.",
          "args": []
        },
        {
          "name": "extensions",
          "description": "The extended metadata as a map associated with the resource instance.",
          "args": []
        }
      ]
    },
    "ibm_resource_key": {
      "name": "ibm_resource_key",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Resource management data sources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the resource key. You can retrieve the value by running the `ibmcloud resource service-keys` command.",
          "args": []
        },
        {
          "name": "resource_instance_id",
          "description": "(Optional, String) The ID of the resource instance that the resource key is associated with. You can retrieve the value by running the `ibmcloud resource service-instances` command. If you set this option, do not specify `resource_alias_id` at the same time.",
          "args": []
        },
        {
          "name": "resource_alias_id",
          "description": "(Optional, String) The ID of the resource alias that the resource key is associated with. You can retrieve the value by running the `ibmcloud resource service-alias` command. If you set this option, do not specify `resource_instance_id` at the same time.",
          "args": []
        },
        {
          "name": "most_recent",
          "description": "(Optional, Boolean) For multiple resource keys, you can set this argument to `true` to import only the most recently created key.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the resource key.",
          "args": []
        },
        {
          "name": "credentials",
          "description": "The credentials associated with the key.",
          "args": []
        },
        {
          "name": "role",
          "description": "The user role.",
          "args": []
        },
        {
          "name": "status",
          "description": "Status of the resource key.",
          "args": []
        }
      ]
    },
    "ibm_resource_quota": {
      "name": "ibm_resource_quota",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Resource management data sources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the quota for the service instance. You can retrieve the value by running the `ibmcloud resource quotas` command.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the quota.",
          "args": []
        },
        {
          "name": "type",
          "description": "The type of the quota.",
          "args": []
        },
        {
          "name": "max_apps",
          "description": "Defines the total app limit.",
          "args": []
        },
        {
          "name": "max_instances_per_app",
          "description": "Defines the total instances limit per app.",
          "args": []
        },
        {
          "name": "max_app_instance_memory",
          "description": "Defines the total memory of app instance.",
          "args": []
        },
        {
          "name": "total_app_memory",
          "description": "Defines the total memory for app.",
          "args": []
        },
        {
          "name": "max_service_instances",
          "description": "Defines the total service instances limit.",
          "args": []
        },
        {
          "name": "vsi_limit",
          "description": "Defines the VSI limit.",
          "args": []
        }
      ]
    },
    "ibm_schematics_output": {
      "name": "ibm_schematics_output",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Schematics data sources",
      "args": [
        {
          "name": "workspace_id",
          "description": "(Required, String) The ID of the Schematics workspace. You can retrieve this information by running `ibmcloud terraform workspace list`.",
          "args": []
        },
        {
          "name": "template_id",
          "description": "(Required, String) The ID of the template that the workspace uses. This value must be retrieved from the `ibm_schematics_workspace` data source and set to `data.ibm_schematics_workspace.vpc.template_id.0`.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "output_values",
          "description": "A list of Terraform output values that were exported for the workspace. All map entries are listed as key-value pairs.",
          "args": []
        },
        {
          "name": "output_json",
          "description": "The output values of a Schematics workspace in JSON format.",
          "args": []
        }
      ]
    },
    "ibm_schematics_state": {
      "name": "ibm_schematics_state",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Schematics data sources",
      "args": [
        {
          "name": "workspace_id",
          "description": "(Required, String) The ID of the Schematics workspace. You can retrieve this information by running `ibmcloud terraform workspace list`.",
          "args": []
        },
        {
          "name": "template_id",
          "description": "(Required, String) The of the template that the workspace uses.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "state_store",
          "description": "The URL to the location where the Terraform state file is stored.",
          "args": []
        }
      ]
    },
    "ibm_schematics_workspace": {
      "name": "ibm_schematics_workspace",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Schematics data sources",
      "args": [
        {
          "name": "workspace_id",
          "description": "(Required, String) The ID of the Schematics workspace. You can retrieve this information by running `ibmcloud terraform workspace list`.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "name",
          "description": "The name of the workspace.",
          "args": []
        },
        {
          "name": "types",
          "description": "The supported types of the Terraform version.",
          "args": []
        },
        {
          "name": "status",
          "description": "The status of the workspace.",
          "args": []
        },
        {
          "name": "is_frozen",
          "description": "If set to **true**, the workspace is frozen and disabled for changes. If set to **false**, the workspace is unfrozen and updates can be made to the workspace.",
          "args": []
        },
        {
          "name": "is_locked",
          "description": "If set to **true**, the workspace is locked and disabled for changes. If set to **false**, the workspace is unlocked and updates can be made to the workspace.",
          "args": []
        },
        {
          "name": "template_id",
          "description": "The ID of the templates that are present in the workspace.",
          "args": []
        },
        {
          "name": "tags",
          "description": "The tags that were added to the workspace.",
          "args": []
        },
        {
          "name": "resource_group",
          "description": "The resource group associated with the workspace.",
          "args": []
        }
      ]
    },
    "ibm_security_group": {
      "name": "ibm_security_group",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure data sources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the security group.",
          "args": []
        },
        {
          "name": "description",
          "description": "(Optional, String) The description of the security group.",
          "args": []
        },
        {
          "name": "most_recent",
          "description": "(Optional, Boolean) If more than one security group has the same name or description, you can set this argument to `true` to import only the most recent security group. **NOTE**: The search must return only one match for Terraform to be success. Ensure that your name and description combinations are specific enough to return a single security group key only, or set the `most_recent` argument to `true`.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the security group.",
          "args": []
        },
        {
          "name": "description",
          "description": "The description of the security group.",
          "args": []
        }
      ]
    },
    "ibm_service_instance": {
      "name": "ibm_service_instance",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Cloud Foundry data sources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the service instance. You can retrieve the value by running the `ibmcloud service list` command.",
          "args": []
        },
        {
          "name": "space_guid",
          "description": "(Required, String) The GUID of the Cloud Foundry space where the service instance is deployed to. You can retrieve the value from data source `ibm_space`.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the service instance.",
          "args": []
        },
        {
          "name": "credentials",
          "description": "The credentials provided by the service broker to use this service.",
          "args": []
        },
        {
          "name": "service_keys",
          "description": "The service keys associated with this service.",
          "args": []
        },
        {
          "name": "service_plan_guid",
          "description": "The plan GUID for the service offering used by this service instance.",
          "args": []
        }
      ]
    },
    "ibm_service_key": {
      "name": "ibm_service_key",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Cloud Foundry data sources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the service key. You can retrieve the value by running the `ibmcloud service keys` command in the IBM Cloud CLI.",
          "args": []
        },
        {
          "name": "service_instance_name",
          "description": "(Required, String) The name of the service instance that the service key is associated with. You can retrieve the value by running the `ibmcloud service list` command in the IBM Cloud CLI.",
          "args": []
        },
        {
          "name": "space_guid",
          "description": "(Required, String) The GUID of the Cloud Foundry space where the service instance exists. You can retrieve the value from the data source `ibm_space`.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the service key.",
          "args": []
        },
        {
          "name": "credentials",
          "description": "The credentials associated with the key.",
          "args": []
        }
      ]
    },
    "ibm_service_plan": {
      "name": "ibm_service_plan",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Cloud Foundry data sources",
      "args": [
        {
          "name": "service",
          "description": "(Required, String) The name of the service offering. You can retrieve the name of the service by running the `ibmcloud service offerings` command in the IBM Cloud CLI.",
          "args": []
        },
        {
          "name": "plan",
          "description": "(Required, String) The name of the plan type supported by the service. You can retrieve the plan type by running the `ibmcloud service offerings` command in the IBM Cloud CLI.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the service plan.",
          "args": []
        }
      ]
    },
    "ibm_space": {
      "name": "ibm_space",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Cloud Foundry data sources",
      "args": [
        {
          "name": "name",
          "description": "(Optional, String) The name of your space.",
          "args": []
        },
        {
          "name": "org",
          "description": "(Deprecated, String) The name of your Cloud Foundry organization that the space belongs to. You can retrieve the value by running the `ibmcloud iam orgs` command in the IBM Cloud CLI.",
          "args": []
        },
        {
          "name": "space",
          "description": "(Deprecated, String) The name of your Cloud Foundry space. You can retrieve the value by running the `ibmcloud iam spaces` command in the IBM Cloud CLI.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "auditors",
          "description": "The email addresses (associated with IBMid) of the users who have an auditor role in this space.",
          "args": []
        },
        {
          "name": "developers",
          "description": "The email addresses (associated with IBMid) of the users who have a developer role in this space.",
          "args": []
        },
        {
          "name": "id",
          "description": "The unique identifier of the space.",
          "args": []
        },
        {
          "name": "managers",
          "description": "The email addresses (associated with IBMid) of the users who have a manager role in this space.",
          "args": []
        }
      ]
    },
    "ibm_tg_gateway": {
      "name": "ibm_tg_gateway",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Transit Gateway data sources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the gateway.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "created_at",
          "description": "The date and time resource is created.",
          "args": []
        },
        {
          "name": "updated_at",
          "description": "The date and time resource is last updated.",
          "args": []
        },
        {
          "name": "crn",
          "description": "The CRN of the gateway.",
          "args": []
        },
        {
          "name": "global",
          "description": "The gateways with global routing true to connect to the networks outside the associated region.",
          "args": []
        },
        {
          "name": "location",
          "description": "The gateway location.",
          "args": []
        },
        {
          "name": "id",
          "description": "The unique identifier of this gateway.",
          "args": []
        },
        {
          "name": "status",
          "description": "The gateway status.",
          "args": []
        },
        {
          "name": "resource_group",
          "description": "The resource group identifier.",
          "args": []
        },
        {
          "name": "connections",
          "args": [
            {
              "name": "name",
              "description": "The user-defined name for the transit gateway connection.",
              "args": []
            },
            {
              "name": "network_type",
              "description": "The type of network connected with the connection. Possible values are `classic` or `VPC`.",
              "args": []
            },
            {
              "name": "network_account_id",
              "description": "The ID of the network connected account. This is used if the network is in a different account than the gateway.",
              "args": []
            },
            {
              "name": "network_id",
              "description": "The ID of the network being connected with the connection.",
              "args": []
            },
            {
              "name": "id",
              "description": "The unique identifier for the transit gateway connection to network either `VPC` or `classic`).",
              "args": []
            },
            {
              "name": "created_at",
              "description": "The date and time the connection is created.",
              "args": []
            },
            {
              "name": "updated_at",
              "description": "The date and time the connection is last updated.",
              "args": []
            },
            {
              "name": "status",
              "description": "The current configuration state of the connection. Possible values are `attached`, `failed,` `pending`, `deleting`.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_tg_gateways": {
      "name": "ibm_tg_gateways",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Transit Gateway data sources",
      "args": [],
      "attrs": [
        {
          "name": "transit_gateways",
          "description": "List of all transit gateways.",
          "args": [
            {
              "name": "created_at",
              "description": "The date and time resource is created.",
              "args": []
            },
            {
              "name": "updated_at",
              "description": "The date and time resource is last updated.",
              "args": []
            },
            {
              "name": "crn",
              "description": "The CRN of the gateway.",
              "args": []
            },
            {
              "name": "global",
              "description": "The gateways with global routing true to connect to the networks outside the associated region.",
              "args": []
            },
            {
              "name": "id",
              "description": "The unique identifier of this gateway.",
              "args": []
            },
            {
              "name": "location",
              "description": "The gateway location.",
              "args": []
            },
            {
              "name": "name",
              "description": "The user-defined name for the transit gateway connection.",
              "args": []
            },
            {
              "name": "status",
              "description": "The gateway status.",
              "args": []
            },
            {
              "name": "resource_group",
              "description": "Resource group identifier.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_tg_location": {
      "name": "ibm_tg_location",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Transit Gateway data sources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the transit gateway location.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "billing_location",
          "description": "The geographical location of the location, used for billing purposes.",
          "args": []
        },
        {
          "name": "name",
          "description": "The name of the location.",
          "args": []
        },
        {
          "name": "type",
          "description": "The type of the location, determining a `multi-zone region`, a `single data center`, or a `point of presence`.",
          "args": []
        },
        {
          "name": "local_connection_locations",
          "description": "The set of network locations that are considered local for the transit gateway location.",
          "args": [
            {
              "name": "display_name",
              "description": "The descriptive display name for the location.",
              "args": []
            },
            {
              "name": "name",
              "description": "The name of the location.",
              "args": []
            },
            {
              "name": "type",
              "description": "The type of the location, determining a `multi-zone region`, a `single data center`, or a `point of presence`.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_tg_locations": {
      "name": "ibm_tg_locations",
      "type": "data",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Transit Gateway data sources",
      "args": [],
      "attrs": [
        {
          "name": "locations",
          "description": "List of all locations that supports transit gateways.",
          "args": [
            {
              "name": "billing_location",
              "description": "The geographical location of the location, used for billing purposes.",
              "args": []
            },
            {
              "name": "name",
              "description": "The name of the location.",
              "args": []
            },
            {
              "name": "type",
              "description": "The type of the location, determining a `multi-zone region`, a `single data center`, or a `point of presence`.",
              "args": []
            }
          ]
        }
      ]
    }
  },
  "resource": {
    "ibm_api_gateway_endpoint": {
      "name": "ibm_api_gateway_endpoint",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "API Gateway resources",
      "args": [
        {
          "name": "service_instance_crn",
          "description": "(Required, String) The CRN of the service instance.",
          "args": []
        },
        {
          "name": "name",
          "description": "(Required, String) The name of the API Gateway endpoint. This value is optional when you create an API Gateway endpoint, but required when you update the endpoint.",
          "args": []
        },
        {
          "name": "managed",
          "description": "(Optional, Boolean) If set to **true**, the endpoint is online. If set to **false**, the endpoint is offline. The default value is false. The API endpoint cannot be shared if this value is set to **false**.",
          "args": []
        },
        {
          "name": "open_api_doc_name",
          "description": "(Required, String) The API document that represents the endpoint.",
          "args": []
        },
        {
          "name": "routes",
          "description": "(Optional, List) The routes that you can invoke for an endpoint.",
          "args": []
        },
        {
          "name": "provider_id",
          "description": "(Optional, String) The provider ID of an API endpoint. Supported values are `user-defined`, and `whisk`. The default value is `user-defined`.",
          "args": []
        },
        {
          "name": "type",
          "description": "(Optional, String) The type of action that is performed on the API endpoint. Supported values are `share`, `unshare`, `manage`, and `unmanage`. The default value is `unshare`. The endpoint actions are performed by using the `type` parameter after the endpoint is created. As a consequence, endpoint actions are invoked during an endpoint update only.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The ID of the endpoint. The ID is composed of `<service_instance_crn>//<endpoint_ID>`.",
          "args": []
        },
        {
          "name": "endpoint_id",
          "description": "The ID of the endpoint, also referred to as the artifact ID.",
          "args": []
        },
        {
          "name": "shared",
          "description": "The shared status of an endpoint.",
          "args": []
        },
        {
          "name": "base_path",
          "description": "The base path of an endpoint. The base paths must be unique.",
          "args": []
        }
      ]
    },
    "ibm_api_gateway_endpoint_subscription": {
      "name": "ibm_api_gateway_endpoint_subscription",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "API Gateway resources",
      "args": [
        {
          "name": "artifact_id",
          "description": "(Required, String) The ID of an API endpoint.",
          "args": []
        },
        {
          "name": "client_id",
          "description": "(Optional, String) The API key to generate an API key for the subscription. The generated API key represents the ID of a subscription.",
          "args": []
        },
        {
          "name": "name",
          "description": "(Required, String) The name for an API key.",
          "args": []
        },
        {
          "name": "client_secret",
          "description": "(Optional, String) The secret of the API key.",
          "args": []
        },
        {
          "name": "generate_secret",
          "description": "(Optional, Boolean) If set to **true**, the secret key is auto-generated. If set to **false**, the secret key is not auto-generated.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The ID of the subscription. The ID is composed of `<artifact_id>//<client_id>`.",
          "args": []
        },
        {
          "name": "secret_provided",
          "description": "If set to **true**, the client secret is provided. If set to **false**, the client secret is not provided.",
          "args": []
        }
      ]
    },
    "ibm_app": {
      "name": "ibm_app",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Cloud Foundry resources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the app that you want to create, update, or delete. You can retrieve the value by running the `ibmcloud app list` command in the IBM Cloud CLI.",
          "args": []
        },
        {
          "name": "memory",
          "description": "(Optional, Integer) The amount of memory, specified in megabytes, that is allocated to each instance. If you don't specify a value, the system assigns pre-defined values based on the app quota. You can check the default values by running `ibmcloud cf org <org-name>`. The command lists the quotas that are defined in your Cloud Foundry organization and space. If space quotas are defined, you can see them by running `ibmcloud cf space-quota <space-quota-name>`, where `<quota-name>` is the name of the quota. To check the organization quotas, run `ibmcloud cf quota <quota-name>`.",
          "args": []
        },
        {
          "name": "instances",
          "description": "(Optional, Integer) The number of app instances that you want to create.",
          "args": []
        },
        {
          "name": "disk_quota",
          "description": "(Optional, Integer) The maximum amount of disk space, specified in megabytes, that is available to an app instance. The default value is [1024 MB](http://bosh.io/jobs/cloud_controller_ng?source=github.com/cloudfoundry/cf-release&version=234#p=cc.default_app_disk_in_mb).",
          "args": []
        },
        {
          "name": "space_guid",
          "description": "(Required, String) The GUID of the space where the app is deployed. You can retrieve the value from data source `ibm_space` or by running the `ibmcloud iam space <space-name> --guid` command in the IBM Cloud CLI.",
          "args": []
        },
        {
          "name": "buildpack",
          "description": "(Optional, String) The buildpack to use when compiling or preparing the app. Provide the buildpack in one of the following ways: <ul><li>Leave it blank for auto-detection.</li><li>Enter the GitHub URL to a buildpack, such as `https://github.com/cloudfoundry/nodejs-buildpack.git`.</li><li>List the name of an installed buildpack. For example, `go_buildpack`</li></ul>",
          "args": []
        },
        {
          "name": "environment_json",
          "description": "(Optional, Map) A list of environment variables to run your app, specified as key-value pairs. Do not provide any key-value pairs for system or service variables.",
          "args": []
        },
        {
          "name": "command",
          "description": "(Optional, String) The initial command to run when the app starts.",
          "args": []
        },
        {
          "name": "route_guid",
          "description": "(Optional, Set) The GUIDs of the routes that you want to bind to the application. The route must be in the same Cloud Foundry space as the app.",
          "args": []
        },
        {
          "name": "service_instance_guid",
          "description": "(Optional, Set) The GUID of the service instance that you want to bind to the app.",
          "args": []
        },
        {
          "name": "wait_time_minutes",
          "description": "(Optional, Integer) The duration, expressed in minutes, to wait for the app to restage or start. The default value is `20`. A value of `0` means that there is no wait period.",
          "args": []
        },
        {
          "name": "app_path",
          "description": "(Required, String) The path to the compressed file of the app. The compressed file must contain all the app files without subdirectories. To create the compressed file, go to the directory where your app files are and run `zip -r myapplication.zip *`.",
          "args": []
        },
        {
          "name": "app_version",
          "description": "(Optional, String) The version of the app. If you make changes to the content in the app compressed file specified by _app_path_, Terraform can't detect the changes. You can let Terraform know that your file content has changed by either changing the application compressed file name or by using this argument to indicate the version of the file.",
          "args": []
        },
        {
          "name": "health_check_http_endpoint",
          "description": "(Optional, String) The endpoint that you want to use to determine if the app is healthy.",
          "args": []
        },
        {
          "name": "health_check_type",
          "description": "(Optional, String) The type of health check that you want to perform. Supported values are `port`, and `process`. The default values is `port`.",
          "args": []
        },
        {
          "name": "health_check_timeout",
          "description": "(Optional, Integer) The number of seconds to wait for the health check to respond during the start of your app before the health check is considered failed.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of strings) The tags that you want to add to your app instance. Tags can help you find your app more easily.  **NOTE**: `Tags` are managed locally and not stored on the IBM Cloud Service Endpoint at this moment.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the app.",
          "args": []
        }
      ]
    },
    "ibm_app_domain_private": {
      "name": "ibm_app_domain_private",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Cloud Foundry resources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the private domain.",
          "args": []
        },
        {
          "name": "org_guid",
          "description": "(Required, String) The GUID of the Cloud Foundry organization where you want to create the domain. You can retrieve the value from data source `ibm_org` or by running the `ibmcloud iam orgs --guid` command in the IBM Cloud CLI.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of Strings) The tags that you want to add to your private domain.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the private domain.",
          "args": []
        }
      ]
    },
    "ibm_app_domain_shared": {
      "name": "ibm_app_domain_shared",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Cloud Foundry resources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the domain.",
          "args": []
        },
        {
          "name": "router_group_guid",
          "description": "(Optional, String) The GUID of the router group.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of strings) The tags that you want to add to the shared domain. Tags can help you find the domain more easily later.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the shared domain.",
          "args": []
        }
      ]
    },
    "ibm_app_route": {
      "name": "ibm_app_route",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Cloud Foundry resources",
      "args": [
        {
          "name": "domain_guid",
          "description": "(Required, String) The GUID of the associated domain. You can retrieve the value from data source `ibm_app_domain_shared` or `ibm_app_domain_private`.",
          "args": []
        },
        {
          "name": "space_guid",
          "description": "(Required, String) The GUID of the Cloud Foundry space where you want to create the route. You can retrieve the value from data source `ibm_space` or by running the `ibmcloud iam space <space_name> --guid` command in the IBM Cloud CLI.",
          "args": []
        },
        {
          "name": "host",
          "description": "(Optional, String) The hostname of the route. The hostname is required for shared domains.",
          "args": []
        },
        {
          "name": "port",
          "description": "(Optional, String) The port of the route. This option is supported for TCP router group domains only.",
          "args": []
        },
        {
          "name": "path",
          "description": "(Optional, String) The path for the route. Paths must be between 2-128 characters, must start with a forward slash (/), and cannot contain a question mark (?).",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of strings) The tags that you want to add to the route. Tags can help you find the route more easily later.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the route.",
          "args": []
        }
      ]
    },
    "ibm_cdn": {
      "name": "ibm_cdn",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure resources",
      "args": [
        {
          "name": "host_name",
          "description": "(Required, String) The host name that is associated with the CDN domain mapping.",
          "args": []
        },
        {
          "name": "cname",
          "description": "(Optional, String) The CNAME for your CDN.",
          "args": []
        },
        {
          "name": "path",
          "description": "(Optional, String) The path for the CDN.",
          "args": []
        },
        {
          "name": "vendor_name",
          "description": "(Required, String) Only `akamai` is supported for now.",
          "args": []
        },
        {
          "name": "origin_type",
          "description": "(Required, String) The type of storage to use. Valid values are `HOST_SERVER` or `OBJECT_STORAGE`.",
          "args": []
        },
        {
          "name": "origin_address",
          "description": "(Required, String) The IP address for the domain mapping.",
          "args": []
        },
        {
          "name": "protocol",
          "description": "(Optional, String) The protocol to use. Default value is `HTTP`.",
          "args": []
        },
        {
          "name": "http_port",
          "description": "(Optional, Integer) The port to be opened up. Default value is 80. This option can be set only if you use `HTTP` or `HTTPS` as the `protocol`.",
          "args": []
        },
        {
          "name": "https_port",
          "description": "(Optional, Integer) The HTTPS port. Default value is 0. This option can be set only if you use `HTTP` or `HTTPS` as the `protocol`.",
          "args": []
        },
        {
          "name": "bucket_name",
          "description": "(Required, String) If `origin_type` is set to `OBJECT_STORAGE`, you must provide the name of the bucket to use.",
          "args": []
        },
        {
          "name": "certificate_type",
          "description": "(Conditional, String) The type of certificate to use. This value is required if `protocol` is set to `HTTPS`. Valid values are `SHARED_SAN_CERT` or `WILDCARD_CERT`.",
          "args": []
        },
        {
          "name": "header",
          "description": "(Optional, String) The header for the CDN.",
          "args": []
        },
        {
          "name": "respect_headers",
          "description": "(Optional, Boolean) If set to **true**, the TTL settings in the origin override CDN TTL settings.",
          "args": []
        },
        {
          "name": "file_extension",
          "description": "(Optional, String) If `origin_type` is set to `OBJECT_STORAGE`, you can specify the file extensions that you want to cache.",
          "args": []
        },
        {
          "name": "performance_configuration",
          "description": "(Optional, String) The performance configuration. Default is `General web delivery`.",
          "args": []
        },
        {
          "name": "cache_key_query_rule",
          "description": "(Optional, String) The rule for caching keys. Valid values are `include-all` (includes all query arguments), `ignore-all` (ignores all query arguments), `ignore: space separated query-args` (ignores specific query arguments). Default value is `include-all`.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique internal identifier of the CDN domain mapping.",
          "args": []
        },
        {
          "name": "status",
          "description": "The Status of the CDN domain mapping.",
          "args": []
        }
      ]
    },
    "ibm_certificate_manager_import": {
      "name": "ibm_certificate_manager_import",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Certificate Manager resources",
      "args": [
        {
          "name": "certificate_manager_instance_id",
          "description": "(Required, String) The CRN-based service instance ID.",
          "args": []
        },
        {
          "name": "name",
          "description": "(Required, String) The display name for the imported certificate.",
          "args": []
        },
        {
          "name": "data",
          "description": "(Required, Map) The certificate data.",
          "args": [
            {
              "name": "content",
              "description": "(Required, String) The content of certificate data, escaped.",
              "args": []
            },
            {
              "name": "priv_key",
              "description": "(Optional, String) The private key data, escaped.",
              "args": []
            },
            {
              "name": "intermediate",
              "description": "(Optional, String) The intermediate certificate data, escaped.",
              "args": []
            }
          ]
        },
        {
          "name": "description",
          "description": "(Optional, String) The description of the certificate.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The ID of the certificate.",
          "args": []
        },
        {
          "name": "issuer",
          "description": "The issuer of the certificate.",
          "args": []
        },
        {
          "name": "begins_on",
          "description": "The creation date of the certificate in UNIX epoch time.",
          "args": []
        },
        {
          "name": "expires_on",
          "description": "The expiration date of the certificate in UNIX epoch time.",
          "args": []
        },
        {
          "name": "imported",
          "description": "Indicates whether a certificate was imported or not.",
          "args": []
        },
        {
          "name": "status",
          "description": "The status of certificate. Possible values are `active`, `inactive`, `expired`, `revoked`, `valid`, `pending`, and `failed`.",
          "args": []
        },
        {
          "name": "has_previous",
          "description": "Indicates whether a certificate has a previous version.",
          "args": []
        },
        {
          "name": "key_algorithm",
          "description": "The key algorithm. Valid values are `rsaEncryption 2048 bit` or `rsaEncryption 4096 bit`. Default value is `rsaEncryption 2048 bit`.",
          "args": []
        },
        {
          "name": "algorithm",
          "description": "The encryption algorithm. Valid values are `sha256WithRSAEncryption`.",
          "args": []
        }
      ]
    },
    "ibm_certificate_manager_order": {
      "name": "ibm_certificate_manager_order",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Certificate Manager resources",
      "args": [
        {
          "name": "certificate_manager_instance_id",
          "description": "(Required, String) The CRN of your Certificate Manager instance.",
          "args": []
        },
        {
          "name": "name",
          "description": "(Required, String) The name for the certificate that you want to order.",
          "args": []
        },
        {
          "name": "description",
          "description": "(Optional, String) The description that you want to add to the certificate that you order.",
          "args": []
        },
        {
          "name": "domains",
          "description": "(Required, List of strings) A list of valid domains for the issued certificate. The first domain is the primary domain. More domains are secondary domains.",
          "args": []
        },
        {
          "name": "rotate_keys",
          "description": "(Optional, Boolean) Default value is False",
          "args": []
        },
        {
          "name": "domain_validation_method",
          "description": "(Optional, String) The domain validation method that you want to use for your domain. The validation method is applied to analyze DNS parameters for your domain and determine the domain health and quality standards that your domain meets. Supported parameters are `dns-01`.",
          "args": []
        },
        {
          "name": "key_algorithm",
          "description": "(Optional, String) The encryption algorithm key that you want to use for your certificate. Supported values are `rsaEncryption 2048 bit`, and `rsaEncryption 4096 bit`. If you do not provide an algorithm, `rsaEncryption 2048 bit` is used by default.",
          "args": []
        },
        {
          "name": "dns_provider_instance_crn",
          "description": "(Optional, String) The CRN-based instance ID of the IBM Cloud Internet Services instance that manages the domains. If not present, Certificate Manager assumes that a `v4` or Callback URL notifications channel with domain validation exists.",
          "args": []
        },
        {
          "name": "auto_renew_enabled",
          "description": "(Optional, Boolean) Determines the certificate is auto that is renewed. Default is **false**. <br> With `auto_renew_enabled` as true, certificates are automatically renewed for 31 days. If the certificate expires before 31 days. You can renew by updating `rotate_keys` to renew the certificates automatically.",
          "args": []
        },
        {
          "name": "renew_certificate",
          "description": "(Optional, Boolean) Determines the certificate to renew. Default value is **false**.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The ID of the certificate.",
          "args": []
        },
        {
          "name": "issuer",
          "description": "The issuer of the certificate.",
          "args": []
        },
        {
          "name": "begins_on",
          "description": "The creation date of the certificate in UNIX epoch time.",
          "args": []
        },
        {
          "name": "expires_on",
          "description": "The expiration date of the certificate in UNIX epoch time.",
          "args": []
        },
        {
          "name": "imported",
          "description": "Indicates whether a certificate was imported or not.",
          "args": []
        },
        {
          "name": "status",
          "description": "The status of certificate. Possible values are `active`, `inactive`, `expired`, `revoked`, `valid`, `pending`, and `failed`.",
          "args": []
        },
        {
          "name": "has_previous",
          "description": "Indicates whether a certificate has a previous version.",
          "args": []
        },
        {
          "name": "key_algorithm",
          "description": "The key algorithm. Valid values are `rsaEncryption 2048 bit` or `rsaEncryption 4096 bit`. Default value is `rsaEncryption 2048 bit`.",
          "args": []
        },
        {
          "name": "algorithm",
          "description": "The encryption algorithm. Valid values are `sha256WithRSAEncryption`.",
          "args": []
        }
      ]
    },
    "ibm_cis": {
      "name": "ibm_cis",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Internet services resources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) A descriptive name for your IBM Cloud Internet Services instance.",
          "args": []
        },
        {
          "name": "plan",
          "description": "(Required, String) The name of the plan for your instance. To retrieve this value, run `ibmcloud catalog service internet-svcs`.",
          "args": []
        },
        {
          "name": "location",
          "description": "(Required, String) The target location where you want to create your instance.",
          "args": []
        },
        {
          "name": "resource_group_id",
          "description": "(Optional, String) The ID of the resource group where you want to create the service. To retrieve this value, run `ibmcloud resource groups` or use the `ibm_resource_group` data source. If no value is specified, the `default` resource group is used.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array) A list of tags that you want to associate with the instance.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The CRN of the IBM Cloud Internet Services instance.",
          "args": []
        },
        {
          "name": "guid",
          "description": "The unique identifier of the IBM Cloud Internet Services instance.",
          "args": []
        },
        {
          "name": "status",
          "description": "The status of the IBM Cloud Internet Services instance.",
          "args": []
        }
      ]
    },
    "ibm_cis_cache_settings": {
      "name": "ibm_cis_cache_settings",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Internet services resources",
      "args": [
        {
          "name": "browser_expiration",
          "description": "(Optional, Integer) The Browser expiration settings. Valid values are `0, 30, 60, 300, 1200, 1800, 3600, 7200, 10800, 14400, 18000, 28800, 43200, 57600, 72000, 86400, 172800, 259200, 345600, 432000, 691200, 1382400, 2073600, 2678400, 5356800, 16070400, 31536000`.",
          "args": []
        },
        {
          "name": "cis_id",
          "description": "(Required, String) The ID of the IBM Cloud Internet Services instance.",
          "args": []
        },
        {
          "name": "caching_level",
          "description": "(Optional, String) The cache level settings. Valid values are `basic`, `simplified`, `aggressive`.",
          "args": []
        },
        {
          "name": "domain_id",
          "description": "(Required, String) The ID of the domain to change cache settings.",
          "args": []
        },
        {
          "name": "development_mode",
          "description": "(Optional, String) The development mode enable or disable settings. Valid values are `on`, and `off`.",
          "args": []
        },
        {
          "name": "purge_all",
          "description": "(Optional, Boolean) Purge all cached files.",
          "args": []
        },
        {
          "name": "purge_by_urls",
          "description": "(Optional, List of String) Purge cached URLs.",
          "args": []
        },
        {
          "name": "purge_by_hosts",
          "description": "(Optional, List of String) Purge cached hosts.",
          "args": []
        },
        {
          "name": "purge_by_tags",
          "description": "(Optional, List of String) Purge cached item that matches the tags.",
          "args": []
        },
        {
          "name": "query_string_sort",
          "description": "(Optional, String) The query string sort settings. Valid values are `on`, and `off`.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The record ID. It is a combination of `<domain_id>,<cis_id>` attributes concatenated with `:`.",
          "args": []
        }
      ]
    },
    "ibm_cis_certificate_order": {
      "name": "ibm_cis_certificate_order",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Internet services resources",
      "args": [
        {
          "name": "cis_id",
          "description": "(Required, String) The ID of the IBM Cloud Internet Services instance.",
          "args": []
        },
        {
          "name": "domain_id",
          "description": "(Required, String) The ID of the domain.",
          "args": []
        },
        {
          "name": "hosts",
          "description": "(Required, String) The hosts for the certificates to be ordered.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The record ID. It is a combination of `<certificate_id>,<domain_id>,<cis_id>` attributes concatenated with `:`.",
          "args": []
        },
        {
          "name": "certificate_id",
          "description": "The certificate ID.",
          "args": []
        },
        {
          "name": "status",
          "description": "The certificate status.",
          "args": []
        }
      ]
    },
    "ibm_cis_certificate_upload": {
      "name": "ibm_cis_certificate_upload",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Internet services resources",
      "args": [
        {
          "name": "cis_id",
          "description": "(Required, String) The ID of the IBM Cloud Internet Services instance.",
          "args": []
        },
        {
          "name": "domain_id",
          "description": "(Required, String) The ID of the domain to add the rules certificate upload.",
          "args": []
        },
        {
          "name": "certificate",
          "description": "(Required, String) The intermediate(s) certificate key.",
          "args": []
        },
        {
          "name": "private_key",
          "description": "(Required, String) The certificate private key.",
          "args": []
        },
        {
          "name": "bundle_method",
          "description": "(Optional, String) The certificate bundle method. The valid values are `ubiquitous`, `optimal`, `force`.",
          "args": []
        },
        {
          "name": "priority",
          "description": "(Optional, Integer) The order or priority in which the certificate is used in a request.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The record ID. It is a combination of `<custom_cert_id>:<domain_id>:<cis_id>` attributes concatenated with `:`.",
          "args": []
        },
        {
          "name": "certificate_id",
          "description": "The certificate ID.",
          "args": []
        },
        {
          "name": "status",
          "description": "The certificate status.",
          "args": []
        },
        {
          "name": "custom_cert_id",
          "description": "The certificate upload rule ID.",
          "args": []
        },
        {
          "name": "status",
          "description": "The certificate status.",
          "args": []
        },
        {
          "name": "issuer",
          "description": "The certificate issuer.",
          "args": []
        },
        {
          "name": "signature",
          "description": "The certificate signature.",
          "args": []
        },
        {
          "name": "expires_on",
          "description": "The expiry date and time of the certificate.",
          "args": []
        },
        {
          "name": "uploaded_on",
          "description": "The uploaded date and time of the certificate.",
          "args": []
        },
        {
          "name": "modified_on",
          "description": "The modified date and time of the certificate.",
          "args": []
        }
      ]
    },
    "ibm_cis_custom_page": {
      "name": "ibm_cis_custom_page",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Internet services resources",
      "args": [
        {
          "name": "cis_id",
          "description": "(Required, String) The ID of the IBM Cloud Internet Services instance.",
          "args": []
        },
        {
          "name": "domain_id",
          "description": "(Required, String) The ID of the domain to change custom page.",
          "args": []
        },
        {
          "name": "page_id",
          "description": "(Required, String) The custom page identifier. Valid values are `basic_challenge`, `waf_challenge`, `waf_block`, `ratelimit_block`, `country_challenge`, `ip_block`, `under_attack`, `500_errors`, `1000_errors`, `always_online`.",
          "args": []
        },
        {
          "name": "url",
          "description": "(Required, String) The URL for custom page settings. By default URL is set with empty string `\"\"`. Setting a duplicate empty string throws an error.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "created_on",
          "description": "Created date and time of the custom page.",
          "args": []
        },
        {
          "name": "description",
          "description": "The description of the custom page.",
          "args": []
        },
        {
          "name": "id",
          "description": "The record ID. It is a combination of `<domain_id>,<cis_id>` attributes concatenated with `:`.",
          "args": []
        },
        {
          "name": "modified_on",
          "description": "Modified date and time of the custom page.",
          "args": []
        },
        {
          "name": "preview_target",
          "description": "The custom page target.",
          "args": []
        },
        {
          "name": "required_tokens",
          "description": "The custom page required token which is expected from URL page.",
          "args": []
        },
        {
          "name": "state",
          "description": "The custom page state. This is set default when there is an empty URL and can customize when URL is set with some URL.",
          "args": []
        }
      ]
    },
    "ibm_cis_dns_record": {
      "name": "ibm_cis_dns_record",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Internet services resources",
      "args": [],
      "attrs": []
    },
    "ibm_cis_dns_records_import": {
      "name": "ibm_cis_dns_records_import",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Internet services resources",
      "args": [
        {
          "name": "domain_id",
          "description": "(Required, String) The ID of the domain to import the DNS records.",
          "args": []
        },
        {
          "name": "cis_id",
          "description": "(Required, String) The ID of the IBM Cloud Internet Services instance.",
          "args": []
        },
        {
          "name": "file",
          "description": "(Required, String) The DNS zone file that contains the details of the DNS records.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The record ID. It is a combination of `<total_records_parsed>:<records_added>:<file>:<domain_id>:<cis_id>` attributes concatenated with `:`.",
          "args": []
        },
        {
          "name": "total_records_parsed",
          "description": "The parsed records count from imported file.",
          "args": []
        },
        {
          "name": "records_added",
          "description": "The added records count from imported file.",
          "args": []
        }
      ]
    },
    "ibm_cis_domain": {
      "name": "ibm_cis_domain",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Internet services resources",
      "args": [
        {
          "name": "domain",
          "description": "(Required, String) The DNS domain name that you want to add to your IBM Cloud Internet Services instance.",
          "args": []
        },
        {
          "name": "cis_id",
          "description": "(Required, String) The ID of the IBM Cloud Internet Services instance.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the domain.",
          "args": []
        },
        {
          "name": "paused",
          "description": "Indicates if the domain is paused and network traffic bypasses your IBM Cloud Internet Services instance. The default values is **false**.",
          "args": []
        },
        {
          "name": "status",
          "description": "The status of the domain. Valid values are `active`, `pending`, `initializing`, `moved`, `deleted`, and `deactivated`. After creation, the status remains pending until the DNS Registrar is updated with the CIS name servers, exported in the `name_servers` variable.",
          "args": []
        },
        {
          "name": "name_servers",
          "description": "The name servers that are assigned to your IBM Cloud Internet Services instance.",
          "args": []
        },
        {
          "name": "original_name_servers",
          "description": "The name servers that were used when the domain was first registered with the DNS Registrar.",
          "args": []
        }
      ]
    },
    "ibm_cis_domain_settings": {
      "name": "ibm_cis_domain_settings",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Internet services resources",
      "args": [
        {
          "name": "always_use_https",
          "description": "(Optional, String) Supported values are `off` and `on`.",
          "args": []
        },
        {
          "name": "automatic_https_rewrites",
          "description": "(Optional, String) Enable HTTPS rewrites. Allowed values are `off` and `on`.",
          "args": []
        },
        {
          "name": "browser_check",
          "description": "(Optional, String) Enable a client browser check to look for common HTTP headers that are used by malicious users. If HTTP headers are found,  access to your website is blocked. Supported values are `off` and `on`.",
          "args": []
        },
        {
          "name": "brotli",
          "description": "(Optional, String) Supported values are `off` and `on`.",
          "args": []
        },
        {
          "name": "challenge_ttl",
          "description": "(Optional, String) Challenge TTL values are `300`, `900`, `1800`, `2700`, `3600`, `7200`, `10800`, `14400`, `28800`, `57600`, `86400`, `604800`, `2592000`, and `31536000`.",
          "args": []
        },
        {
          "name": "cipher",
          "description": "(Optional, String) Cipher setting values are  `ECDHE-ECDSA-AES128-GCM-SHA256`, `ECDHE-ECDSA-CHACHA20-POLY1305`,`ECDHE-RSA-AES128-GCM-SHA256`, `ECDHE-RSA-CHACHA20-POLY1305`, `ECDHE-ECDSA-AES128-SHA256`, `ECDHE-ECDSA-AES128-SHA`, `ECDHE-RSA-AES128-SHA256`, `ECDHE-RSA-AES128-SHA`, `AES128-GCM-SHA256`, `AES128-SHA256`, `AES128-SHA`, `ECDHE-ECDSA-AES256-GCM-SHA384`, `ECDHE-ECDSA-AES256-SHA384`, `ECDHE-RSA-AES256-GCM-SHA384`, `ECDHE-RSA-AES256-SHA384`, `ECDHE-RSA-AES256-SHA`, `AES256-GCM-SHA384`, `AES256-SHA256`, `AES256-SHA`, `DES-CBC3-SHA`.",
          "args": []
        },
        {
          "name": "cis_id",
          "description": "(Required, String) The ID of the IBM Cloud Internet Services instance.",
          "args": []
        },
        {
          "name": "cname_flattening",
          "description": "(Optional, String) Supported values are `flatten_at_root`, `flatten_all`, and `flatten_none`.",
          "args": []
        },
        {
          "name": "domain_id",
          "description": "(Required, String) The ID of the domain that you want to customize.",
          "args": []
        },
        {
          "name": "dnssec",
          "description": "(Optional, String) Can set to `active` only once. Allowed values are `active`, `disabled`.",
          "args": []
        },
        {
          "name": "hotlink_protection",
          "description": "(Optional, String) Supported values are `off` and `on`.",
          "args": []
        },
        {
          "name": "http2",
          "description": "(Optional, String) Supported values are `off` and `on`.",
          "args": []
        },
        {
          "name": "image_load_optimization",
          "description": "(Optional, String) Supported values are `off` and `on`.",
          "args": []
        },
        {
          "name": "image_size_optimization",
          "description": "(Optional, String) Supported values are `lossless`,  `off`, and `lossy`.",
          "args": []
        },
        {
          "name": "ipv6",
          "description": "(Optional, String) Supported values are `off` and `on`.",
          "args": []
        },
        {
          "name": "ip_geolocation",
          "description": "(Optional, String) Supported values are `off` and `on`.",
          "args": []
        },
        {
          "name": "max_upload",
          "description": "(Optional, String) Maximum upload values are `100`, `125`, `150`, `175`, `200`, `225`, `250`, `275`, `300`, `325`, `350`, `375`, `400`, `425`, `450`, `475`, and `500`.",
          "args": []
        },
        {
          "name": "min_tls_version",
          "description": "(Optional, String) The minimum TLS version that you want to allow. Allowed values are `1.1`, `1.2`, or `1.3`.",
          "args": []
        },
        {
          "name": "minify",
          "description": "(Optional, List) Minify the setting as stated.",
          "args": [
            {
              "name": "css",
              "description": "(Required, String) CSS supported values are `on` and `off`.",
              "args": []
            },
            {
              "name": "html",
              "description": "(Required, String) HTML supported values are `on` and `off`.",
              "args": []
            },
            {
              "name": "js",
              "description": "(Required, String) JS supported values are `on` and `off`.",
              "args": []
            }
          ]
        },
        {
          "name": "mobile_redirect",
          "description": "(Optional, List) Mobile redirect setting.",
          "args": [
            {
              "name": "status",
              "description": "(Required, Boolean) Mobile redirect setting status values are `true` and `false`.",
              "args": []
            },
            {
              "name": "mobile_subdomain",
              "description": "(Optional, String) Mobile redirect subdomain. For example `m.domain.com`",
              "args": []
            },
            {
              "name": "strip_uri",
              "description": "(Optional, Boolean) Strip URI for mobile redirect.",
              "args": []
            }
          ]
        },
        {
          "name": "origin_error_page_pass_thru",
          "description": "(Optional, String) Supported values are `off` and `on`.",
          "args": []
        },
        {
          "name": "opportunistic_encryption",
          "description": "(Optional, String) Supported values are `off` and `on`.",
          "args": []
        },
        {
          "name": "pseudo_ipv4",
          "description": "(Optional, String) Supported values are `overwrite_header`, `off`, and `add_header`.",
          "args": []
        },
        {
          "name": "prefetch_preload",
          "description": "(Optional, String) Supported values are `off` and `on`.",
          "args": []
        },
        {
          "name": "response_buffering",
          "description": "(Optional, String) Supported values are `off` and `on`.",
          "args": []
        },
        {
          "name": "script_load_optimization",
          "description": "(Optional, String) Supported values are `off` and `on`.",
          "args": []
        },
        {
          "name": "server_side_exclude",
          "description": "(Optional, String) Supported values are `off` and `on`.",
          "args": []
        },
        {
          "name": "security_header",
          "description": "(Optional, List) Security headers as stated.",
          "args": [
            {
              "name": "enabled",
              "description": "(Required, Boolean) Supported values are `true` and `false`.",
              "args": []
            },
            {
              "name": "include_subdomains",
              "description": "(Required, Boolean) Supported values are `true` and `false`.",
              "args": []
            },
            {
              "name": "max_age",
              "description": "(Required, Integer) Maximum age of the security header.",
              "args": []
            },
            {
              "name": "nosniff",
              "description": "(Required, Boolean) No sniff.",
              "args": []
            }
          ]
        },
        {
          "name": "ssl",
          "description": "(Optional, String) Allowed values: `off`, `flexible`, `full`, `strict`, `origin_pull`.",
          "args": []
        },
        {
          "name": "tls_client_auth",
          "description": "(Optional, String) Supported values are `off` and `on`.",
          "args": []
        },
        {
          "name": "true_client_ip_header",
          "description": "(Optional, String) Supported values are `off` and `on`.",
          "args": []
        },
        {
          "name": "waf",
          "description": "(Optional, String) Enable a web application firewall (WAF). Supported values are `off` and `on`.",
          "args": []
        },
        {
          "name": "websockets",
          "description": "(Optional, String) Supported values are `off` and `on`.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "certificate_status",
          "description": "Value of: `none`, `initializing`, `authorizing`, or `active`.",
          "args": []
        }
      ]
    },
    "ibm_compute_autoscale_group": {
      "name": "ibm_compute_autoscale_group",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure resources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the autoscaling group.",
          "args": []
        },
        {
          "name": "regional_group",
          "description": "(Required, String) The regional group for the autoscaling group.",
          "args": []
        },
        {
          "name": "minimum_member_count",
          "description": "(Required, Integer) The minimum number of virtual guest members that are allowed in the autoscaling group.",
          "args": []
        },
        {
          "name": "maximum_member_count",
          "description": "(Required, Integer) The maximum number of virtual guest members that are allowed in the autoscaling group.",
          "args": []
        },
        {
          "name": "cooldown",
          "description": "(Required, Integer) The duration, expressed in seconds, that the autoscaling group waits before performing another scaling action.",
          "args": []
        },
        {
          "name": "termination_policy",
          "description": "(Required, String) The termination policy for the autoscaling group.",
          "args": []
        },
        {
          "name": "virtual_guest_member_template",
          "description": "(Required, Array of strings) The template with which to create guest members. Only one template can be configured. You can find accepted values in the [`ibm_compute_vm_instance`](#vm) resource.",
          "args": []
        },
        {
          "name": "network_vlan_ids",
          "description": "(Optional, Array) The collection of VLAN IDs for the autoscaling group. You can find accepted values in the [VLAN console](https://cloud.ibm.com/classic/network/vlans). Click the VLAN that you want and notes the ID in the resulting URL. You can also refer to a VLAN name by using a data source.",
          "args": []
        },
        {
          "name": "virtual_server_id",
          "description": "(Optional, Integer) The ID of a virtual server in a local load balancer. You can find the ID with the following URL `https://api.softlayer.com/rest/v3/SoftLayer_Network_Application_Delivery_Controller_LoadBalancer_VirtualIpAddress/<load_balancer_ID>/getObject?objectMask=virtualServers`. Replace `<load_balancer_ID>` with the ID of the target load balancer. **Note**: To view the load balancer ID. Log in to the [IBM Cloud Classic Infrastructure API](https://api.softlayer.com/rest/v3/SoftLayer_Hardware/getCreateObjectOptions.json) that uses your API key as the password. For more information, about creating classic infrastructure keys and locating your VPN username and password, refer [Managing classic infrastructure API keys](/docs/account?topic=account-classic_keys).",
          "args": []
        },
        {
          "name": "port",
          "description": "(Optional, Integer) The port number in a local load balancer. For example, `8080`.",
          "args": []
        },
        {
          "name": "health_check",
          "description": "(Optional, Map) The type of health check in a local load balancer. For example, `HTTP`. You can also use this value to specify custom HTTP methods.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of strings) A list of tags that you want to add to the autoscaling group. Tags are managed locally and not stored on the IBM Cloud Service Endpoint at this moment.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the autoscaling group.",
          "args": []
        }
      ]
    },
    "ibm_compute_autoscale_policy": {
      "name": "ibm_compute_autoscale_policy",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure resources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the autoscaling policy.",
          "args": []
        },
        {
          "name": "scale_type",
          "description": "(Required, String) The scale type for the autoscaling policy. Accepted values are `ABSOLUTE`, `RELATIVE`, and `PERCENT`.",
          "args": []
        },
        {
          "name": "scale_amount",
          "description": "(Required, Integer) A count of the scaling actions to perform upon any trigger hit.",
          "args": []
        },
        {
          "name": "cooldown",
          "description": "(Optional, Integer) The duration, expressed in seconds, that the policy waits after the last action date before performing another scaling action. If you do not provide a value, the `scale_group` cool down applies.",
          "args": []
        },
        {
          "name": "scale_group_id",
          "description": "(Required, Integer) The ID of the autoscaling group that is associated with the policy.",
          "args": []
        },
        {
          "name": "triggers",
          "description": "(Optional, Array of strings) The triggers to check for this group.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of strings) The tags that you want to add to the autoscaling policy. Tags are managed locally and not stored on the IBM Cloud Service Endpoint at this moment.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the autoscaling policy.",
          "args": []
        }
      ]
    },
    "ibm_compute_bare_metal": {
      "name": "ibm_compute_bare_metal",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure resources",
      "args": [
        {
          "name": "hostname",
          "description": "(Optional, String) The host name for the compute instance.",
          "args": []
        },
        {
          "name": "domain",
          "description": "(Required, String) The domain for the computing instance.",
          "args": []
        },
        {
          "name": "user_metadata",
          "description": "(Optional, String) (Arbitrary data to be made available to the compute instance.",
          "args": []
        },
        {
          "name": "notes",
          "description": "(Optional, String) Notes to associate with the instance.",
          "args": []
        },
        {
          "name": "ssh_key_ids",
          "description": "(Optional, Array of integers) The SSH key IDs to install on the compute instance when the instance is provisioned. **Note:** If you don't know the IDs for your SSH keys, you can reference your SSH keys by their labels.",
          "args": []
        },
        {
          "name": "post_install_script_uri",
          "description": "(Optional, String) The URI of the script to be downloaded and executed after installation is complete.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of strings) Tags associated with this Bare Metal server. Permitted characters include A-Z, 0-9, whitespace, `_` (underscore), `-` (hyphen), `.` (period), and `:` (colon). All other characters are removed.",
          "args": []
        },
        {
          "name": "file_storage_ids",
          "description": "(Optional, Array of integers) File storage to which this computing instance has access. File storage must be in the same data center as the Bare Metal server. If you use this argument to authorize, access to file storage, do not use the `allowed_hardware_ids` argument in the `ibm_storage_file` resource in order to prevent the same storage be added twice.",
          "args": []
        },
        {
          "name": "block_storage_ids",
          "description": "(Optional, Array of integers) Block storage to which this computing instance has access. Block storage must be in the same data center as the Bare Metal server. If you use this argument to authorize, access to block storage, do not use the `allowed_hardware_ids` argument in the `ibm_storage_file` resource in order to prevent the same storage be added twice.#### Arguments common to hourly and monthly server",
          "args": []
        },
        {
          "name": "datacenter",
          "description": "(Required, String) The data center in which you want to provision the instance.",
          "args": []
        },
        {
          "name": "gpu_key_name",
          "description": "(Optional, String) The key name for the primary Graphics Processing Unit (GPU). For example, `GPU_NVIDIA_GRID_K2`. Locate your package ID. See `package_key_name` attribute. To fetch the `PACKAGE_ID`, you need to access [Package ID](https://api.softlayer.com/rest/v3/SoftLayer_Product_Package/getAllObjects?objectFilter={%22type%22:{%22keyName%22:{%22operation%22:%22BARE_METAL_CPU%22}}}) URL to view the `ID`. Once you have the ID, for example provide `PACKAGE_ID` as `142`, fetch its details by accessing the URL `https://api.softlayer.com/rest/v3/SoftLayer_Product_Package/142/getItems?objectMask=mask[prices[id,categories[id,name,categoryCode],capacityRestrictionType,capacityRestrictionMinimum,capacityRestrictionMaximum,locationGroupId]]`. Select a `GPU` key name from the resulting available `GPU` key names where category code is `gpu0`. **Note**: To view the package ID. Log in to the [IBM Cloud Classic Infrastructure API](https://api.softlayer.com/rest/v3/SoftLayer_Hardware/getCreateObjectOptions.json) that uses your API key as the password. For more information, about creating classic infrastructure keys and locating your VPN username and password, refer [Managing classic infrastructure API keys](/docs/account?topic=account-classic_keys).",
          "args": []
        },
        {
          "name": "gpu_secondary_key_name",
          "description": "(Optional, String) The key name for the secondary Graphics Processing Unit (GPU). For example, `GPU_NVIDIA_GRID_K2`. Key names can be fetched in the similar way as `gpu_key_name` and  category code is `gpu1`.",
          "args": []
        },
        {
          "name": "hourly_billing",
          "description": "(Required, Boolean) The billing type for the instance. When set to `true`, the compute instance is billed on hourly usage. Otherwise, the instance is billed monthly. The default value is `true`.",
          "args": []
        },
        {
          "name": "redundant_power_supply",
          "description": "(Optional, Boolean) When the value is `true`, more power supply is provided.",
          "args": []
        },
        {
          "name": "redundant_network",
          "description": "(Optional, Boolean) When the value is `true`, two physical network interfaces are provided with a bonding configuration. The default value is `false`.",
          "args": []
        },
        {
          "name": "unbonded_network",
          "description": "(Optional, Boolean) When the value is `true`, two physical network interfaces are provided without a bonding configuration. The default value is `false`.",
          "args": []
        },
        {
          "name": "network_speed",
          "description": "(Optional, Integer) The connection speed, expressed in Mbps,  for the instance's network components. The default value is `100`.",
          "args": []
        },
        {
          "name": "private_network_only",
          "description": "(Optional, Boolean) Specifies whether the instance has only access to the private network. When the value is `true`, a compute instance has only access to the private network. The default value is `false`.",
          "args": []
        },
        {
          "name": "extended_hardware_testing",
          "description": "(Optional, Boolean) Enable the extended hardware testing while the Bare Metal server. The default value is `false`. **Note**: Enabling the `extended_hardware_testing` cause considerable delays in the deployment.",
          "args": []
        },
        {
          "name": "ipv6_enabled",
          "description": "(Optional, Boolean) The primary public IPv6 address. The default value is `false`.",
          "args": []
        },
        {
          "name": "ipv6_static_enabled",
          "description": "(Optional, Boolean) The public static IPv6 address block of `/64`. The default value is `false`.",
          "args": []
        },
        {
          "name": "secondary_ip_count",
          "description": "(Optional, Integer) Specifies secondary public IPv4 addresses. Accepted values are `4` and `8`.",
          "args": []
        },
        {
          "name": "image_template_id",
          "description": "(Optional, Integer) The image template ID you want to use to provision the computing instance. This is not the global identifier (UUID), but the image template group ID that should point to a valid global identifier. To retrieve the image template ID from the IBM Cloud infrastructure customer portal, navigate to **Devices > Manage > Images**, click the image that you want, and note the ID number in the resulting URL.       **NOTE**: Conflicts with `os_reference_code`.",
          "args": []
        },
        {
          "name": "fixed_config_preset",
          "description": "(Required, String) The configuration preset with which you want to provision the Bare Metal server. This preset governs the type of CPU, number of cores, amount of RAM, and number of hard disks that the Bare Metal server has. To see the available presets, log in to the [IBM Cloud Classic Infrastructure API](https://api.softlayer.com/rest/v3/SoftLayer_Hardware/getCreateObjectOptions.json) that uses your API key as the password. For more information, about creating classic infrastructure keys and locating your VPN username and password, refer [Managing classic infrastructure API keys](/docs/account?topic=account-classic_keys).  You can search for `fixedConfigurationPresets` to view the presets key names. **Note**: The `fixedConfigurationPresets` key names are displayed in the `JSON` or `txt` format.",
          "args": []
        },
        {
          "name": "os_reference_code",
          "description": "(Optional, String) An operating system reference code that provisions the computing instance. To see available OS reference codes, log in to the [IBM Cloud Classic Infrastructure API](https://api.softlayer.com/rest/v3/SoftLayer_Virtual_Guest_Block_Device_Template_Group/getVhdImportSoftwareDescriptions.json?objectMask=referenceCode), that uses your API key as the password.         **NOTE**: Conflicts with `image_template_id`.",
          "args": []
        },
        {
          "name": "software_guard_extensions",
          "description": "(Optional, Boolean) The Software Guard Extensions product is added to a compatible server package, selecting `Intel SGX-enabled BIOS` and `hardware`. The default value is `false`.",
          "args": []
        },
        {
          "name": "public_vlan_id",
          "description": "(Optional, Integer) The public VLAN to be used for the public network interface of the instance. You can find accepted values in the [VLAN networks](https://cloud.ibm.com/classic/network/vlans). Click the VLAN that you want and notes the ID in the resulting URL.",
          "args": []
        },
        {
          "name": "private_vlan_id",
          "description": "(Optional, Integer) The private VLAN to be used for the private network interface of the instance. You can find accepted values in the [VLAN networks](https://cloud.ibm.com/classic/network/vlans). Click the VLAN that you want and notes the ID in the resulting URL.",
          "args": []
        },
        {
          "name": "public_subnet",
          "description": "(Optional, String) The public subnet to be used for the public network interface of the instance. Accepted values are primary public networks. You can find accepted values in the [subnets Docs](https://cloud.ibm.com/classic/network/subnets).",
          "args": []
        },
        {
          "name": "private_subnet",
          "description": "(Optional, String) The private subnet to be used for the private network interface of the instance. Accepted values are primary private networks. You can find accepted values in the [subnets Docs](https://cloud.ibm.com/classic/network/subnets).",
          "args": []
        },
        {
          "name": "package_key_name",
          "description": "(Optional, String) The key name for the monthly Bare Metal server's package.Use this argument when you create a new monthly Bare Metal server. You can find available package key names in the IBM Cloud API URL `https://api.softlayer.com/rest/v3/SoftLayer_Product_Package/getAllObjects?objectFilter={\"type\":{\"keyName\":{\"operation\":\"BARE_METAL_CPU\"}}}`, that uses your API key as the password.",
          "args": []
        },
        {
          "name": "process_key_name",
          "description": "(Optional, String) The key name for the monthly Bare Metal server's process. Use this argument when you create a new monthly Bare Metal server. To get a process key name, first find the package key name in the [IBM CloudAPI](https://api.softlayer.com/rest/v3/SoftLayer_Product_Package/getAllObjects?objectFilter={\"type\":{\"keyName\":{\"operation\":\"BARE_METAL_CPU\"}}}). To fetch the `PACKAGE_ID`, you need to access [Package ID](https://api.softlayer.com/rest/v3/SoftLayer_Product_Package/getAllObjects?objectFilter={%22type%22:{%22keyName%22:{%22operation%22:%22BARE_METAL_CPU%22}}}) URL to view the `ID`. Once you have the ID, for example provide `PACKAGE_ID` as `142`. Then, replace <PACKAGE_ID> with your package key name in the following URL `https://api.softlayer.com/rest/v3/SoftLayer_Product_Package/142/getItems?objectMask=mask[prices[id,categories[id,name,categoryCode],capacityRestrictionType,capacityRestrictionMinimum,capacityRestrictionMaximum,locationGroupId]]`. Select a process key name from the resulting available process key names. **Note**: To view the package ID. log in to the [IBM Cloud Classic Infrastructure API](https://api.softlayer.com/rest/v3/SoftLayer_Hardware/getCreateObjectOptions.json) that uses your API key as the password. For more information, about creating classic infrastructure keys and locating your VPN username and password, refer [Managing classic infrastructure API keys](/docs/account?topic=account-classic_keys).",
          "args": []
        },
        {
          "name": "disk_key_names",
          "description": "(Optional, Array of strings) The internal key names for the monthly Bare Metal server's disk. Use this argument when you create a new monthly Bare Metal server. To get disk key names, first find the package key name in the [IBM Cloud API](https://api.softlayer.com/rest/v3/SoftLayer_Product_Package/getAllObjects?objectFilter={\"type\":{\"keyName\":{\"operation\":\"BARE_METAL_CPU\"}}}). Then, replace <PACKAGE_NAME> with your package key name in the following [URL](https://api.softlayer.com/rest/v3/SoftLayer_Product_Package/PACKAGE_NAME/getItems?objectMask=mask[prices[id,categories[id,name,categoryCode],capacityRestrictionType,capacityRestrictionMinimum,capacityRestrictionMaximum,locationGroupId]]). Select disk key names from the resulting available disk key names.",
          "args": []
        },
        {
          "name": "os_key_name",
          "description": "(Optional, String) The operating system key name that you want to use to provision the computing instance. To get disk key names, first find the package key name in the [{site.data.keyword.cloud_notm}} API](https://api.softlayer.com/rest/v3/SoftLayer_Product_Package/getAllObjects?objectFilter={\"type\":{\"keyName\":{\"operation\":\"BARE_METAL_CPU\"}}}). Then, replace <PACKAGE_NAME> with your package key name in the following [URL](https://api.softlayer.com/rest/v3/SoftLayer_Product_Package/<PACKAGE_NAME>/getItems?objectMask=mask[prices[id,categories[id,name,categoryCode],capacityRestrictionType,capacityRestrictionMinimum,capacityRestrictionMaximum,locationGroupId]]). Select an OS key name from the resulting available OS key names.",
          "args": []
        },
        {
          "name": "public_bandwidth",
          "description": "(Optional, Integer) The amount of public network traffic, which is specified in gigabytes, allowed per month. The value can be greater than 0 when `private_network_only` is set to `false` and the server is a monthly based server.",
          "args": []
        },
        {
          "name": "memory",
          "description": "(Optional, Integer) The amount of memory, which is specified in gigabytes, for the server.",
          "args": []
        },
        {
          "name": "storage_groups",
          "description": "(Optional, List of objects) Configurations for RAID and partition.",
          "args": [
            {
              "name": "array_type_id",
              "description": "(Required, Integer) The RAID type. You can retrieve the value from the [{site.data.keyword.cloud_notm} API](https://api.softlayer.com/rest/v3/SoftLayer_Configuration_Storage_Group_Array_Type/getAllObjects).",
              "args": []
            },
            {
              "name": "hard_drives",
              "description": "(Required, Array of integers) The index of hard disks for RAID configuration. The index starts at 0. For example, the array [0,1] is an index of two hard disks.",
              "args": []
            },
            {
              "name": "array_size",
              "description": "(Optional, Integer) The target RAID disk size, specific in gigabytes.",
              "args": []
            },
            {
              "name": "partition_template_id",
              "description": "(Optional, String) The partition template ID for the OS disk. Templates are different based on the target OS. To get the partition template ID, first find the OS ID in the [{site.data.keyword.cloud_notm} API](https://api.softlayer.com/rest/v3/SoftLayer_Hardware_Component_Partition_OperatingSystem/getAllObjects). Then, replace <OS_ID> with your OS ID in the following URL `https://api.softlayer.com/rest/v3/SoftLayer_Hardware_Component_Partition_OperatingSystem/<OS_ID>/getPartitionTemplates`. Select your template ID in resulting available partition template IDs.",
              "args": []
            }
          ]
        },
        {
          "name": "software_guard_extensions",
          "description": "(Optional, Boolean) The Software Guard Extensions product is added to a compatible server package, selecting Intel SGX-enabled BIOS and hardware. The default value is `false`.",
          "args": []
        },
        {
          "name": "restricted_network",
          "description": "(Optional, Boolean) The non-datacenter restricted port speed. The default value is `false`.",
          "args": []
        },
        {
          "name": "tcp_monitoring",
          "description": "(Optional, Boolean) When the value is `false`, a ping monitoring service is provided. When the value is `true`, a ping monitoring service and a TCP monitoring service are provided.#### Arguments for quote-based Bare Metal servers",
          "args": []
        },
        {
          "name": "public_vlan_id",
          "description": "(Optional, Integer) The public VLAN to be used for the public network interface of the instance. You can find accepted values in the [VLAN network](https://cloud.ibm.com/classic/network/vlans). Click the VLAN that you want and notes the ID in the resulting URL.",
          "args": []
        },
        {
          "name": "private_vlan_id",
          "description": "(Optional, Integer) The private VLAN to be used for the private network interface of the instance. You can find accepted values in the [VLAN network](https://cloud.ibm.com/classic/network/vlans). Click the VLAN that you want and notes the ID in the resulting URL.",
          "args": []
        },
        {
          "name": "public_subnet",
          "description": "(Optional, String) The public subnet to be used for the public network interface of the instance. Accepted values are primary public networks. You can find accepted values in the [subnets Docs](https://cloud.ibm.com/classic/network/subnets).",
          "args": []
        },
        {
          "name": "private_subnet",
          "description": "(Optional, String) The private subnet to be used for the private network interface of the instance. Accepted values are primary private networks. You can find accepted values in the [subnets Docs](https://cloud.ibm.com/classic/network/subnets).",
          "args": []
        },
        {
          "name": "quote_id",
          "description": "(Optional, String) When you define `quote_id`, Terraform uses specifications in the quote to create a Bare Metal server. You can find the quote ID in the [IBM Cloud infrastructure customer portal](https://cloud.ibm.com/classic) by navigating to **Account > Sales > Quotes**.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the Bare Metal server.",
          "args": []
        },
        {
          "name": "public_ipv4_address",
          "description": "The public IPv4 address of the Bare Metal server.",
          "args": []
        },
        {
          "name": "public_ipv4_address_id",
          "description": "The unique identifier for the public IPv4 address of the Bare Metal server.",
          "args": []
        },
        {
          "name": "private_ipv4_address",
          "description": "The private IPv4 address of the Bare Metal server.",
          "args": []
        },
        {
          "name": "private_ipv4_address_id",
          "description": "The unique identifier for the private IPv4 address of the Bare Metal server.",
          "args": []
        },
        {
          "name": "ipv6_address",
          "description": "The public IPv6 address of the Bare Metal server instance provided when `ipv6_enabled` is set to `true`.",
          "args": []
        },
        {
          "name": "ipv6_address_id",
          "description": "The unique identifier for the public IPv6 address of the Bare Metal server.",
          "args": []
        },
        {
          "name": "secondary_ip_addresses",
          "description": "The public secondary IPv4 addresses of the Bare Metal server instance when `secondary_ip_count` is set to nonzero value.",
          "args": []
        },
        {
          "name": "global_identifier",
          "description": "The unique global identifier of the Bare Metal server.",
          "args": []
        }
      ]
    },
    "ibm_compute_dedicated_host": {
      "name": "ibm_compute_dedicated_host",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure resources",
      "args": [
        {
          "name": "datacenter",
          "description": "(Required, String) The data center in which the dedicated host resides.",
          "args": []
        },
        {
          "name": "hostname",
          "description": "(Required, String) The host name of dedicated host.",
          "args": []
        },
        {
          "name": "domain",
          "description": "(Required, String) The domain of dedicated host.",
          "args": []
        },
        {
          "name": "router_hostname",
          "description": "(Required, String) The hostname of the primary router associated with the dedicated host.",
          "args": []
        },
        {
          "name": "hourly_billing",
          "description": "(Optional, Boolean) The billing type for the host. When set to `true`, the dedicated host is billed on hourly usage. Otherwise, the dedicated host is billed monthly. The default value is `true`.",
          "args": []
        },
        {
          "name": "flavor",
          "description": "(Optional, String) The flavor of dedicated host. Default value `56_CORES_X_242_RAM_X_1_4_TB`. [Log in to the IBM-Cloud Infrastructure API to see available flavor types](https://api.softlayer.com/rest/v3/SoftLayer_Product_Package/813/getItems.json). Use your API as the password to log in. Log in and find the key called `keyName`.",
          "args": []
        },
        {
          "name": "wait_time_minutes",
          "description": "(Optional, Integer) The duration, expressed in minutes to wait for the dedicated host to become available before creation. The default value is `90`.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of String) Tags associated with the dedicated host.",
          "args": []
        }
      ],
      "attrs": []
    },
    "ibm_compute_monitor": {
      "name": "ibm_compute_monitor",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure resources",
      "args": [
        {
          "name": "guest_id",
          "description": "(Required, Integer) The ID of the virtual guest that you want to monitor.",
          "args": []
        },
        {
          "name": "ip_address",
          "description": "(Optional, String) The IP address that you want to monitor.",
          "args": []
        },
        {
          "name": "query_type_id",
          "description": "(Required, Integer) The ID of the query type.",
          "args": []
        },
        {
          "name": "response_action_id",
          "description": "(Required,, Integer) The ID of the response action to take if the monitor fails. Accepted values are `1` or `2`.",
          "args": []
        },
        {
          "name": "wait_cycles",
          "description": "(Optional, Integer) The number of 5-minute cycles to wait before the response action is taken.",
          "args": []
        },
        {
          "name": "notified_users",
          "description": "(Optional, Array of Integers) The list of user IDs that is notified.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of Integers) Tags associated with the monitoring instance.     **NOTE**: `Tags` are managed locally and not stored on the IBM Cloud Service Endpoint at this moment.",
          "args": []
        }
      ],
      "attrs": []
    },
    "ibm_compute_placement_group": {
      "name": "ibm_compute_placement_group",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure resources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The descriptive that is used to identify a placement group.",
          "args": []
        },
        {
          "name": "datacenter",
          "description": "(Required, String) The datacenter in which you want to provision the placement group.",
          "args": []
        },
        {
          "name": "pod",
          "description": "(Required, String) The data center pod where you want to create the placement group. To find the pod, run `ibmcloud sl placement-group create-options` and select one of the **Back-end Router IDs** for the data center where you want to create the placement group.",
          "args": []
        },
        {
          "name": "rule",
          "description": "(Optional, String) The rule of the placement group. Default `SPREAD`.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of Strings) Tags associated with the placement group.     **NOTE**: `Tags` are managed locally and not stored on the IBM Cloud Service Endpoint at this moment.",
          "args": []
        }
      ],
      "attrs": []
    },
    "ibm_compute_provisioning_hook": {
      "name": "ibm_compute_provisioning_hook",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure resources",
      "args": [],
      "attrs": []
    },
    "ibm_compute_ssh_key": {
      "name": "ibm_compute_ssh_key",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure resources",
      "args": [],
      "attrs": []
    },
    "ibm_compute_ssl_certificate": {
      "name": "ibm_compute_ssl_certificate",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure resources",
      "args": [
        {
          "name": "certificate",
          "description": "(Required, String) The certificate provided publicly to clients requesting identity credentials.",
          "args": []
        },
        {
          "name": "intermediate_certificate",
          "description": "(Optional, String) The certificate from the intermediate certificate authority, or chain certificate, that completes the chain of trust. Required when clients only trust the root certificate.",
          "args": []
        },
        {
          "name": "private_key",
          "description": "(Required, String) The private key in the key/certificate pair.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of Strings) Tags associated with the security certificates instance.     **NOTE**: `Tags` are managed locally and not stored on the IBM Cloud Service Endpoint at this moment.",
          "args": []
        }
      ],
      "attrs": []
    },
    "ibm_compute_user": {
      "name": "ibm_compute_user",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure resources",
      "args": [],
      "attrs": []
    },
    "ibm_compute_vm_instance": {
      "name": "ibm_compute_vm_instance",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure resources",
      "args": [
        {
          "name": "hostname",
          "description": "(Optional, String) The hostname for the computing instance. If you set this option, do not specify `bulk_vms` at the same time.",
          "args": []
        },
        {
          "name": "domain",
          "description": "(Optional, String) The domain for the computing instance. If you set this option, do not specify `bulk_vms` at the same time.",
          "args": []
        },
        {
          "name": "bulk_vms",
          "description": "(Optional, List of objects) List of hostname and domain of the computing instance. The minimum number of vm's to be defined is 2.",
          "args": [
            {
              "name": "hostname",
              "description": "(Required, String) The hostname for the computing instance.",
              "args": []
            },
            {
              "name": "domain",
              "description": "(Required, String) The domain for the computing instance. If you set this option, do not specify `hostname` and `domain` at the same time.",
              "args": []
            }
          ]
        },
        {
          "name": "cores",
          "description": "(Optional, Integer) The number of CPU cores that you want to allocate. If you set this option, do not specify `flavor_key_name` at the same time.",
          "args": []
        },
        {
          "name": "memory",
          "description": "(Optional, Integer) The amount of memory, expressed in megabytes, that you want to allocate. If you set this option, do not specify `flavor_key_name` at the same time.",
          "args": []
        },
        {
          "name": "flavor_key_name",
          "description": "(Optional, String) The flavor key name that you want to use to provision the instance. To see available key name, log in to the [IBM Cloud Classic Infrastructure API](https://api.softlayer.com/rest/v3/SoftLayer_Virtual_Guest/getCreateObjectOptions.json), that uses your API key as the password. If you set this option, do not specify `cores` and `memory` at the same time.",
          "args": []
        },
        {
          "name": "datacenter",
          "description": "(Optional, String) The data center in which you want to provision the instance. **NOTE**: If `dedicated_host_name` or `dedicated_host_id`    is provided then the datacenter should be same as the dedicated host datacenter.     If `placement_group_name` or `placement_group_id`    is provided then the datacenter should be same as the placement group datacenter.    Conflicts with `datacenter_choice`.",
          "args": []
        },
        {
          "name": "hourly_billing",
          "description": "(Optional, Boolean) The billing type for the instance. When set to `true`, the computing instance is billed on hourly usage. Otherwise, the instance is billed monthly. The default value is `true`.",
          "args": []
        },
        {
          "name": "local_disk",
          "description": "(Optional, Boolean) The disk type for the instance. When set to `true`, the disks for the computing instance are provisioned on the host that the instance runs. Otherwise, SAN disks are provisioned. The default value is `true`.",
          "args": []
        },
        {
          "name": "dedicated_acct_host_only",
          "description": "(Optional, Boolean) Specifies whether the instance must only run on hosts with instances from the same account. The default value is `false`. If VM is provisioned by using `flavorKeyName`, value should be set to `false`.        **NOTE**: Conflicts with `dedicated_host_name`, `dedicated_host_id`, `placement_group_name` and `placement_group_id`.",
          "args": []
        },
        {
          "name": "dedicated_host_id",
          "description": "(Optional, Integer) Specifies [dedicated host](/docs/virtual-servers?topic=virtual-servers-dedicated-virtual-servers) for the instance by its ID. **NOTE**: Conflicts with `dedicated_acct_host_only`, `dedicated_host_name`, `placement_group_name` and `placement_group_id`.",
          "args": []
        },
        {
          "name": "dedicated_host_name",
          "description": "(Optional, String) Specifies [dedicated host](/docs/virtual-servers?topic=virtual-servers-dedicated-virtual-servers) for the instance by its name. **NOTE**: Conflicts with `dedicated_acct_host_only`, `dedicated_host_id`, `placement_group_name` and `placement_group_id`.",
          "args": []
        },
        {
          "name": "placement_group_id",
          "description": "(Optional, Integer) Specifies [placement group](/docs/virtual-servers?topic=virtual-servers-dedicated-virtual-servers) for the instance by its ID. **NOTE**: Conflicts with `dedicated_acct_host_only`, `dedicated_host_name`, `dedicated_host_id` and `placement_group_name`.",
          "args": []
        },
        {
          "name": "placement_group_name",
          "description": "(Optional, String) Specifies [placement group](/docs/virtual-servers?topic=virtual-servers-dedicated-virtual-servers) for the instance by its name.        **NOTE**: Conflicts with `dedicated_acct_host_only`, `dedicated_host_id`, `dedicated_host_name` and `placement_group_id`",
          "args": []
        },
        {
          "name": "transient",
          "description": "(Optional, Boolean) Specifies whether to provision a transient virtual server. The default value is `false`. Transient instances cannot be upgraded or downgraded. Transient instances cannot use local storage.       **NOTE**: Conflicts with `dedicated_acct_host_only`, `dedicated_host_id`, `dedicated_host_name`, `cores`, `memory`, `public_bandwidth_limited` and `public_bandwidth_unlimited`",
          "args": []
        },
        {
          "name": "os_reference_code",
          "description": "(Optional, String) The operating system reference code that is used to provision the computing instance. To see available OS reference codes, log in to the [IBM Cloud Classic Infrastructure API](https://api.softlayer.com/rest/v3/SoftLayer_Virtual_Guest_Block_Device_Template_Group/getVhdImportSoftwareDescriptions.json?objectMask=referenceCode), that uses your API key as the password.       **NOTE**: Conflicts with `image_id`.",
          "args": []
        },
        {
          "name": "image_id",
          "description": "(Optional, Integer) The image template ID that you want to use to provision the computing instance. This is not the global identifier (UUID), but the image template group ID that should point to a valid global identifier. To retrieve the image template ID from the IBM Cloud infrastructure customer portal, navigate to **Devices > Manage > Images**, click the image that you want, and note the ID number in the resulting URL. **NOTE**: Conflicts with `os_reference_code`.",
          "args": []
        },
        {
          "name": "network_speed",
          "description": "(Optional, Integer) The connection speed (in Mbps) for the instance's network components. The default value is `100`",
          "args": []
        },
        {
          "name": "private_network_only",
          "description": "(Optional, Boolean) When set to `true`, a compute instance has only access to the private network. The default value is `false`.",
          "args": []
        },
        {
          "name": "private_security_group_ids",
          "description": "(Optional, Array of integers) The IDs of security groups to apply on the private interface. This attribute can't be updated. You can use this parameter to add a security group to your virtual server instance when you create it. If you want to add or remove security groups later, you must use the `ibm_network_interface_sg_attachment` resource. If you use this attribute in addition to `ibm_network_interface_sg_attachment` resource you might experience errors. So use one of these consistently for a particular virtual server instance.",
          "args": []
        },
        {
          "name": "public_vlan_id",
          "description": "(Optional, Integer) The public VLAN ID for the public network interface of the instance. Accepted values are in the [VLAN doc](https://cloud.ibm.com/classic/network/vlans). Click the VLAN that you want and notes the ID number in the browser URL. You can also refer to a VLAN name by using a data source. **NOTE**: Conflicts with `datacenter_choice`.",
          "args": []
        },
        {
          "name": "private_vlan_id",
          "description": "(Optional, Integer) The private VLAN ID for the private network interface of the instance. You can find accepted values in the [VLAN doc](https://cloud.ibm.com/classic/network/vlans). Click the VLAN that you want to use and note the ID number in the browser URL. You can also refer to a VLAN name by using a data source. **NOTE**: Conflicts with `datacenter_choice`.",
          "args": []
        },
        {
          "name": "public_security_group_ids",
          "description": "(Optional, Array of integers) The IDs of security groups to apply on the public interface. This attribute can't be updated. You can use this parameter to add a security group to your virtual server instance when you create it. If you want to add or remove security groups later, you must use the `ibm_network_interface_sg_attachment` resource. If you use this attribute in addition to `ibm_network_interface_sg_attachment` resource, you might experience errors. So use one of these consistently for a particular virtual server instance.",
          "args": []
        },
        {
          "name": "public_subnet",
          "description": "(Optional, String) The public subnet for the public network interface of the instance. Accepted values are primary public networks. You can find accepted values in the [subnets doc](https://cloud.ibm.com/classic/network/subnets).",
          "args": []
        },
        {
          "name": "private_subnet",
          "description": "(Optional, String) The private subnet for the private network interface of the instance. Accepted values are primary private networks. You can find accepted values in the [subnets doc](https://cloud.ibm.com/classic/network/subnets).",
          "args": []
        },
        {
          "name": "disks",
          "description": "(Optional, Array of integers) The numeric disk sizes in GBs for the instance's block device and disk image settings. The default value is the smallest available capacity for the primary disk. If you specify an image template, the template provides the disk capacity. If you specify the `flavorKeyName`, first disk is provided by the flavor.",
          "args": []
        },
        {
          "name": "user_metadata",
          "description": "(Optional, String) Arbitrary data to be made available to the computing instance.",
          "args": []
        },
        {
          "name": "notes",
          "description": "(Optional, String) Descriptive text of up to 1000 characters about the VM instance.",
          "args": []
        },
        {
          "name": "ssh_key_ids",
          "description": "(Optional, Array of integers) The SSH key IDs to install on the computing instance when the instance provisions.      **NOTE** If you don't know the ID(s) for your SSH keys, you can reference your SSH keys by their labels.",
          "args": []
        },
        {
          "name": "file_storage_ids",
          "description": "(Optional, Array of integers) File storage to which this computing instance has access. File storage must be in the same data center as the Bare Metal server. If you use this argument to authorize, access to file storage, then do not use the `allowed_virtual_guest_ids` argument in the `ibm_storage_file` resource in order to prevent the same storage be added twice.",
          "args": []
        },
        {
          "name": "block_storage_ids",
          "description": "(Optional, Array of integers) File storage to which this computing instance has access. File storage must be in the same data center as the Bare Metal server. If you use this argument to authorize, access to file storage, then do not use the `allowed_virtual_guest_ids` argument in the `ibm_storage_block` resource in order to prevent the same storage be added twice.",
          "args": []
        },
        {
          "name": "post_install_script_uri",
          "description": "(Optional, String) The URI of the script to be downloaded and executed after installation is complete.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of strings) Tags associated with the VM instance. Permitted characters include: A-Z, 0-9, whitespace, `_` (underscore), `-` (hyphen), `.` (period), and `:` (colon). All other characters are removed.",
          "args": []
        },
        {
          "name": "ipv6_enabled",
          "description": "(Optional, Boolean) The primary public IPv6 address. The default value is `false`.",
          "args": []
        },
        {
          "name": "ipv6_static_enabled",
          "description": "(Optional, Boolean) The public static IPv6 address block of `/64`. The default value is `false`.",
          "args": []
        },
        {
          "name": "secondary_ip_count",
          "description": "(Optional, Integer) Specifies secondary public IPv4 addresses. Accepted values are `4` and `8`.",
          "args": []
        },
        {
          "name": "wait_time_minutes",
          "description": "(Optional, Integer) The duration, expressed in minutes, to wait for the VM instance to become available before declaring it as created. It is also the same amount of time waited for no active transactions before proceeding with an update or deletion. The default value is `90`.",
          "args": []
        },
        {
          "name": "public_bandwidth_limited",
          "description": "(Optional, Integer) Allowed public network traffic in GB per month. It can be greater than 0 when the server is a monthly based server. Defaults to the smallest available capacity for the public bandwidth are used.       **NOTE**: Conflicts with `private_network_only` and `public_bandwidth_unlimited`.",
          "args": []
        },
        {
          "name": "public_bandwidth_unlimited",
          "description": "(Optional, Boolean) Allowed unlimited public network traffic in GB per month for a monthly based server. The `network_speed` should be 100 Mbps. Default value is `false`.       **NOTE**: Conflicts with `private_network_only` and `public_bandwidth_limited`.",
          "args": []
        },
        {
          "name": "evault",
          "description": "(Optional, Integer) Allowed `Evault` in GB per month for monthly based servers.",
          "args": []
        },
        {
          "name": "datacenter_choice",
          "description": "(Optional, List of objects) A nested block to describe datacenter choice options to retry on different data centers and VLANs. Nested `datacenter_choice` blocks must have the following structure:",
          "args": [
            {
              "name": "datacenter",
              "description": "(Required, String) The datacenter in which you want to provision the instance.",
              "args": []
            },
            {
              "name": "public_vlan_id",
              "description": "(Optional, String) The public VLAN ID for the public network interface of the instance. Accepted values are in the [VLAN doc](https://cloud.ibm.com/classic/network/vlans). Click the VLAN that you want to use and note the ID number in the browser URL. You can also refer to a VLAN name by using a data source.",
              "args": []
            },
            {
              "name": "private_vlan_id",
              "description": "(Optional, String) The private VLAN ID for the private network interface of the instance. You can find accepted values in the [VLAN doc](https://cloud.ibm.com/classic/network/vlans). Click the VLAN that you want to use and note the ID number in the browser URL. You can also refer to a VLAN name by using a data source.  **NOTE**: Conflicts with `datacenter`, `private_vlan_id`, `public_vlan_id`, `placement_group_name` and `placement_group_id`.",
              "args": []
            }
          ]
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the VM instance.",
          "args": []
        },
        {
          "name": "ipv4_address",
          "description": "The public IPv4 address of the VM instance.",
          "args": []
        },
        {
          "name": "ip_address_id_private",
          "description": "The unique identifier for the private IPv4 address that is assigned to the VM instance.",
          "args": []
        },
        {
          "name": "ipv4_address_private",
          "description": "The private IPv4 address of the VM instance.",
          "args": []
        },
        {
          "name": "ip_address_id",
          "description": "The unique identifier for the public IPv4 address that is assigned to the VM instance.",
          "args": []
        },
        {
          "name": "ipv6_address",
          "description": "The public IPv6 address of the VM instance provided when `ipv6_enabled` is set to `true`.",
          "args": []
        },
        {
          "name": "ipv6_address_id",
          "description": "The unique identifier for the public IPv6 address assigned to the VM instance provided when `ipv6_enabled` is set to `true`.",
          "args": []
        },
        {
          "name": "private_subnet_id",
          "description": "The unique identifier of the subnet `ipv4_address_private` belongs to.",
          "args": []
        },
        {
          "name": "public_ipv6_subnet",
          "description": "The public IPv6 subnet provided when `ipv6_enabled` is set to `true`.",
          "args": []
        },
        {
          "name": "public_ipv6_subnet_id",
          "description": "The unique identifier of the subnet `ipv6_address` belongs to.",
          "args": []
        },
        {
          "name": "public_subnet_id",
          "description": "The unique identifier of the subnet `ipv4_address` belongs to.",
          "args": []
        },
        {
          "name": "secondary_ip_addresses",
          "description": "The public secondary IPv4 addresses of the VM instance.",
          "args": []
        },
        {
          "name": "public_interface_id",
          "description": "The ID of the primary public interface.",
          "args": []
        },
        {
          "name": "private_interface_id",
          "description": "The ID of the primary private interface.",
          "args": []
        }
      ]
    },
    "ibm_container_addons": {
      "name": "ibm_container_addons",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Kubernetes Service resources",
      "args": [
        {
          "name": "addons",
          "description": "(Required, Set) Set of add-ons that needs to be enabled.",
          "args": [
            {
              "name": "name",
              "description": "(Optional, String) The add-on name such as `istio`. Supported add-ons are `kube-terminal`, `alb-oauth-proxy`, `debug-tool`, `istio`, `knative`, `static-route`,`vpc-block-csi-driver`.",
              "args": []
            },
            {
              "name": "version",
              "description": "(Optional, String) The add-on version. Omit the version that you want to use as the default version.This is required when you want to update the add-on to specified version.",
              "args": []
            }
          ]
        },
        {
          "name": "cluster",
          "description": "(Required, String) The name or ID of the cluster.",
          "args": []
        },
        {
          "name": "resource_group_id",
          "description": "(Optional, String) The ID of the resource group. You can retrieve the value from data source ibm_resource_group. If not provided defaults to default resource group.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "addons",
          "description": "The details of an enabled add-ons.",
          "args": [
            {
              "name": "allowed_upgrade_versions",
              "description": "The versions that the add-on is upgraded to.",
              "args": []
            },
            {
              "name": "deprecated",
              "description": "Determines if the add-on version is deprecated.",
              "args": []
            },
            {
              "name": "health_state",
              "description": "The health state of an add-on, such as critical or pending.",
              "args": []
            },
            {
              "name": "health_status",
              "description": "The health status of an add-on, provides a description of the state in the form of error message.",
              "args": []
            },
            {
              "name": "min_kube_version",
              "description": "The minimum Kubernetes version of the add-on.",
              "args": []
            },
            {
              "name": "min_ocp_version",
              "description": "The minimum OpenShift version of the add-on.",
              "args": []
            },
            {
              "name": "supported_kube_range",
              "description": "The supported Kubernetes version range of the add-on.",
              "args": []
            },
            {
              "name": "target_version",
              "description": "The add-on target version.",
              "args": []
            },
            {
              "name": "vlan_spanning_required",
              "description": "The VLAN spanning required for multi-zone clusters.",
              "args": []
            }
          ]
        },
        {
          "name": "id",
          "description": "The Id of the add-ons.",
          "args": []
        }
      ]
    },
    "ibm_container_alb": {
      "name": "ibm_container_alb",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Kubernetes Service resources",
      "args": [
        {
          "name": "alb_id",
          "description": "(Required, String) The unique identifier of the ALB. To retrieve the ID, run `ibmcloud ks alb ls`.",
          "args": []
        },
        {
          "name": "disable_deployment",
          "description": "(Optional, Boolean) If set to **true**, the default Ingress ALB in your cluster is disabled. If set to **false**, the default Ingress ALB is enabled in your cluster and configured with the IBM-provided Ingress subdomain. If you do not specify this option, you must specify the `enable` parameter.",
          "args": []
        },
        {
          "name": "enable",
          "description": "(Optional, Boolean) If set to **true**, the default Ingress ALB in your cluster is enabled and configured with the IBM-provided Ingress subdomain. If set to **false**, the default Ingress ALB is disabled in your cluster. If you do not specify this option, you must specify the `disable_deployment` parameter.",
          "args": []
        },
        {
          "name": "region",
          "description": "(Optional, String) The region where the Ingress ALB is provisioned.",
          "args": []
        },
        {
          "name": "user_ip",
          "description": "(Optional, String) For a private ALB only. The private ALB is deployed with an IP address from a user-provided private subnet. If no IP address is provided, the ALB is deployed with a random IP address from a private subnet in the IBM Cloud account.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "alb_type",
          "description": "The type of the ALB. Supported values are `public` and `private`.",
          "args": []
        },
        {
          "name": "cluster",
          "description": "The name of the cluster where the ALB is provisioned.",
          "args": []
        },
        {
          "name": "id",
          "description": "The unique identifier of the ALB.",
          "args": []
        },
        {
          "name": "name",
          "description": "The name of the ALB.",
          "args": []
        }
      ]
    },
    "ibm_container_alb_cert": {
      "name": "ibm_container_alb_cert",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Kubernetes Service resources",
      "args": [
        {
          "name": "cert_crn",
          "description": "(Required, String) The CRN of the certificate that you uploaded to IBM Cloud Certificate Manager.",
          "args": []
        },
        {
          "name": "cluster_id",
          "description": "(Required, String) The ID of the cluster that hosts the Ingress ALB that you want to configure for SSL traffic.",
          "args": []
        },
        {
          "name": "region",
          "description": "(Optional, String) The IBM Cloud region where your SSL certificate is stored.",
          "args": []
        },
        {
          "name": "secret_name",
          "description": "(Required, String) The name of the ALB certificate secret.",
          "args": []
        },
        {
          "name": "namespace",
          "description": "(Optional, String) The namespace in which the secret is created. Default value is `ibm-cert-store`.",
          "args": []
        },
        {
          "name": "persistence",
          "description": "(Optional, Bool) Persist the secret data in your cluster. If the secret is later deleted from the command line or OpenShift web console, the secret is automatically re-created in your cluster.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "cluster_crn",
          "description": "The CRN of the cluster that hosts the Ingress ALB.",
          "args": []
        },
        {
          "name": "cloud_cert_instance_id",
          "description": "The IBM Cloud Certificate Manager instance ID from which the certificate was downloaded.",
          "args": []
        },
        {
          "name": "domain_name",
          "description": "The domain name of the certificate.",
          "args": []
        },
        {
          "name": "expires_on",
          "description": "The date the certificate expires.",
          "args": []
        },
        {
          "name": "id",
          "description": "The unique identifier of the certificate in the format `<cluster_name_id>/<secret_name>`.",
          "args": []
        },
        {
          "name": "issuer_name",
          "description": "The name of the issuer of the certificate.",
          "args": []
        },
        {
          "name": "status",
          "description": "The Status of the secret.",
          "args": []
        }
      ]
    },
    "ibm_container_api_key_reset": {
      "name": "ibm_container_api_key_reset",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Kubernetes Service resources",
      "args": [
        {
          "name": "region",
          "description": "(Required, String) The region in which API key has to be reset.",
          "args": []
        },
        {
          "name": "resource_group_id",
          "description": "(Optional, String) The ID of the resource group. You can retrieve the value from data source `ibm_resource_group`. If not provided defaults to default resource group.",
          "args": []
        },
        {
          "name": "reset_api_key",
          "description": "(Optional, Integer) Determines the API key need reset or not. This attribute is added to avoid the state dependencies. You need to increment the attribute to reset the API key on same `region` and `resource_group_id`. The default value is `1`.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The resource ID. ID is a combination of `<region>/<resource_group_id>`.",
          "args": []
        }
      ]
    },
    "ibm_container_bind_service": {
      "name": "ibm_container_bind_service",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Kubernetes Service resources",
      "args": [
        {
          "name": "cluster_name_id",
          "description": "(Required, String) The name or ID of the cluster to which you want to bind an IBM Cloud service. To find the cluster name or ID, run `ibmcloud ks cluster ls`.",
          "args": []
        },
        {
          "name": "key",
          "description": "(Optional, String) The name of existing service credentials that you want to use for the service. If you do not provide this option, service credentials are automatically created as part of the service binding process.",
          "args": []
        },
        {
          "name": "namespace_id",
          "description": "(Required, String) The Kubernetes namespace where you want to create the Kubernetes secret that holds the service credentials of the service that you want to bind to the cluster.",
          "args": []
        },
        {
          "name": "resource_group_id",
          "description": "(Optional, String) The ID of the resource group where your IBM Cloud service is provisioned into. To list resource groups, run `ibmcloud resource groups`.",
          "args": []
        },
        {
          "name": "role",
          "description": "(Optional, String) The IAM service access role that you want to use to create the service credentials for the IBM Cloud service instance. If you specified existing service credentials in the `key` parameter, settings for the `role` parameter are ignored.",
          "args": []
        },
        {
          "name": "service_instance_id",
          "description": "(Optional, String) The ID of the service that you want to bind to the cluster. If you specify this parameter, do not specify `service_instance_name` at the same time.",
          "args": []
        },
        {
          "name": "service_instance_name",
          "description": "(Optional, String) The name of the service that you want to bind to the cluster. If you specify this parameter, do not specify `service_instance_id` at the same time.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of strings) A list of tags that you want to associate with the IBM Cloud service instance that you bind to the cluster. </br>**NOTE**: `Tags` are managed locally and are not stored on the IBM Cloud service endpoint.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the service bind resource in your cluster in the format `<cluster_name_ID>/<service_instance_name>` or `<service_instance_id>/<namespace_id>`.",
          "args": []
        },
        {
          "name": "namespace_id",
          "description": "The namespace in your cluster where the Kubernetes secret is located that holds the credentials to access your IBM Cloud service instance.",
          "args": []
        },
        {
          "name": "secret_name",
          "description": "The name of the Kubernetes secret that holds the credentials to access your IBM Cloud service instance.",
          "args": []
        }
      ]
    },
    "ibm_container_cluster": {
      "name": "ibm_container_cluster",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Kubernetes Service resources",
      "args": [
        {
          "name": "datacenter",
          "description": "(Required, String) The datacenter where you want to provision the worker nodes. The zone that you choose must be supported in the region where you want to create the cluster. To find supported zones, run `ibmcloud ks zones`.",
          "args": []
        },
        {
          "name": "default_pool_size",
          "description": "(Optional, Integer) The number of worker nodes that you want to add to the default worker pool.",
          "args": []
        },
        {
          "name": "disk_encryption",
          "description": "(Optional, Boolean) If set to **true**, the worker node disks are set up with an AES 256-bit encryption. If set to **false**, the disk encryption for the worker node is disabled. For more information, see [Encrypted disks for worker node](/docs/containers?topic=containers-security#workernodes).",
          "args": []
        },
        {
          "name": "entitlement",
          "description": "(Optional, String) If you purchased an IBM Cloud Cloud Pak that includes an entitlement to run worker nodes that are installed with OpenShift Container Platform, enter `entitlement` to create your cluster with that entitlement so that you are not charged twice for the {{site.data.keyword.openshiftshort}} license. Note that this option can be set only when you create the cluster. After the cluster is created, the cost for the {{site.data.keyword.openshiftshort}} license occurred and you cannot disable this charge.",
          "args": []
        },
        {
          "name": "force_delete_storage",
          "description": "(Optional, Boolean) If set to `true`,force the removal of persistent storage associated with the cluster during cluster deletion. Default value is `false`. **NOTE** If `force_delete_storage` parameter is used after provisioning the cluster, then, you need to execute `terraform apply` before `terraform destroy` for `force_delete_storage` parameter to take effect.",
          "args": []
        },
        {
          "name": "hardware",
          "description": "(Optional, String) The level of hardware isolation for your worker node. Use `dedicated` to have available physical resources dedicated to you only, or `shared` to allow physical resources to be shared with other IBM customers. This option is available for virtual machine worker node flavors only.",
          "args": []
        },
        {
          "name": "gateway_enabled",
          "description": "(Optional, Boolean) Set to **true** if you want to automatically create a gateway-enabled cluster. If `gateway_enabled` is set to **true**, then `private_service_endpoint` must be set to **true** at the same time.",
          "args": []
        },
        {
          "name": "kms_config",
          "description": "(Optional, String) Used to attach a Key Protect instance to a cluster. Nested `kms_config` block have `instance_id`, `crk_id`, `private_endpoint` structure.",
          "args": [
            {
              "name": "instance_id",
              "description": "(Optional, String) The GUID of the Key Protect instance.",
              "args": []
            },
            {
              "name": "crk_id",
              "description": "(Optional, String) The ID of the customer root key (CRK).",
              "args": []
            },
            {
              "name": "private_endpoint",
              "description": "(Optional, Boolean) Set to `true` to configure the KMS private service endpoint. Default value is `false`.",
              "args": []
            }
          ]
        },
        {
          "name": "kube_version",
          "description": "(Optional, String) The Kubernetes or OpenShift version that you want to set up in your cluster. If the version is not specified, the default version in [IBM Cloud Kubernetes Service](/docs/containers?topic=containers-cs_versions) or [{{site.data.keyword.openshiftlong_notm}}](/docs/openshift?topic=openshift-openshift_versions#version_types) is used. For example, to specify Kubernetes version 1.16, enter `1.16`. For OpenShift clusters, you can specify version `3.11_openshift` or `4.3.1_openshift`.",
          "args": []
        },
        {
          "name": "labels",
          "description": "(Optional, Map) Labels on all the workers in the default worker pool.",
          "args": []
        },
        {
          "name": "machine_type",
          "description": "(Optional, String) The machine type for your worker node. The machine type determines the amount of memory, CPU, and disk space that is available to the worker node. For an overview of supported machine types, see [Planning your worker node setup](/docs/containers?topic=containers-planning_worker_nodes).",
          "args": []
        },
        {
          "name": "name",
          "description": "(Required, String) The name of the cluster. The name must start with a letter, can contain letters, numbers, and hyphen (-), and must be 35 characters or fewer. Use a name that is unique across regions. The cluster name and the region in which the cluster is deployed form the fully qualified domain name for the Ingress subdomain. To ensure that the Ingress subdomain is unique within a region, the cluster name might be truncated and appended with a random value within the Ingress domain name.",
          "args": []
        },
        {
          "name": "no_subnet",
          "description": "(Optional, Boolean) If set to **true**, no portable subnet is created during cluster creation. The portable subnet is used to provide portable IP addresses for the Ingress subdomain and Kubernetes load balancer services. If set to **false**, a portable subnet is created by default. The default is **false**.",
          "args": []
        },
        {
          "name": "patch_version",
          "description": "(Optional, String) Updates the worker nodes with the required patch version. The patch_version should be in the format:  `patch_version_fixpack_version`. For more information, about Kubernetes version information and update, see [Kubernetes version update](/docs/containers?topic=containers-cs_versions). **NOTE:** To update the patch or fix pack versions of the worker nodes, run the command `ibmcloud ks workers -c <cluster_name_or_id> --output json`. Fetch the required patch & fix pack versions from `kubeVersion.target` and set the `patch_version` parameter.",
          "args": []
        },
        {
          "name": "public_service_endpoint",
          "description": "(Optional, Boolean) If set to **true**, your cluster is set up with a public service endpoint. You can use the public service endpoint to access the Kubernetes master from the public network. To use service endpoints, your account must be enabled for [Virtual Routing and Forwarding (VRF)](/docs/account?topic=account-vrf-service-endpoint#vrf). For more information, see [Worker-to-master and user-to-master communication: Service endpoints](/docs/containers?topic=containers-plan_clusters#workeruser-master). If set to **false**, the public service endpoint is disabled for your cluster.",
          "args": []
        },
        {
          "name": "public_vlan_id",
          "description": "(Optional, String) The ID of the public VLAN that you want to use for your worker nodes. You can retrieve the VLAN ID with the `ibmcloud ks vlans --zone <zone>` command. </br></br> * **Free clusters**: If you want to provision a free cluster, you do not need to enter a public VLAN ID. Your cluster is automatically connected to a public VLAN that is owned by IBM. </br> * **Standard clusters**: If you create a standard cluster and you have an existing public VLAN ID for the zone where you plan to set up worker nodes, you must enter the VLAN ID. To retrieve the ID, run `ibmcloud ks vlans --zone <zone>`. If you do not have an existing public VLAN ID, or you want to connect your cluster to a private VLAN only, do not specify this option.",
          "args": []
        },
        {
          "name": "private_service_endpoint",
          "description": "(Optional, Boolean) If set to **true**, your cluster is set up with a private service endpoint. When the private service endpoint is enabled, communication between the Kubernetes and the worker nodes is established over the private network. If you enable the private service endpoint, you cannot disable it later. To use service endpoints, your account must be enabled for [Virtual Routing and Forwarding (VRF)](/docs/account?topic=account-vrf-service-endpoint#vrf). For more information, see [Worker-to-master and user-to-master communication: Service endpoints](/docs/containers?topic=containers-plan_clusters#workeruser-master). If set to **false**, the private service endpoint is disabled and all communication to the Kubernetes master must go through the public network.",
          "args": []
        },
        {
          "name": "private_vlan_id",
          "description": "(Optional, String) The ID of the private VLAN that you want to use for your worker nodes. You can retrieve the VLAN ID with the `ibmcloud ks vlans --zone <zone>` command. </br></br> * **Free clusters**: If you want to provision a free cluster, you do not need to enter a private VLAN ID. Your cluster is automatically connected to a private VLAN that is owned by IBM. </br> * **Standard clusters**: If you create a standard cluster and you have an existing private VLAN ID for the zone where you plan to set up worker nodes, you must enter the VLAN ID. To retrieve the ID, run `ibmcloud ks vlans --zone <zone>`. If you do not have an existing private VLAN ID, do not specify this option. A private VLAN is created automatically for you.",
          "args": []
        },
        {
          "name": "pod_subnet",
          "description": "(Optional, String) Specify a custom subnet CIDR to provide private IP addresses for pods. The subnet must be at least `/23` or more. For more information, refer to [Pod subnet](/docs/containers?topic=containers-cli-plugin-kubernetes-service-cli#pod-subnet).",
          "args": []
        },
        {
          "name": "resource_group_id",
          "description": "(Optional, String) The ID of the resource group where you want to provision your cluster. To retrieve the ID, use the  `ibm_resource_group` data source. If no value is provided, the cluster is automatically provisioned into the `default` resource group.",
          "args": []
        },
        {
          "name": "subnet_id",
          "description": "(Optional, String) The ID of an existing subnet that you want to use for your worker nodes. To find existing subnets, run `ibmcloud ks subnets`.",
          "args": []
        },
        {
          "name": "service_subnet",
          "description": "(Optional, String) Specify a custom subnet CIDR to provide private IP addresses for services. The subnet should be at least `/24` or more. For more information, refer to [Subnet service](/docs/containers?topic=containers-cli-plugin-kubernetes-service-cli#service-subnet).",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of strings) A list of tags that you want to add to your cluster. Tags can help find a cluster more quickly.",
          "args": []
        },
        {
          "name": "update_all_workers",
          "description": "(Optional, Boolean) If set to **true**, the Kubernetes version of the worker nodes is updated along with the Kubernetes version of the cluster that you specify in `kube_version`.",
          "args": []
        },
        {
          "name": "webhook",
          "description": "(Optional, Array of objects) The webhook that you want to add to the cluster. For available options, see the [`webhook create` command](/docs/containers?topic=containers-cli-plugin-kubernetes-service-cli).",
          "args": [
            {
              "name": "level",
              "description": "(Optional, String) Notification level, such as `Normal` or `Warning`.",
              "args": []
            },
            {
              "name": "type",
              "description": "(Optional, String) The Webhook type. Currently, supported value is `slack`.",
              "args": []
            },
            {
              "name": "url",
              "description": "(Optional, String) The URL for the webhook.",
              "args": []
            }
          ]
        },
        {
          "name": "workers_info",
          "description": "(Optional, Array of objects) The worker nodes that you want to update.",
          "args": [
            {
              "name": "id",
              "description": "(Optional, String) The ID of the worker node that you want to update.",
              "args": []
            },
            {
              "name": "version",
              "description": "(Optional, String) The Kubernetes version that you want to update your worker nodes to.",
              "args": []
            }
          ]
        },
        {
          "name": "worker_num",
          "description": "(Optional, Integer) The number of worker nodes in your cluster. This attribute creates a worker node that is not associated with a worker pool.",
          "args": []
        },
        {
          "name": "wait_for_worker_update",
          "description": "(Optional, Boolean) Set to `true` to wait and update the Kubernetes version of worker nodes. **NOTE** Setting wait_for_worker_update to `false` is not recommended. Setting `false` results in upgrading all the worker nodes in the cluster at the same time causing the cluster downtime.",
          "args": []
        },
        {
          "name": "wait_till",
          "description": "(Optional, String) The cluster creation happens in multi-stages. To avoid the longer wait times for resource execution.This argument in the resource will wait for the specified stage and complete the execution. The default stage value is `IngressReady`. The supported stages are  `MasterNodeReady` Resource waits till the master node is ready.  `OneWorkerNodeReady` Resource waits till one worker node is in to ready state.  `IngressReady` Resource waits till the ingress-host and ingress-secret are available.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "albs",
          "description": "A list of Ingress application load balancers (ALBs) that are attached to the cluster.",
          "args": [
            {
              "name": "id",
              "description": "The unique identifier of the Ingress ALB.",
              "args": []
            },
            {
              "name": "name",
              "description": "The name of the Ingress ALB.",
              "args": []
            },
            {
              "name": "enable",
              "description": "Indicates if the ALB is enabled (**true**) or disabled (**false**) in the cluster.",
              "args": []
            },
            {
              "name": "state",
              "description": "The state of the ALB. Supported values are `enabled` or `disabled`.",
              "args": []
            },
            {
              "name": "num_of_instances",
              "description": "The number of ALB replicas.",
              "args": []
            },
            {
              "name": "alb_ip",
              "description": "The virtual IP address that you want to use for your application load balancer (ALB). Currently supported only for private application load balancer (ALB).",
              "args": []
            },
            {
              "name": "resize",
              "description": "Indicate whether resizing should be done.",
              "args": []
            },
            {
              "name": "disable_deployment",
              "description": "Indicate whether to disable deployment only on disable application load balancer (ALB).",
              "args": []
            }
          ]
        },
        {
          "name": "crn",
          "description": "The CRN of the cluster.",
          "args": []
        },
        {
          "name": "id",
          "description": "The unique identifier of the cluster.",
          "args": []
        },
        {
          "name": "ingress_hostname",
          "description": "The Ingress host name.",
          "args": []
        },
        {
          "name": "ingress_secret",
          "description": "The name of the Ingress secret.",
          "args": []
        },
        {
          "name": "name",
          "description": "The name of the cluster.",
          "args": []
        },
        {
          "name": "public_service_endpoint_url",
          "description": "The URL of the public service endpoint for your cluster.",
          "args": []
        },
        {
          "name": "private_service_endpoint_url",
          "description": "The URL of the private service endpoint for your cluster.",
          "args": []
        },
        {
          "name": "server_url",
          "description": "The server URL.",
          "args": []
        },
        {
          "name": "subnet_id",
          "description": "The subnets attached to this cluster.",
          "args": []
        },
        {
          "name": "workers",
          "description": "A list of worker nodes that belong to the cluster.",
          "args": [
            {
              "name": "pool_name",
              "description": "The name of the worker pool the worker node belongs to.",
              "args": []
            }
          ]
        },
        {
          "name": "worker_pools",
          "description": "A list of worker pools that exist in the cluster.",
          "args": [
            {
              "name": "machine_type",
              "description": "The machine type that is used for the worker nodes in the worker pool.",
              "args": []
            },
            {
              "name": "name",
              "description": "The name of the worker pool.",
              "args": []
            },
            {
              "name": "size_per_zone",
              "description": "The number of worker nodes per zone.",
              "args": []
            },
            {
              "name": "hardware",
              "description": "The level of hardware isolation that is used for the worker node of the worker pool.",
              "args": []
            },
            {
              "name": "id",
              "description": "The ID of the worker pool.",
              "args": []
            },
            {
              "name": "state",
              "description": "The state of the worker pool.",
              "args": []
            },
            {
              "name": "labels",
              "description": "A list of labels that are added to the worker pool.",
              "args": []
            },
            {
              "name": "zones",
              "description": "A list of zones that are attached to the worker pool.",
              "args": [
                {
                  "name": "zone",
                  "description": "The name of the zone.",
                  "args": []
                },
                {
                  "name": "private_vlan",
                  "description": "The ID of the private VLAN that is used in that zone.",
                  "args": []
                },
                {
                  "name": "public_vlan",
                  "description": "The ID of the private VLAN that is used in that zone.",
                  "args": []
                },
                {
                  "name": "worker_count",
                  "description": "The number of worker nodes that are attached to the zone.",
                  "args": []
                }
              ]
            }
          ]
        },
        {
          "name": "workers_info",
          "description": "A list of worker nodes that belong to the cluster.",
          "args": [
            {
              "name": "pool_name",
              "description": "The name of the worker pool the worker node belongs to.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_container_cluster_feature": {
      "name": "ibm_container_cluster_feature",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Kubernetes Service resources",
      "args": [
        {
          "name": "cluster",
          "description": "(Required, String) The name or ID of the cluster for which you want to enable or disabled a feature. To find the name or ID, use the `ibmcloud ks cluster ls` command.",
          "args": []
        },
        {
          "name": "public_service_endpoint",
          "description": "(Optional, Boolean) Enable(**true**) or disable (**false**) the public service endpoint for your cluster. You can use the public service endpoint to access the Kubernetes master from the public network. To use service endpoints, your account must be enabled for [Virtual Routing and Forwarding (VRF)](/docs/account?topic=account-vrf-service-endpoint#vrf). For more information, see [Worker-to-master and user-to-master communication: Service endpoints](/docs/containers?topic=containers-plan_clusters#workeruser-master).",
          "args": []
        },
        {
          "name": "private_service_endpoint",
          "description": "(Optional, Boolean) Enable (**true**) or disable (**false**) the private service endpoint for your cluster. When the private service endpoint is enabled, communication between the Kubernetes and the worker nodes is established over the private network. If you enable the private service endpoint, you cannot disable it later. To use service endpoints, your account must be enabled for [Virtual Routing and Forwarding (VRF)](/docs/account?topic=account-vrf-service-endpoint#vrf). For more information, see [Worker-to-master and user-to-master communication: Service endpoints](/docs/containers?topic=containers-plan_clusters#workeruser-master).",
          "args": []
        },
        {
          "name": "refresh_api_servers",
          "description": "(Optional, Boolean) If set to **true**, the Kubernetes master of the cluster is refreshed to apply the changes of your feature. If set to **false**, no refresh of the Kubernetes master is performed.",
          "args": []
        },
        {
          "name": "reload_workers",
          "description": "(Optional, Boolean) If set to **true**, your worker nodes are reloaded after the feature is enabled. If set to **false**, no reload of the worker nodes is performed.",
          "args": []
        },
        {
          "name": "resource_group_id",
          "description": "(Optional, String) The ID of the resource group that your cluster belongs to. You can retrieve the resource group by using the `ibm_resource_group` data source.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The ID of the cluster feature.",
          "args": []
        },
        {
          "name": "public_service_endpoint_url",
          "description": "The URL to the public service endpoint of your cluster.",
          "args": []
        },
        {
          "name": "private_service_endpoint_url",
          "description": "The URL to the private service endpoint of your cluster.",
          "args": []
        }
      ]
    },
    "ibm_container_vpc_alb": {
      "name": "ibm_container_vpc_alb",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Kubernetes Service resources",
      "args": [
        {
          "name": "alb_id",
          "description": "(Required, String) The unique identifier of the application load balancer.",
          "args": []
        },
        {
          "name": "enable",
          "description": "(Optional, Boolean) If set to **true**, the ALB in your cluster is enabled. If you set this option, do not specify `disable_deployment` at the same time.",
          "args": []
        },
        {
          "name": "disable_deployment",
          "description": "(Optional, Boolean) Disable the ALB deployment only. If provided, the ALB deployment is deleted but the IBM-provided Ingress subdomain remains. If you set this option, do not specify `enable` at the same time.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "alb_type",
          "description": "The ALB type.",
          "args": []
        },
        {
          "name": "cluster",
          "description": "The name of the cluster.",
          "args": []
        },
        {
          "name": "name",
          "description": "The name of the ALB.",
          "args": []
        },
        {
          "name": "id",
          "description": "The ALB ID.",
          "args": []
        },
        {
          "name": "load_balancer_hostname",
          "description": "The host name of the ALB.",
          "args": []
        },
        {
          "name": "resize",
          "description": "Resize of the ALB.",
          "args": []
        },
        {
          "name": "state",
          "description": "ALB state.",
          "args": []
        },
        {
          "name": "status",
          "description": "The status of ALB.",
          "args": []
        },
        {
          "name": "zone",
          "description": "The name of the zone.",
          "args": []
        }
      ]
    },
    "ibm_container_vpc_cluster": {
      "name": "ibm_container_vpc_cluster",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Kubernetes Service resources",
      "args": [
        {
          "name": "cos_instance_crn",
          "description": "(Optional, String) Required for OpenShift clusters only. The standard IBM Cloud Object Storage instance CRN to back up the internal registry in your OpenShift on VPC Gen 2 cluster.",
          "args": []
        },
        {
          "name": "disable_public_service_endpoint",
          "description": "(Optional, Boolean) Disable the public service endpoint to prevent public access to the Kubernetes master. Default value is 'true’.",
          "args": []
        },
        {
          "name": "entitlement",
          "description": "(Optional, String) The {{site.data.keyword.openshiftshort}} cluster entitlement avoids the OCP license charges incurred. Use Cloud Pak with OCP Licence entitlement to create the {{site.data.keyword.openshiftshort}} cluster. **NOTE** <ul><li> It is set only the first time creation of the cluster, further modifications are not impacted. </li></ul> <ul><li> Set this argument to `cloud_pak` only if you use the cluster with a Cloud Pak that has an {{site.data.keyword.openshiftshort}} entitlement.</li></ul>",
          "args": []
        },
        {
          "name": "force_delete_storage",
          "description": "(Optional, Boolean) If set to `true`,force the removal of persistent storage associated with the cluster during cluster deletion. Default value is `false`. **NOTE** If `force_delete_storage` parameter is used after provisioning the cluster, then, you need to execute `terraform apply` before `terraform destroy` for `force_delete_storage` parameter to take effect.",
          "args": []
        },
        {
          "name": "flavor",
          "description": "(Required, String) The flavor of the VPC worker node that you want to use.",
          "args": []
        },
        {
          "name": "name",
          "description": "(Required, String) The name of the cluster.",
          "args": []
        },
        {
          "name": "kms_config",
          "description": "(Optional, String) Use to attach a Key Protect instance to a cluster. Nested `kms_config` block has an `instance_id`, `crk_id`, `private_endpoint`.",
          "args": [
            {
              "name": "instance_id",
              "description": "(Optional, String) The GUID of the Key Protect instance.",
              "args": []
            },
            {
              "name": "crk_id",
              "description": "(Optional, String) The ID of the customer root key (CRK).",
              "args": []
            },
            {
              "name": "private_endpoint",
              "description": "(Optional, Boolean) Set `true` to configure the KMS private service endpoint. Default value is `false`.",
              "args": []
            }
          ]
        },
        {
          "name": "kube_version",
          "description": "(Optional, String) Specify the Kubernetes version, including the major.minor version. If you do not include this flag, the default version is used. To see available versions, run `ibmcloud ks versions`.",
          "args": []
        },
        {
          "name": "patch_version",
          "description": "(Optional, String) Updates the worker nodes with the required patch version. The patch_version should be in the format:  `patch_version_fixpack_version`. For more information, about Kubernetes version information and update, see [Kubernetes version update](/docs/containers?topic=containers-cs_versions). **NOTE:** To update the patch or fix pack versions of the worker nodes, run the command `ibmcloud ks workers -c <cluster_name_or_id> --output json`. Fetch the required patch & fixpack versions from `kubeVersion.target` and set the `patch_version` parameter.",
          "args": []
        },
        {
          "name": "pod_subnet",
          "description": "(Optional, String) Specify a custom subnet CIDR to provide private IP addresses for pods. The subnet must have a CIDR of at least `/23` or larger. For more information, see the [documentation](/docs/containers?topic=containers-cli-plugin-kubernetes-service-cli#cs_subnets). Default value is `172.30.0.0/16`.",
          "args": []
        },
        {
          "name": "service_subnet",
          "description": "(Optional, String) Specify a custom subnet CIDR to provide private IP addresses for services. The subnet must be at least ’/24’ or larger. For more information, see the [documentation](/docs/containers?topic=containers-cli-plugin-kubernetes-service-cli#cs_messages). Default value is `172.21.0.0/16`.",
          "args": []
        },
        {
          "name": "wait_for_worker_update",
          "description": "(Optional, Boolean) Set to `true` to wait and update the Kubernetes  version of worker nodes. **NOTE** Setting wait_for_worker_update to `false` is not recommended. Setting `false` results in upgrading all the worker nodes in the cluster at the same time causing the cluster downtime.",
          "args": []
        },
        {
          "name": "wait_till",
          "description": "(Optional, String) The creation of a cluster can take a few minutes (for virtual servers) or even hours (for Bare Metal servers) to complete. To avoid long wait times when you run your Terraform code, you can specify the stage when you want Terraform to mark the cluster resource creation as completed. Depending on what stage you choose, the cluster creation might not be fully completed and continues to run in the background. However, your Terraform code can continue to run without waiting for the cluster to be fully created. Supported stages are: <ul><li><strong>`MasterNodeReady`</strong>: Terraform marks the creation of your cluster complete when the cluster master is in a <code>ready</code> state.</li><li><strong>`OneWorkerNodeReady`</strong>: Terraform marks the creation of your cluster complete when the master and at least one worker node are in a <code>ready</code> state.</li><li><strong>`IngressReady`</strong>: Terraform marks the creation of your cluster complete when the cluster master and all worker nodes are in a <code>ready</code> state, and the Ingress subdomain is fully set up.</li></ul> If you do not specify this option, <code>`IngressReady`</code> is used by default. You can set this option only when the cluster is created. If this option is set during a cluster update or deletion, the parameter is ignored by the Terraform provider.",
          "args": []
        },
        {
          "name": "worker_count",
          "description": "(Optional, Integer) The number of worker nodes per zone in the default worker pool. Default value `1`.",
          "args": []
        },
        {
          "name": "worker_labels",
          "description": "(Optional, Map) Labels on all the workers in the default worker pool.",
          "args": []
        },
        {
          "name": "resource_group_id",
          "description": "(Optional, String) The ID of the resource group. You can retrieve the value by running `ibmcloud resource groups` or by using the `ibm_resource_group` data source. If no value is provided, the `default` resource group is used.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of strings) A list of tags that you want to associate with your VPC cluster. **Note**: For users on account to add tags to a resource, they must be assigned the [appropriate permissions]/docs/account?topic=account-access).",
          "args": []
        },
        {
          "name": "update_all_workers",
          "description": "(Optional, Boolean) Set to true, if you want to update workers Kubernetes version with the cluster kube_version.",
          "args": []
        },
        {
          "name": "vpc_id",
          "description": "(Required, String) The ID of the VPC that you want to use for your cluster. To list available VPCs, run `ibmcloud is vpcs`.",
          "args": []
        },
        {
          "name": "zones",
          "description": "(Required, List) A nested block describes the zones of this VPC cluster.",
          "args": [
            {
              "name": "subnet_id",
              "description": "(Required, String) The VPC subnet to assign the cluster.",
              "args": []
            },
            {
              "name": "name",
              "description": "(Required, String) The name of the zone",
              "args": []
            }
          ]
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The ID of the VPC cluster.",
          "args": []
        },
        {
          "name": "crn",
          "description": "The CRN of the VPC cluster.",
          "args": []
        },
        {
          "name": "ingress_hostname",
          "description": "The hostname that was assigned to your Ingress subdomain.",
          "args": []
        },
        {
          "name": "ingress_secret",
          "description": "The name of the Ingress secret that was created for you and that the Ingress subdomain uses.",
          "args": []
        },
        {
          "name": "master_status",
          "description": "The status of the Kubernetes master.",
          "args": []
        },
        {
          "name": "master_url",
          "description": "The URL of the Kubernetes master.",
          "args": []
        },
        {
          "name": "private_service_endpoint_url",
          "description": "The private service endpoint URL.",
          "args": []
        },
        {
          "name": "public_service_endpoint_url",
          "description": "The public service endpoint URL.",
          "args": []
        },
        {
          "name": "state",
          "description": "The state of the VPC cluster.",
          "args": []
        },
        {
          "name": "albs",
          "description": "A list of Application Load Balancers (ALBs) that are attached to the cluster.",
          "args": [
            {
              "name": "id",
              "description": "The ID of the ALB.",
              "args": []
            },
            {
              "name": "name",
              "description": "The name of the ALB.",
              "args": []
            },
            {
              "name": "alb_type",
              "description": "The ALB type. Valid values are `public` or `private`.",
              "args": []
            },
            {
              "name": "enable",
              "description": "Enable (true) or disable (false) the ALB.",
              "args": []
            },
            {
              "name": "state",
              "description": "The status of the ALB. Valid values are `enabled` or `disabled`.",
              "args": []
            },
            {
              "name": "resize",
              "description": "Indicates whether resizing should be done.",
              "args": []
            },
            {
              "name": "disable_deployment",
              "description": "Indicate whether to disable the deployment of the ALB.",
              "args": []
            },
            {
              "name": "load_balancer_hostname",
              "description": "The host name of the ALB.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_container_vpc_worker_pool": {
      "name": "ibm_container_vpc_worker_pool",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Kubernetes Service resources",
      "args": [
        {
          "name": "worker_pool_name",
          "description": "(Required, String) The name of the worker pool.",
          "args": []
        },
        {
          "name": "cluster",
          "description": "(Required, String) The name or ID of the cluster.",
          "args": []
        },
        {
          "name": "vpc_id",
          "description": "(Required, String) The ID of the VPC.",
          "args": []
        },
        {
          "name": "worker_count",
          "description": "(Required, Integer) The number of worker nodes per zone in the worker pool.",
          "args": []
        },
        {
          "name": "flavor",
          "description": "(Required, String) The flavor of the worker node.",
          "args": []
        },
        {
          "name": "zones",
          "description": "(Required, List) A nested block describes the zones of this worker pool.",
          "args": [
            {
              "name": "subnet_id",
              "description": "(Required, String) The subnet that you want to use for your worker pool.",
              "args": []
            },
            {
              "name": "name",
              "description": "(Required, String) The name of the zone.",
              "args": []
            }
          ]
        },
        {
          "name": "labels",
          "description": "(Optional, Map) A list of labels that you want to add to all the worker nodes in the worker pool.",
          "args": []
        },
        {
          "name": "resource_group_id",
          "description": "(Optional, String) The ID of the resource group. To retrieve the ID, run `ibmcloud resource groups` or use the `ibm_resource_group` data source. If no value is provided, the `default` resource group is used.",
          "args": []
        },
        {
          "name": "entitlement",
          "description": "(Optional, String) The {{site.data.keyword.openshiftshort}} cluster entitlement avoids incurred OCP license charges and use cloud pak with OCP license entitlement to add the {{site.data.keyword.openshiftshort}} cluster worker pool. **Note** <ul><li> It is set as one time creation of the worker pool. There is no impacts on any modification.</li><li> Set the argument to `entitlement` only when you use cluster with a cloud pak that has an {{site.data.keyword.openshiftshort}} entitlement </li></ul>",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the worker pool. The ID is composed of `<cluster_name_id>/<worker_pool_id>`.",
          "args": []
        }
      ]
    },
    "ibm_container_worker_pool": {
      "name": "ibm_container_worker_pool",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Kubernetes Service resources",
      "args": [
        {
          "name": "cluster",
          "description": "(Required, String) The name or ID of the cluster where you want to enable or disable the feature.",
          "args": []
        },
        {
          "name": "disk_encryption",
          "description": "(Optional, Boolean) If set to **true**, the worker node disks are set up with an AES 256-bit encryption. If set to **false**, the disk encryption for the worker node is disabled. For more information, see [Encrypted disks](/docs/containers?topic=containers-security).",
          "args": []
        },
        {
          "name": "entitlement",
          "description": "(Optional, String) If you purchased an IBM Cloud Cloud Pak that includes an entitlement to run worker nodes that are installed with OpenShift Container Platform, enter `entitlement` to create your worker pool with that entitlement so that you are not charged twice for the {{site.data.keyword.openshiftshort}} license. ** Note ** that this option can be set only when you create the worker pool. After the worker pool is created, the cost for the {{site.data.keyword.openshiftshort}} license automates when you add worker nodes to your worker pool.",
          "args": []
        },
        {
          "name": "hardware",
          "description": "(Optional, String) The level of hardware isolation for your worker node. Use `dedicated` to have available physical resources dedicated to you only, or `shared` to allow physical resources to be shared with other IBM customers. This option is available for virtual machine worker node flavors only.",
          "args": []
        },
        {
          "name": "labels",
          "description": "(Optional, Map) A list of labels that you want to add to your worker pool. The labels can help you find the worker pool more easily later.",
          "args": []
        },
        {
          "name": "machine_type",
          "description": "(Required, String) The machine type for your worker node. The machine type determines the amount of memory, CPU, and disk space that is available to the worker node. For an overview of supported machine types, see [Planning your worker node setup](/docs/containers?topic=containers-planning_worker_nodes).",
          "args": []
        },
        {
          "name": "name",
          "description": "(Required, String) The name of the worker pool.",
          "args": []
        },
        {
          "name": "resource_group_id",
          "description": "(Optional, String) The ID of the resource group where your cluster is provisioned into. To list resource groups, run `ibmcloud resource groups` or use the `ibm_resource_group` data source.",
          "args": []
        },
        {
          "name": "size_per_zone",
          "description": "(Required, Integer) The number of worker nodes per zone that you want to add to the worker pool.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the worker pool in the format `<cluster_name_id>/<worker_pool_id>`.",
          "args": []
        },
        {
          "name": "state",
          "description": "The state of the worker pool.",
          "args": []
        },
        {
          "name": "zones",
          "description": "A list of zones that are attached to the worker pool.",
          "args": [
            {
              "name": "zone",
              "description": "The name of the zone.",
              "args": []
            },
            {
              "name": "private_vlan",
              "description": "The ID of the private VLAN that is used in the zone.",
              "args": []
            },
            {
              "name": "public_vlan",
              "description": "The ID of the public VLAN that is used in the zone.",
              "args": []
            },
            {
              "name": "worker_count",
              "description": "The number of worker nodes that are attached to the zone.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_container_worker_pool_zone_attachment": {
      "name": "ibm_container_worker_pool_zone_attachment",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Kubernetes Service resources",
      "args": [
        {
          "name": "cluster",
          "description": "(Required, String) The name or ID of the cluster that the worker pool belongs to.",
          "args": []
        },
        {
          "name": "private_vlan_id",
          "description": "(Optional, String) The ID of the private VLAN that you want to use for the zone. To find available zones, run `ibmcloud ks vlans <zone>`. If you do not have a private VLAN for that zone, do not specify this option. A private VLAN is automatically created for you.",
          "args": []
        },
        {
          "name": "public_vlan_id",
          "description": "(Optional, String) The ID of the public VLAN that you want to use for the zone. To find available zones, run `ibmcloud ks vlans <zone>`.  If you do not have a public VLAN for that zone, do not specify this option. A public VLAN is automatically created for you.",
          "args": []
        },
        {
          "name": "resource_group_id",
          "description": "(Optional, String) The ID of the resource group where your cluster is provisioned into. To list resource groups, run `ibmcloud resource groups` or use the `ibm_resource_group` data source.",
          "args": []
        },
        {
          "name": "wait_till_albs",
          "description": "(Optional, Boolean) When you add a zone to a worker pool, worker nodes are provisioned in that zone with the configuration that you defined in your worker pool. This process and enabling the ALBs on those worker nodes can take a few minutes to complete. To avoid long wait times when you run your Terraform code, you can specify the stage when you want Terraform to mark the zone attachment complete. Set to **true** to wait until all worker nodes are successfully provisioned in the zone that you added to your worker pool and all ALBs are available and healthy. If you want the worker node creation and ALB enablement to continue in the background, set this option to **false**.",
          "args": []
        },
        {
          "name": "worker_pool",
          "description": "(Required, String) The name or ID of the worker pool to which you want to add a zone.",
          "args": []
        },
        {
          "name": "zone",
          "description": "(Required, String) The name of the zone that you want to attach to the worker pool. To list available zones, run `ibmcloud ks zones`.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the worker pool zone attachment in the format `<cluster_name_id>/< worker_pool_name_id>/<zone>`",
          "args": []
        },
        {
          "name": "worker_count",
          "description": "The number of worker nodes that are attached to this zone.",
          "args": []
        }
      ]
    },
    "ibm_cos_bucket": {
      "name": "ibm_cos_bucket",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Object Storage resources",
      "args": [
        {
          "name": "activity_tracking",
          "description": "(Optional, Object to enable auditing with {{site.data.keyword.cloudaccesstrailfull_notm}}) Configure your {{site.data.keyword.cloudaccesstrailfull_notm}} service instance and the type of events that you want to send to your service to audit activity against your bucket. For a list of supported actions, see [Bucket actions](/docs/cloud-object-storage?topic=cloud-object-storage-at-events#at-actions-mngt-2).",
          "args": [
            {
              "name": "read_data_events",
              "description": "(Required, Boolean) If set to **true**, all read events against a bucket are sent to your {{site.data.keyword.cloudaccesstrailfull_notm}} service instance.",
              "args": []
            },
            {
              "name": "write_data_events",
              "description": "(Required, Boolean) If set to **true**, all write events against a bucket are sent to your {{site.data.keyword.cloudaccesstrailfull_notm}} service instance.",
              "args": []
            },
            {
              "name": "activity_tracker_crn",
              "description": "(Required, String) The CRN of your {{site.data.keyword.cloudaccesstrailfull_notm}} service instance that you want to send your events to. This value is required only when you configure your instance for the first time.",
              "args": []
            }
          ]
        },
        {
          "name": "allowed_ip",
          "description": "(Optional, Array of strings) A list of IPv4 or IPv6 addresses in CIDR notation that you want to allow access to your IBM Cloud Object Storage bucket.",
          "args": []
        },
        {
          "name": "bucket_name",
          "description": "(Required, String) The name of the bucket.",
          "args": []
        },
        {
          "name": "cross_region_location",
          "description": "(Optional, String) Specify the cross-regional bucket location. Supported values are `us`, `eu`, and `ap`. If you use this parameter, do not set `single_site_location` or `region_location` at the same time.",
          "args": []
        },
        {
          "name": "endpoint_type",
          "description": "(Optional, String) The type of the endpoint either public or private to be used for buckets. Default value is `public`.",
          "args": []
        },
        {
          "name": "force_delete",
          "description": "(Optional, Bool) As the default value set to `true`, it will delete all the objects in the COS Bucket and then delete the bucket. **Note:** `force_delete` will timeout on buckets with a large amount of objects. 24 hours before you delete the bucket you can set an expire rule to remove all the files over a day old.",
          "args": []
        },
        {
          "name": "key_protect",
          "description": "(Optional, String) The CRN of the IBM Key Protect root key that you want to use to encrypt data that is sent and stored in IBM Cloud Object Storage. Before you can enable IBM Key Protect encryption, you must provision an instance of IBM Key Protect and authorize the service to access IBM Cloud Object Storage. For more information, see [Server-Side Encryption with IBM Key Protect or Hyper Protect Crypto Services (SSE-KP)](/docs/cloud-object-storage?topic=cloud-object-storage-encryption).",
          "args": []
        },
        {
          "name": "metrics_monitoring",
          "description": "(Optional, Object to enable metrics tracking with {{site.data.keyword.mon_full_notm}}) Set up your {{site.data.keyword.mon_full_notm}} service instance to receive metrics for your IBM Cloud Object Storage bucket.",
          "args": [
            {
              "name": "usage_metrics_enabled",
              "description": "(Optional, Boolean) If set to **true**, all metrics are sent to your {{site.data.keyword.mon_full_notm}} service instance.",
              "args": []
            },
            {
              "name": "metrics_monitoring_crn",
              "description": "(Required, String) The CRN of the {{site.data.keyword.mon_full_notm}} service instance that you want to send metrics to. This value is required only when you configure your instance for the first time.",
              "args": []
            }
          ]
        },
        {
          "name": "resource_instance_id",
          "description": "(Required, String) The ID of the IBM Cloud Object Storage service instance for which you want to create a bucket.",
          "args": []
        },
        {
          "name": "region_location",
          "description": "(Optional, String) The location of a regional bucket. Supported values are `au-syd`, `eu-de`, `eu-gb`, `jp-tok`, `us-east`, `us-south`. If you set this parameter, do not set `single_site_location` or `cross_region_location` at the same time.",
          "args": []
        },
        {
          "name": "single_site_location",
          "description": "(Optional, String) The location for a single site bucket. Supported values are: `ams03`, `che01`, `hkg02`, `mel01`, `mex01`, `mil01`, `mon01`, `osl01`, `par01`, `sjc04`, `sao01`, `seo01`, `sng01`, and `tor01`. If you set this parameter, do not set `region_location` or `cross_region_location` at the same time.",
          "args": []
        },
        {
          "name": "storage_class",
          "description": "(Required, String) The storage class that you want to use for the bucket. Supported values are `standard`, `vault`, `cold`, `flex`, and `smart`. For more information, about storage classes, see [Use storage classes](/docs/cloud-object-storage?topic=cloud-object-storage-classes).",
          "args": []
        },
        {
          "name": "archive_rule",
          "description": "(Required, List) Nested archive_rule block has following structure.",
          "args": [
            {
              "name": "rule_id",
              "description": "(Optional, String (Computed)) The unique ID for the rule. Archive rules allow you to set a specific time frame after the objects transition to the archive.",
              "args": []
            },
            {
              "name": "enable",
              "description": "(Required, Bool) Specifies archive rule status either `enable` or `disable` for a bucket.",
              "args": []
            },
            {
              "name": "days",
              "description": "(Required, String) Specifies the number of days when the specific rule action takes effect.",
              "args": []
            },
            {
              "name": "type",
              "description": "(Required, String) Specifies the storage class or archive type to which you want the object to transition. Allowed values are `Glacier` or `Accelerated`. **Note** Archive is available in certain regions only. For more information, see [Integrated Services](/docs/cloud-object-storage/basics?topic=cloud-object-storage-service-availability).",
              "args": []
            }
          ]
        },
        {
          "name": "expire_rule",
          "description": "(Required, List) Nested expire_rule block has following structure.",
          "args": [
            {
              "name": "rule_id",
              "description": "(Optional, String (Computed)) Unique ID for the rule. Expire rules allow you to set a specific time frame after which objects are deleted.",
              "args": []
            },
            {
              "name": "enable",
              "description": "(Required, Bool) Specifies expire rule status either `enable` or `disable` for a bucket.",
              "args": []
            },
            {
              "name": "days",
              "description": "(Required, String) Specifies the number of days when the specific rule action takes effect.",
              "args": []
            },
            {
              "name": "prefix ",
              "description": "(Optional, String) Specifies a prefix filter to apply to only a subset of objects with names that match the prefix.",
              "args": []
            }
          ]
        }
      ],
      "attrs": [
        {
          "name": "crn",
          "description": "The CRN of the bucket.",
          "args": []
        },
        {
          "name": "cross_region_location",
          "description": "The location if you created a cross-regional bucket.",
          "args": []
        },
        {
          "name": "id",
          "description": "The ID of the bucket.",
          "args": []
        },
        {
          "name": "key_protect",
          "description": "The CRN of the IBM Key Protect instance that you use to encrypt your data in IBM Cloud Object Storage.",
          "args": []
        },
        {
          "name": "region_location",
          "description": "The location if you created a regional bucket.",
          "args": []
        },
        {
          "name": "resource_instance_id",
          "description": "The ID of {site.data.keyword.cos_full_notm}} instance.",
          "args": []
        },
        {
          "name": "single_site_location",
          "description": "The location if you created a single site bucket.",
          "args": []
        },
        {
          "name": "storage_class",
          "description": "The storage class of the bucket.",
          "args": []
        }
      ]
    },
    "ibm_cr_namespace": {
      "name": "ibm_cr_namespace",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Kubernetes Service resources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the namespaces to create.",
          "args": []
        },
        {
          "name": "resource_group_id",
          "description": "(Optional, String) The ID of the resource group to which the namespace is assigned. If not provided, default resource group ID will be assigned.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The name of the namespace.",
          "args": []
        },
        {
          "name": "crn",
          "description": "The `CRN` of the namespace.",
          "args": []
        },
        {
          "name": "created_on",
          "description": "The created time of the namespace.",
          "args": []
        },
        {
          "name": "updated_on",
          "description": "The updated time of the namespace.",
          "args": []
        }
      ]
    },
    "ibm_database": {
      "name": "ibm_database",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Cloud Databases resources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) A descriptive name that is used to identify the database instance. The name must not include spaces.",
          "args": []
        },
        {
          "name": "plan",
          "description": "(Required, String) The name of the service plan that you choose for your instance. Supported values are `standard`.",
          "args": []
        },
        {
          "name": "location",
          "description": "(Required, String) The location where you want to deploy your instance. The location must match the `region` parameter that you specify in the `provider` block of your Terraform configuration file. The default value is `us-south`. Currently, supported regions are `us-south`, `us-east`, `eu-gb`, `eu-de`, `au-syd`, `jp-tok`, `oslo01`.",
          "args": []
        },
        {
          "name": "resource_group_id",
          "description": "(Optional, String) The ID of the resource group where you want to create the instance. To retrieve this value, run `ibmcloud resource groups` or use the `ibm_resource_group` data source. If no value is provided, the `default` resource group is used.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of strings) A list of tags that you want to add to your instance.",
          "args": []
        },
        {
          "name": "service",
          "description": "(Required, String) The type of Cloud Databases that you want to create. Only the following services are currently accepted: `databases-for-etcd`, `databases-for-postgresql`, `databases-for-redis`, `databases-for-elasticsearch`, `messages-for-rabbitmq`, and `databases-for-mongodb`.",
          "args": []
        },
        {
          "name": "version",
          "description": "(Optional, String) The version of the database to be provisioned. If omitted, the database is created with the most recent major and minor version.",
          "args": []
        },
        {
          "name": "adminpassword",
          "description": "(Optional, String) The password for the database administrator. If not specified, an empty string is provided for the password and the user ID cannot be used. In this case, more users must be specified in a `user` block.",
          "args": []
        },
        {
          "name": "members_memory_allocation_mb",
          "description": "(Optional, Integer) The amount of memory in megabytes for the database, split across all members. If not specified, the default setting of the database service is used, which can vary by database type.",
          "args": []
        },
        {
          "name": "members_disk_allocation_mb",
          "description": "(Optional, Integer) The amount of disk space for the database, split across all members. If not specified, the default setting of the database service is used, which can vary by database type.",
          "args": []
        },
        {
          "name": "members_cpu_allocation_count",
          "description": "(Optional, Integer) Enables and allocates the number of specified dedicated cores to your deployment.",
          "args": []
        },
        {
          "name": "backup_id",
          "description": "(Optional, String) The CRN of a backup resource to restore from. The backup is created by a database deployment with the same service ID. The backup is loaded after provisioning and the new deployment starts up that uses that data. A backup CRN is in the format `crn:v1:<…>:backup:`. If omitted, the database is provisioned empty.",
          "args": []
        },
        {
          "name": "remote_leader_id",
          "description": "(Optional, String) A CRN of the leader database to make the replica(read-only) deployment. The leader database is created by a database deployment with the same service ID. A read-only replica is set up to replicate all of your data from the leader deployment to the replica deployment by using asynchronous replication. For more information, see [Configuring Read-only Replicas](/docs/databases-for-postgresql?topic=databases-for-postgresql-read-only-replicas).",
          "args": []
        },
        {
          "name": "key_protect_key",
          "description": "(Optional, String) The CRN of a Key Protect root key that you want to use for disk encryption. A key protect CRN is in the format `crn:v1:<…>:key:`. You can specify the root key during the database creation only. After the database is created, you cannot update the root key. For more information, refer [Disk encryption](/docs/cloud-databases?topic=cloud-databases-key-protect#using-the-key-protect-key) documentation.",
          "args": []
        },
        {
          "name": "backup_encryption_key_crn",
          "description": "(Optional, String) The CRN of a key protect key, that you want to use for encrypting disk that holds deployment backups. A key protect CRN is in the format `crn:v1:<...>:key:`. Backup_encryption_key_crn can be added only at the time of creation and no update support  are available.",
          "args": []
        },
        {
          "name": "key_protect_instance",
          "description": "(Optional, String) The CRN of a key protect instance that you want to use for disk encryption. A key protect CRN is in the format `crn:v1:<…>::`.",
          "args": []
        },
        {
          "name": "point_in_time_recovery_deployment_id",
          "description": "(Optional, String) The ID of the source deployment that you want to recover back to.",
          "args": []
        },
        {
          "name": "point_in_time_recovery_time",
          "description": "(Optional, String) The timestamp in UTC format that you want to restore to. To retrieve the timestamp, run the `ibmcloud cdb postgresql earliest-pitr-timestamp <deployment name or CRN>` command. For more information, see [Point-in-time Recovery](/docs/databases-for-postgresql?topic=databases-for-postgresql-pitr).",
          "args": []
        },
        {
          "name": "service_endpoints",
          "description": "(Optional, String) Specify whether you want to enable the public, private, or both service endpoints. Supported values are `public`, `private`, or `public-and-private`. The default is `public`.",
          "args": []
        },
        {
          "name": "users",
          "description": "(Optional, List of objects) A list of users that you want to create on the database. Multiple blocks are allowed.",
          "args": [
            {
              "name": "name",
              "description": "(Optional, String) The user ID to add to the database instance. The user ID must be in the range 5 - 32 characters.",
              "args": []
            },
            {
              "name": "password",
              "description": "(Optional, String) The password for the user ID. The password must be in the range 10 - 32 characters.",
              "args": []
            }
          ]
        },
        {
          "name": "whitelist",
          "description": "(Optional, List of objects) A list of allowed IP addresses for the database. Multiple blocks are allowed.",
          "args": [
            {
              "name": "address",
              "description": "(Optional, String) The IP address or range of database client addresses to be whitelisted in CIDR format. Example, `172.168.1.2/32`.",
              "args": []
            },
            {
              "name": "description",
              "description": "(Optional, String) A description for the allowed IP addresses range.",
              "args": []
            }
          ]
        },
        {
          "name": "guid",
          "description": "(Optional, String) The unique identifier of the database instance.",
          "args": []
        },
        {
          "name": "auto_scaling",
          "description": "(Optional, List) Configure rules to allow your database to automatically increase its resources. Single block of autoscaling is allowed at once.",
          "args": [
            {
              "name": "cpu",
              "description": "(Optional, List) Single block of CPU is allowed at once by CPU autoscaling.",
              "args": [
                {
                  "name": "rate_increase_percent",
                  "description": "(Optional, Integer) Auto scaling rate in increase percent.",
                  "args": []
                },
                {
                  "name": "rate_limit_count_per_member",
                  "description": "(Optional, Integer) Auto scaling rate limit in count per number.",
                  "args": []
                },
                {
                  "name": "rate_period_seconds",
                  "description": "(Optional, Integer) Period seconds of the auto scaling rate.",
                  "args": []
                },
                {
                  "name": "rate_units",
                  "description": "(Optional, String) Auto scaling rate in units.",
                  "args": []
                }
              ]
            },
            {
              "name": "disk",
              "description": "(Optional, List) Single block of disk is allowed at once in disk auto scaling.",
              "args": [
                {
                  "name": "capacity_enabled",
                  "description": "(Optional, Bool) Auto scaling scalar enables or disables the scalar capacity.",
                  "args": []
                },
                {
                  "name": "free_space_less_than_percent",
                  "description": "(Optional, Integer) Auto scaling scalar capacity free space less than percent.",
                  "args": []
                },
                {
                  "name": "io_above_percent",
                  "description": "(Optional, Integer) Auto scaling scalar I/O utilization above percent.",
                  "args": []
                },
                {
                  "name": "io_enabled",
                  "description": "(Optional, Bool) Auto scaling scalar I/O utilization enabled.",
                  "args": []
                },
                {
                  "name": "rate_increase_percent",
                  "description": "(Optional, Integer) Auto scaling rate increase percent.",
                  "args": []
                },
                {
                  "name": "rate_limit_mb_per_member",
                  "description": "(Optional, Integer) Auto scaling rate limit in megabytes per member.",
                  "args": []
                },
                {
                  "name": "rate_period_seconds",
                  "description": "(Optional, Integer) Auto scaling rate period in seconds.",
                  "args": []
                },
                {
                  "name": "rate_units",
                  "description": "(Optional, String) Auto scaling rate in units.",
                  "args": []
                }
              ]
            },
            {
              "name": "memory",
              "description": "(Optional, List) Memory Auto Scaling in single block of memory is allowed at once.",
              "args": [
                {
                  "name": "io_enabled",
                  "description": "(Optional, Bool) Auto scaling scalar I/O utilization enabled.",
                  "args": []
                },
                {
                  "name": "io_over_period",
                  "description": "(Optional, String) Auto scaling scalar I/O utilization over period.",
                  "args": []
                },
                {
                  "name": "rate_increase_percent",
                  "description": "(Optional, Integer) Auto scaling rate in increase percent.",
                  "args": []
                },
                {
                  "name": "rate_limit_mb_per_member",
                  "description": "(Optional, Integer) Auto scaling rate limit in megabytes per member.",
                  "args": []
                },
                {
                  "name": "rate_period_seconds",
                  "description": "(Optional, Integer) Auto scaling rate period in seconds.",
                  "args": []
                },
                {
                  "name": "rate_units",
                  "description": "(Optional, String) Auto scaling rate in units.",
                  "args": []
                }
              ]
            },
            {
              "name": "io_above_percent",
              "description": "(Optional, Integer) Auto scaling scalar I/O utilization above percent.",
              "args": []
            }
          ]
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The CRN of the database instance.",
          "args": []
        },
        {
          "name": "status",
          "description": "The status of the instance.",
          "args": []
        },
        {
          "name": "adminuser",
          "description": "The user ID of the database administrator. Example, `admin` or `root`.",
          "args": []
        },
        {
          "name": "version",
          "description": "The database version.",
          "args": []
        },
        {
          "name": "connectionstrings",
          "description": "A list of connection strings for the database for each user ID. For more information, about how to use connection strings, see the [documentation](/docs/databases-for-postgresql?topic=databases-for-postgresql-connection-strings). The results are returned in pairs of the userid and string: `connectionstrings.1.name = admin connectionstrings.1.string = postgres://admin:$PASSWORD@79226bd4-4076-4873-b5ce-b1dba48ff8c4.b8a5e798d2d04f2e860e54e5d042c915.databases.appdomain.cloud:32554/ibmclouddb?sslmode=verify-full` Individual string parameters can be retrieved by using Terraform variables and outputs `connectionstrings.x.hosts.x.port` and `connectionstrings.x.hosts.x.host`",
          "args": []
        }
      ]
    },
    "ibm_dl_gateway": {
      "name": "ibm_dl_gateway",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Direct Link Gateway resources",
      "args": [
        {
          "name": "bgp_asn",
          "description": "(Required, Integer) The BGP ASN of the gateway to be created. For example, `64999`.",
          "args": []
        },
        {
          "name": "bgp_base_cidr",
          "description": "(Optional, String) (Deprecated) The BGP base CIDR of the gateway to be created. For example, `10.254.30.76/30`",
          "args": []
        },
        {
          "name": "bgp_cer_cidr",
          "description": "(Optional, String) The BGP customer edge router CIDR. Specify a value within bgp_base_cidr. If bgp_base_cidr is `169.254.0.0/16`, this parameter can exclude and a CIDR is selected automatically. For example, `10.254.30.78/30`.",
          "args": []
        },
        {
          "name": "bgp_ibm_cidr",
          "description": "(Optional, String) The {{site.data.keyword.IBM_notm}} BGP ASN. Specify a value within bgp_base_cidr. If bgp_base_cidr is `169.254.0.0/16`, this parameter can exclude and a CIDR is selected automatically. For example, `10.254.30.77/30`.",
          "args": []
        },
        {
          "name": "carrier_name",
          "description": "(Required, String) The carrier name. Constraints are 1 ≤ length ≤ 128, Value must match regular expression ^[a-z][A-Z][0-9][ -_]$. For example, `myCarrierName`.",
          "args": []
        },
        {
          "name": "cross_connect_router",
          "description": "(Required, String) The cross connect router. For example, `xcr01.dal03`.",
          "args": []
        },
        {
          "name": "customer_name",
          "description": "(Required, String) The customer name is required for `dedicated` type. Constraints are 1 ≤ length ≤ 128, Value must match regular expression ^[a-z][A-Z][0-9][ -_]$. For example, `newCustomerName`.",
          "args": []
        },
        {
          "name": "global",
          "description": "(Required, Boolean) Gateway with global routing as `true` can connect networks outside your associated region.",
          "args": []
        },
        {
          "name": "location_name",
          "description": "(Required, String) The gateway location is required for `dedicated` type. For example, `dal03`.",
          "args": []
        },
        {
          "name": "name",
          "description": "(Required, String) The unique user-defined name for the gateway. For example, `myGateway`.",
          "args": []
        },
        {
          "name": "metered",
          "description": "(Required, Boolean) Metered billing option. If set `true` gateway usage is billed per GB. Otherwise, flat rate is charged for the gateway.",
          "args": []
        },
        {
          "name": "port",
          "description": "(Required, String) The gateway port for type is connect gateways. This parameter is required for Direct Link connect type.",
          "args": []
        },
        {
          "name": "resource_group",
          "description": "(Optional, String) The resource group. If unspecified, the account's default resource group is used.",
          "args": []
        },
        {
          "name": "speed_mbps",
          "description": "(Required, Integer) The gateway speed in MBPS. For example, `10.254.30.78/30`.",
          "args": []
        },
        {
          "name": "type",
          "description": "(Required, String) The gateway type, allowed values are `dedicated` and `connect`.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique ID of the gateway.",
          "args": []
        },
        {
          "name": "name",
          "description": "The unique user-defined name for the gateway",
          "args": []
        },
        {
          "name": "crn",
          "description": "The CRN of the gateway.",
          "args": []
        },
        {
          "name": "created_at",
          "description": "The date and time resource created.",
          "args": []
        },
        {
          "name": "location_display_name",
          "description": "The gateway location long name.",
          "args": []
        },
        {
          "name": "resource_group",
          "description": "The resource group reference.",
          "args": []
        },
        {
          "name": "bgp_asn",
          "description": "The IBM BGP ASN.",
          "args": []
        },
        {
          "name": "bgp_status",
          "description": "The gateway BGP status.",
          "args": []
        },
        {
          "name": "completion_notice_reject_reason",
          "description": "The reason for completion notice rejection.",
          "args": []
        },
        {
          "name": "link_status",
          "description": "The gateway link status. You can include only on `type=dedicated` gateways. For example, `down`, `up`.",
          "args": []
        },
        {
          "name": "port",
          "description": "The gateway port for `type=connect` gateways.",
          "args": []
        },
        {
          "name": "vlan",
          "description": "The VLAN allocated for the gateway. You can set only for `type=connect` gateways created directly through the {{site.data.keyword.IBM_notm}} portal.",
          "args": []
        },
        {
          "name": "provider_api_managed",
          "description": "Indicates whether gateway changes need to be made via a provider portal.",
          "args": []
        },
        {
          "name": "operational_status",
          "description": "The gateway operational status. For gateways pending LOA approval, patch operational_status to the appropriate value to approve or reject its LOA. For example, `loa_accepted`.",
          "args": []
        }
      ]
    },
    "ibm_dl_provider_gateway": {
      "name": "ibm_dl_provider_gateway",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Direct Link Gateway resources",
      "args": [
        {
          "name": "bgp_asn",
          "description": "(Required, Integer) The BGP ASN of the gateway to be created. For example, `64999`.",
          "args": []
        },
        {
          "name": "bgp_cer_cidr",
          "description": "(Optional, String) The BGP customer edge router CIDR. Specify a value within bgp_base_cidr. If bgp_base_cidr is `169.254.0.0/16`, this parameter can exclude and a CIDR is selected automatically. For example, `10.254.30.78/30`.",
          "args": []
        },
        {
          "name": "bgp_ibm_cidr",
          "description": "(Optional, String) The {{site.data.keyword.IBM_notm}} BGP CIDR. Specify a value within bgp_base_cidr. If bgp_base_cidr is `169.254.0.0/16`, this parameter can exclude and a CIDR is selected automatically. For example, `10.254.30.77/30`.",
          "args": []
        },
        {
          "name": "customer_account_id",
          "description": "(Required, String) The customer IBM Cloud account ID for the new gateway. A gateway object contains the pending create request to be available in the specified account.",
          "args": []
        },
        {
          "name": "name",
          "description": "(Required, String) The unique user-defined name for this gateway. Example: `myGateway`",
          "args": []
        },
        {
          "name": "port",
          "description": "(Required, String) The gateway port for type to connect gateways.",
          "args": []
        },
        {
          "name": "speed_mbps",
          "description": "(Required, Integer) The gateway speed in megabits per second. For example, `10.254.30.78/30`.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique ID of the gateway.",
          "args": []
        },
        {
          "name": "name",
          "description": "The unique user-defined name for the gateway",
          "args": []
        },
        {
          "name": "crn",
          "description": "The CRN of the gateway.",
          "args": []
        },
        {
          "name": "created_at",
          "description": "The date and time resource created.",
          "args": []
        },
        {
          "name": "location_display_name",
          "description": "The gateway location long name.",
          "args": []
        },
        {
          "name": "resource_group",
          "description": "The resource group reference.",
          "args": []
        },
        {
          "name": "bgp_asn",
          "description": "The IBM BGP ASN.",
          "args": []
        },
        {
          "name": "bgp_status",
          "description": "The gateway BGP status.",
          "args": []
        },
        {
          "name": "customer_account_id",
          "description": "The customer IBM Cloud account ID for the new gateway. A gateway object contains the pending create request to be available in the specified account.",
          "args": []
        },
        {
          "name": "link_status",
          "description": "The gateway link status. You can include only on `type=dedicated` gateways. For example, `down`, `up`.",
          "args": []
        },
        {
          "name": "port",
          "description": "The gateway port for `type=connect` gateways.",
          "args": []
        },
        {
          "name": "vlan",
          "description": "The VLAN allocated for the gateway. You can set only for `type=connect` gateways created directly through the {{site.data.keyword.IBM_notm}} portal.",
          "args": []
        },
        {
          "name": "provider_api_managed",
          "description": "Indicates whether the gateway changes need to be made via a provider portal.",
          "args": []
        },
        {
          "name": "operational_status",
          "description": "The gateway operational status. Supported values are`configuring`, `create_pending`, `create_rejected`, `delete_pending`, `provisioned`.",
          "args": []
        },
        {
          "name": "provider_api_managed",
          "description": "Indicates whether the gateway changes must be made through a provider portal.",
          "args": []
        }
      ]
    },
    "ibm_dl_virtual_connection": {
      "name": "ibm_dl_virtual_connection",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Direct Link Gateway resources",
      "args": [
        {
          "name": "gateway",
          "description": "(Required, String) The direct link gateway ID.",
          "args": []
        },
        {
          "name": "name",
          "description": "(Required, String) The user-defined name for the virtual connection.",
          "args": []
        },
        {
          "name": "type",
          "description": "(Required, String) The type of virtual connection. Allowed values are `classic`,`vpc`.",
          "args": []
        },
        {
          "name": "network_id",
          "description": "(Required, String) Metered billing option. If set `true` gateway usage is billed per GB. Otherwise, flat rate is charged for the gateway.",
          "args": []
        },
        {
          "name": "name",
          "description": "(Required, String) The unique identifier of the target network. For `type=vpc` virtual connections it is the CRN of the target VPC. This parameter does not apply for `type=classic` connections. For example, `crn:v1:bluemix:public:is:us-east:a/28e4d90ac7504be69447111122223333::vpc:aaa81ac8-5e96-42a0-a4b7-6c2e2d1bb`.",
          "args": []
        },
        {
          "name": "id",
          "description": "(The unique ID of the resource with combination of gateway / virtual_connection_id., String) ",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "created_at",
          "description": "The date and time resource created.",
          "args": []
        },
        {
          "name": "virtual_connection_id",
          "description": "The unique identifier for the direct link gateway virtual connection",
          "args": []
        },
        {
          "name": "status",
          "description": "The status of the virtual connection. Possible values are `pending`, `attached`, `approval_pending`, `rejected`, `expired`, `deleting`, `detached_by_network_pending`, `detached_by_network`.",
          "args": []
        },
        {
          "name": "network_account",
          "description": "The virtual connections across two different IBM Cloud accounts network_account indicates the account that owns the target network. For example, `00aa14a2e0fb102c8995ebeff65555`.",
          "args": []
        }
      ]
    },
    "ibm_dns_domain": {
      "name": "ibm_dns_domain",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure resources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the domain. For example, \"example.com\". When the domain is created, proper `NS` and `SOA` records are created automatically for the domain.",
          "args": []
        },
        {
          "name": "target",
          "description": "(Optional, String) The primary target IP address to which the domain resolves. When the domain is created, an `A` record with a host value of `@` and a data-target value of the IP address are provided and associated with the new domain.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of Strings) Tags associated with the DNS domain instance.     **NOTE**: `Tags` are managed locally and not stored on the IBM Cloud Service Endpoint at this moment.",
          "args": []
        }
      ],
      "attrs": []
    },
    "ibm_dns_domain_registration_nameservers": {
      "name": "ibm_dns_domain_registration_nameservers",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure resources",
      "args": [],
      "attrs": []
    },
    "ibm_dns_glb": {
      "name": "ibm_dns_glb",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "DNS Services resources",
      "args": [
        {
          "name": "az_pools",
          "description": "(Optional, Set) Map availability zones to pool ID's.",
          "args": [
            {
              "name": "availability_zone",
              "description": "(Required, String) Availability of the zone.",
              "args": []
            },
            {
              "name": "pools",
              "description": "(Required, List of String) List of Load Balancer pools.",
              "args": []
            }
          ]
        },
        {
          "name": "default_pools",
          "description": "(Required, list of Strings) TA list of pool IDs ordered by their failover priority.",
          "args": []
        },
        {
          "name": "description",
          "description": "(Optional, String) Descriptive text of the Load Balancer.",
          "args": []
        },
        {
          "name": "fallback_pool",
          "description": "(Required, Integer) The pool ID to use when all other pools are detected as unhealthy.",
          "args": []
        },
        {
          "name": "instance_id",
          "description": "(Required, String) The GUID of the private DNS.",
          "args": []
        },
        {
          "name": "name",
          "description": "(Required, String) The name of the Load Balancer.",
          "args": []
        },
        {
          "name": "ttl",
          "description": "(Optional, Integer) The time to live (TTL) in seconds.",
          "args": []
        },
        {
          "name": "zone_id",
          "description": "(Required, String) The ID of the private DNS Zone.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "created_on",
          "description": "The time when the Load Balancer was created.",
          "args": []
        },
        {
          "name": "glb_id",
          "description": "The Load Balancer ID.",
          "args": []
        },
        {
          "name": "health",
          "description": "Healthy state of the Load Balancer. Possible values are `DOWN`, `UP`, or `DEGRADED`.",
          "args": []
        },
        {
          "name": "id",
          "description": "The unique identifier of the DNS record. The ID is composed of `<instance_id>/<zone_id>/<glb_id>`.",
          "args": []
        },
        {
          "name": "modified_on",
          "description": "The time when the Load Balancer was modified.",
          "args": []
        }
      ]
    },
    "ibm_dns_glb_monitor": {
      "name": "ibm_dns_glb_monitor",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "DNS Services resources",
      "args": [
        {
          "name": "expected_body",
          "description": "(Optional, String) A case-insensitive sub-string to look in the response body. If the string is not found, the origin will be marked as unhealthy. This parameter is only valid for HTTP and HTTPS monitors.",
          "args": []
        },
        {
          "name": "expected_codes",
          "description": "(Optional, String) The expected HTTP response code or code range of the health check. This parameter is only valid for HTTP and HTTPS monitors. Allowable values are `200, 201, 202, 203, 204,205, 206, 207, 208, 226, xx`.",
          "args": []
        },
        {
          "name": "allow_insecure",
          "description": "(Optional, String) Do not validate the certificate when monitor use HTTPS. This parameter is currently only valid for HTTPS monitors.",
          "args": []
        },
        {
          "name": "description",
          "description": "(Optional, String) Descriptive text of the Load Balancer monitor.",
          "args": []
        },
        {
          "name": "headers",
          "description": "(Optional, Set) The HTTP request headers to send in the health check. It is recommended you set a host header by default. The `User-Agent` header cannot be overridden. This parameter is only valid for HTTP and HTTPS monitors.",
          "args": [
            {
              "name": "name",
              "description": "(Required, String) The name of the HTTP request header.",
              "args": []
            },
            {
              "name": "value",
              "description": "(Required, list of Strings) The value of HTTP request header.",
              "args": []
            }
          ]
        },
        {
          "name": "interval",
          "description": "(Optional, Integer) The interval between each health check.",
          "args": []
        },
        {
          "name": "instance_id",
          "description": "(Required, String) The GUID of the private DNS.",
          "args": []
        },
        {
          "name": "method",
          "description": "(Optional, String) The method to use for the health check applicable to HTTP or HTTPS based checks, the default value is `GET`.",
          "args": []
        },
        {
          "name": "name",
          "description": "(Required, String) The name of the Load Balancer monitor.",
          "args": []
        },
        {
          "name": "path",
          "description": "(Optional, String) The endpoint path to health check against. This parameter is only valid for HTTP and HTTPS monitors.",
          "args": []
        },
        {
          "name": "port",
          "description": "(Optional, Integer) The port number to connect to for the health check. Required for TCP checks. HTTP and HTTPS checks should only define the port when using a non-standard port. For example, HTTP  default is `80`, and HTTPS default is `443`).",
          "args": []
        },
        {
          "name": "retries",
          "description": "(Optional, Integer) The number of retries to attempt in case of a timeout before marking the origin as unhealthy.",
          "args": []
        },
        {
          "name": "timeout",
          "description": "(Optional, Integer) The timeout (in seconds) before marking the health check as failed.",
          "args": []
        },
        {
          "name": "type",
          "description": "(Optional, String) The protocol to use for the health check. Currently supported protocols are `HTTP`,`HTTPS` and `TCP`. Default Value is `HTTP`",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "created_on",
          "description": "The time (created On) of the DNS Global Load Balancer monitor.",
          "args": []
        },
        {
          "name": "id",
          "description": "The unique ID of the private DNS Monitor. The ID is composed of `<instance_id>/<glb_monitor_id>`.",
          "args": []
        },
        {
          "name": "modified_on",
          "description": "The time (modified On) of the DNS Global Load Balancer monitor.",
          "args": []
        }
      ]
    },
    "ibm_dns_glb_monitors": {
      "name": "ibm_dns_glb_monitors",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "DNS Services data sources",
      "args": [
        {
          "name": "instance_id",
          "description": "(Required, String) The GUID of the private DNS service instance.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "dns_glb_monitors",
          "description": "List of all private DNS Load balancer monitors in the IBM Cloud infrastructure.",
          "args": [
            {
              "name": "name",
              "description": "The name of the DNS Load balancer monitor.",
              "args": []
            },
            {
              "name": "description",
              "description": "The descriptive text of the DNS Load balancer monitor.",
              "args": []
            },
            {
              "name": "type",
              "description": "The protocol to use for the health check. Currently supported protocols are `HTTP`, `HTTPS`, and `TCP`.",
              "args": []
            },
            {
              "name": "port",
              "description": "Port number to connect to for the health check. Required for TCP checks, HTTP, and HTTPS checks.",
              "args": []
            },
            {
              "name": "interval",
              "description": "The interval between each health check.",
              "args": []
            },
            {
              "name": "retries",
              "description": "The number of retries to attempt in case of a timeout before marking the origin as unhealthy.",
              "args": []
            },
            {
              "name": "timeout",
              "description": "The timeout (in seconds) before marking the health check as failed.",
              "args": []
            },
            {
              "name": "method",
              "description": "The method to use for the health check applicable to HTTP, HTTPS based checks, the default value is `GET`.",
              "args": []
            },
            {
              "name": "path",
              "description": "The endpoint path to health check against. This parameter is only valid for HTTP and HTTPS monitors.",
              "args": []
            },
            {
              "name": "headers",
              "description": "The HTTP request headers to send in the health check.",
              "args": [
                {
                  "name": "name",
                  "description": "The name of the HTTP request header.",
                  "args": []
                },
                {
                  "name": "value",
                  "description": "The value of the HTTP request header.",
                  "args": []
                }
              ]
            },
            {
              "name": "allow_insecure",
              "description": "Do not validate the certificate when monitor use HTTPS",
              "args": []
            },
            {
              "name": "expected_codes",
              "description": "The expected HTTP response code or code range of the health check.",
              "args": []
            },
            {
              "name": "expected_body",
              "description": "A case insensitive substring to look for in the response body.",
              "args": []
            },
            {
              "name": "monitor_id",
              "description": "The monitor ID.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_dns_glb_pool": {
      "name": "ibm_dns_glb_pool",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "DNS Services resources",
      "args": [
        {
          "name": "instance_id",
          "description": "(Required, String) The GUID of the private DNS on which zone has to be created.",
          "args": []
        },
        {
          "name": "name",
          "description": "(Required, String) The name of the origin server.",
          "args": []
        },
        {
          "name": "enabled",
          "description": "(Optional, Bool) Whether the origin server is enabled.",
          "args": []
        },
        {
          "name": "description",
          "description": "(Optional, String) Descriptive text of the origin server.",
          "args": []
        },
        {
          "name": "healthy_origins_threshold",
          "description": "(Optional, Integer) The minimum number of origins that must be healthy for this pool to serve traffic. If the number of healthy origins falls below this number, the pool will be marked unhealthy and will failover to the next available pool.",
          "args": []
        },
        {
          "name": "origins",
          "description": "(Required, Set) The list of origins within this pool. Traffic directed at this pool is balanced across all currently healthy origins, provided the pool itself is healthy.",
          "args": [
            {
              "name": "address",
              "description": "(Required, String) The address of the origin server. It can be a hostname or an IP address.",
              "args": []
            },
            {
              "name": "name",
              "description": "(Required, String) The name of the origin server.",
              "args": []
            },
            {
              "name": "description",
              "description": "(Optional, String) Descriptive text of the origin server.",
              "args": []
            },
            {
              "name": "enabled",
              "description": "(Optional, Bool) Whether the origin server is enabled.",
              "args": []
            }
          ]
        },
        {
          "name": "address",
          "description": "(Required, String) The address of the origin server. It can be a hostname or an IP address.",
          "args": []
        },
        {
          "name": "monitor",
          "description": "(Optional, String) The ID of the Load Balancer monitor to be associated to this pool.",
          "args": []
        },
        {
          "name": "notification_channel",
          "description": "(Optional, String) The webhook URL as a notification channel.",
          "args": []
        },
        {
          "name": "healthcheck_region",
          "description": "(Optional, String) Health check region of VSIs. Allowable values are `us-south`,`us-east`, `eu-gb`, `eu-du`, `au-syd`, `jp-tok`.",
          "args": []
        },
        {
          "name": "healthcheck_subnets",
          "description": "(Optional, List) The health check subnet CRN of VSIs.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "created_on",
          "description": "The time (created On) of the DNS Global Load Balancer pool.",
          "args": []
        },
        {
          "name": "id",
          "description": "The unique ID of the private DNS zone. The ID is composed of `<instance_id>/<glb_pool_id>`.",
          "args": []
        },
        {
          "name": "modified_on",
          "description": "The time (modified On) of the DNS Global Load Balancer pool.",
          "args": []
        }
      ]
    },
    "ibm_dns_glb_pools": {
      "name": "ibm_dns_glb_pools",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "DNS Services data sources",
      "args": [
        {
          "name": "instance_id",
          "description": "(Required, String) The resource GUID of the private DNS service on which zones are created.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "dns_glb_pools",
          "description": "List of all private DNS Load balancer pools in the IBM Cloud infrastructure.",
          "args": [
            {
              "name": "name",
              "description": "The name of the DNS Load balancer pool.",
              "args": []
            },
            {
              "name": "description",
              "description": "The descriptive text of the DNS Load balancer pool.",
              "args": []
            },
            {
              "name": "enable",
              "description": "Whether the Load Balancer pool is enabled.",
              "args": []
            },
            {
              "name": "healthy_origins_threshold",
              "description": "The minimum number of origins that must be healthy for this pool to serve traffic. If the number of healthy origins falls less than this number, the pool will be marked unhealthy and will failover to the next available pool.",
              "args": []
            },
            {
              "name": "origins",
              "description": "The list of origins within the pool. Traffic directed to the pool is balanced across all currently healthy origins, provided the pool itself is healthy.",
              "args": [
                {
                  "name": "name",
                  "description": "The name of the origin server.",
                  "args": []
                },
                {
                  "name": "description",
                  "description": "The description of the origin server.",
                  "args": []
                },
                {
                  "name": "address",
                  "description": "The address of the origin server. It can be a hostname or an IP address.",
                  "args": []
                },
                {
                  "name": "enabled",
                  "description": "Whether the origin server is enabled.",
                  "args": []
                },
                {
                  "name": "health",
                  "description": "Whether the health is `true` or `false`.",
                  "args": []
                },
                {
                  "name": "health_failure_reason",
                  "description": "The reason for the health check failure.",
                  "args": []
                }
              ]
            },
            {
              "name": "monitor",
              "description": "The ID of the Load Balancer monitor to be associated to this pool.",
              "args": []
            },
            {
              "name": "notification_channel",
              "description": "The webhook URL as a notification channel.",
              "args": []
            },
            {
              "name": "healthcheck_region",
              "description": "Health check region of VSIs. Allowable values are `us-south`,`us-east`, `eu-gb`, `eu-du`, `au-syd`, `jp-tok`.",
              "args": []
            },
            {
              "name": "healthcheck_subnets",
              "description": "Health check subnet CRN of VSIs.",
              "args": []
            },
            {
              "name": "pool_id",
              "description": "The pool ID.",
              "args": []
            },
            {
              "name": "created_on",
              "description": "The time (created On) of the DNS Global Load Balancer pool",
              "args": []
            },
            {
              "name": "modified_on",
              "description": "he time (modified On) of the DNS Global Load Balancer pool.",
              "args": []
            },
            {
              "name": "health",
              "description": "The status of DNS GLB pool's health. Possible values are `DOWN`, `UP`, `DEGRADED`.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_dns_glbs": {
      "name": "ibm_dns_glbs",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "DNS Services data sources",
      "args": [
        {
          "name": "instance_id",
          "description": "(Required, String) The GUID of the private DNS service instance.",
          "args": []
        },
        {
          "name": "zone_id",
          "description": "(Required, String) The ID of the private DNS zone.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "dns_glbs",
          "description": "List of all private DNS Load balancers in the IBM Cloud infrastructure.",
          "args": [
            {
              "name": "name",
              "description": "The name of the DNS Load balancers.",
              "args": []
            },
            {
              "name": "description",
              "description": "The descriptive text of the DNS Load balancers.",
              "args": []
            },
            {
              "name": "ttl",
              "description": "The time to live in second.",
              "args": []
            },
            {
              "name": "fallback_pool",
              "description": "The pool ID to use when all other pools are detected as unhealthy.",
              "args": []
            },
            {
              "name": "default_pools",
              "description": "TA list of pool IDs ordered by their failover priority.",
              "args": []
            },
            {
              "name": "az_pools",
              "description": "Map availability zones to the pool ID's.",
              "args": [
                {
                  "name": "availability_zone",
                  "description": "The availability zone.",
                  "args": []
                },
                {
                  "name": "pools",
                  "description": "List of Load Balancer pools.",
                  "args": []
                }
              ]
            }
          ]
        },
        {
          "name": "created_on",
          "description": "The date and time when the Load Balancer was created.",
          "args": []
        },
        {
          "name": "modified_on",
          "description": "The date and time when the Load Balancer was modified.",
          "args": []
        },
        {
          "name": "glb_id",
          "description": "The Load Balancer ID.",
          "args": []
        },
        {
          "name": "health",
          "description": "Healthy state of the Load Balancer. Possible values are `DOWN`, `UP`, or `DEGRADED`.",
          "args": []
        }
      ]
    },
    "ibm_dns_permitted_network": {
      "name": "ibm_dns_permitted_network",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "DNS Services resources",
      "args": [
        {
          "name": "instance_id",
          "description": "(Required, String) The ID of the IBM Cloud DNS service instance where you want to add a permitted network.",
          "args": []
        },
        {
          "name": "zone_id",
          "description": "(Required, String) The ID of the private DNS zone where you want to add the permitted network.",
          "args": []
        },
        {
          "name": "vpc_crn",
          "description": "(Required, String) The CRN of the VPC that you want to add as a permitted network.",
          "args": []
        },
        {
          "name": "type",
          "description": "(Required, String) The type of permitted network that you want to add. Supported values are `vpc`.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the DNS private network. The ID is composed of `<instance_ID>/<zone_ID>/<permitted_network_ID>`.",
          "args": []
        },
        {
          "name": "created_on",
          "description": "The time when the permitted network was added to the DNS.",
          "args": []
        },
        {
          "name": "modified_on",
          "description": "The time when the permitted network was modified.",
          "args": []
        }
      ]
    },
    "ibm_dns_permitted_networks": {
      "name": "ibm_dns_permitted_networks",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "DNS Services data sources",
      "args": [
        {
          "name": "instance_id",
          "description": "(Required, String) The ID of the private DNS service instance where you created permitted networks.",
          "args": []
        },
        {
          "name": "zone_id",
          "description": "(Required, String) The ID of the zone where you added the permitted networks.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "permitted_networks",
          "description": "A list of all permitted networks that were created for a zone in your private DNS instance.",
          "args": [
            {
              "name": "created_on",
              "description": "The date and time when the permitted network was created.",
              "args": []
            },
            {
              "name": "modified_on",
              "description": "The date and time when the permitted network was updated.",
              "args": []
            },
            {
              "name": "permitted_network",
              "description": "A list of VPC CRNs that are associated with the permitted network.",
              "args": [
                {
                  "name": "vpc_crn",
                  "description": "The CRN of the VPC that the permitted network belongs to.",
                  "args": []
                }
              ]
            },
            {
              "name": "permitted_network_id",
              "description": "The ID of the permitted network.",
              "args": []
            },
            {
              "name": "state",
              "description": "The state of the permitted network.",
              "args": []
            },
            {
              "name": "type",
              "description": "The type of the permitted network.",
              "args": []
            },
            {
              "name": "zone_id",
              "description": "The ID of the zone where you added the permitted network.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_dns_record": {
      "name": "ibm_dns_record",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure resources",
      "args": [
        {
          "name": "data",
          "description": "(Required, String) The IP address or a hostname of a domain's resource record. Fully qualified host and domain name data must end with the `.` character.",
          "args": []
        },
        {
          "name": "domain_id",
          "description": "(Required, Integer) The ID for the domain associated with the resource record.",
          "args": []
        },
        {
          "name": "expire",
          "description": "(Optional, Integer) The duration, expressed in seconds, that a secondary name server (or servers) holds a zone before it is no longer considered authoritative.",
          "args": []
        },
        {
          "name": "host",
          "description": "(Required, String) The host defined by a resource record. The `@` symbol denotes a wildcard.",
          "args": []
        },
        {
          "name": "minimum_ttl",
          "description": "(Optional, Integer) The duration, expressed in seconds, that a domain's resource records are valid. This is also known as a minimum time to live (TTL), and can be overridden by an individual resource record's TTL.",
          "args": []
        },
        {
          "name": "mx_priority",
          "description": "(Optional, Integer) The priority of the mail exchanger that delivers mail for a domain. This is useful in cases where a domain has more than one mail exchanger. A lower number denotes a higher priority, and mail attempt to deliver through the highest priority exchanger before moving to lower priority exchanger. The default value is `0`.",
          "args": []
        },
        {
          "name": "refresh",
          "description": "(Optional, Integer) The duration, expressed in seconds, that a secondary name server waits to check the domain's primary name server for a new copy of a DNS zone. If a zone file has changed, the secondary DNS server updates its copy of the zone to match the primary DNS server's zone.",
          "args": []
        },
        {
          "name": "responsible_person",
          "description": "(Required, String) The email address of the person responsible for a domain. Replace the `@` symbol in the address with a `.`. For example, root@example.org would be expressed as `root.example.org.`.",
          "args": []
        },
        {
          "name": "retry",
          "description": "(Optional, Integer) The duration, expressed in seconds, that the domain's primary name server (or servers) waits before attempting to refresh the domain's zone with the secondary name server. A failed attempt to refresh by a secondary name server triggers the retry action.",
          "args": []
        },
        {
          "name": "ttl",
          "description": "(Required, Integer) The time to live (TTL) duration, expressed in seconds, of a resource record. A name server uses TTL to determine how long to cache a resource record. An SOA record's TTL value defines the domain's overall TTL.",
          "args": []
        },
        {
          "name": "type",
          "description": "(Required, String) The type of domain resource record. Accepted values are as follows: `a` for address records, `aaaa` for address records, `cname` for canonical name records, `mx` for mail exchanger records, `ptr` for pointer records in reverse domains, `spf` for sender policy framework records, `srv` for service records.",
          "args": []
        },
        {
          "name": "txt",
          "description": "(Optional, String) Used for text records.",
          "args": []
        },
        {
          "name": "service",
          "description": "(Required, String) `SRV` records only. The symbolic name of the service.",
          "args": []
        },
        {
          "name": "protocol",
          "description": "(Required, String) `SRV` records only. The protocol of the service that you want to use, such as `TCP` or `UDP`.",
          "args": []
        },
        {
          "name": "port",
          "description": "(Required, Integer) `SRV` records only. The TCP or UDP port on which the service be found.",
          "args": []
        },
        {
          "name": "priority",
          "description": "(Required, Integer) `SRV` records only. The priority of the target host. The lowest numerical value is given the highest priority. The default value is `0`.",
          "args": []
        },
        {
          "name": "weight",
          "description": "(Required, Integer) `SRV` records only. A relative weight for records that have the same priority. The default value is `0`.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of Strings) Tags associated with the DNS domain record instance.     **NOTE**: `Tags` are managed locally and not stored on the IBM Cloud Service Endpoint at this moment.",
          "args": []
        }
      ],
      "attrs": []
    },
    "ibm_dns_resource_record": {
      "name": "ibm_dns_resource_record",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "DNS Services resources",
      "args": [
        {
          "name": "instance_id",
          "description": "(Required, String) The ID of the IBM Cloud DNS service instance where you want to create the DNS record.",
          "args": []
        },
        {
          "name": "zone_id",
          "description": "(Required, String) The ID of the DNS zone where you want to create a DNS record.",
          "args": []
        },
        {
          "name": "type",
          "description": "(Required, String) The type of DNS record that you want to create. Supported values are `A`, `AAAA`, `CNAME`, `PTR`, `TXT`, `MX`, and `SRV`.",
          "args": []
        },
        {
          "name": "name",
          "description": "(Required, String) The name of the DNS record.",
          "args": []
        },
        {
          "name": "ttl",
          "description": "(Optional, Integer) The time to live (TTL) in minutes that the resolved DNS record is cached before the associated IP address must be retrieved again. The minimum TTL must be 1 minute and can be 12 hours at a maximum. If no value is specified, 15 minutes is used by default. To find the default TTL values for each record type, see [Adding DNS records](/docs/dns-svcs?topic=dns-svcs-managing-dns-records#adding-dns-records).",
          "args": []
        },
        {
          "name": "preference",
          "description": "(Required for `MX` records, Integer) If you create an `MX` record, enter the preference of the record.",
          "args": []
        },
        {
          "name": "priority",
          "description": "(Required for `SRV` records, Integer) If you create an `SRV` record, enter the priority of the record.",
          "args": []
        },
        {
          "name": "weight",
          "description": "(Required for `SRV` records, Integer) If you create an `SRV` record, enter the weight of the record. The weight is considered when multiple records with the same priority exist. A higher value is associated with a higher weight and a higher chance of being considered among records with the same priority.",
          "args": []
        },
        {
          "name": "port",
          "description": "(Required for `SRV` records, Integer) If you create an `SRV` record, enter the TCP or UDP port of the target server.",
          "args": []
        },
        {
          "name": "service",
          "description": "(Required for `SRV` records, String) If you create an `SRV` record, enter the name of the service that you want. The name must start with an underscore (`_`).",
          "args": []
        },
        {
          "name": "protocol",
          "description": "(Required for `SRV` records, String) If you create an `SRV` record, enter the name of the protocol that you want.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the DNS record. The ID is composed of `<instance_id>/<zone_id>/<dns_record_id>`.",
          "args": []
        },
        {
          "name": "zone_id",
          "description": "The ID of the zone where the DNS record was created.",
          "args": []
        },
        {
          "name": "resource_record_id",
          "description": "The ID of the DNS record.",
          "args": []
        },
        {
          "name": "created_on",
          "description": "The time when the DNS record was created.",
          "args": []
        },
        {
          "name": "modified_on",
          "description": "The time when the DNS record was modified.",
          "args": []
        }
      ]
    },
    "ibm_dns_resource_records": {
      "name": "ibm_dns_resource_records",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "DNS Services data sources",
      "args": [
        {
          "name": "instance_id",
          "description": "(Required, String) The ID of the private DNS service instance.",
          "args": []
        },
        {
          "name": "zone_id",
          "description": "(Required, String) The ID of the zone that you added to the private DNS service instance.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "dns_resource_records",
          "description": "A list of all private domain name service resource records.",
          "args": [
            {
              "name": "id",
              "description": "The unique identifier of the private DNS resource record.",
              "args": []
            },
            {
              "name": "name",
              "description": "The name of a private DNS resource record.",
              "args": []
            },
            {
              "name": "type",
              "description": "The type of the private DNS resource record. Supported values are `A`, `AAAA`, `CNAME`, `PTR`, `TXT`, `MX`, and `SRV`.",
              "args": []
            },
            {
              "name": "ttl",
              "description": "The time-to-live value of the DNS resource record.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_dns_reverse_record": {
      "name": "ibm_dns_reverse_record",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure resources",
      "args": [
        {
          "name": "ipaddress",
          "description": "(Required, String) The IP address or a hostname of a domain's resource record.",
          "args": []
        },
        {
          "name": "hostname",
          "description": "(Required, String) The host defined by a reverse record.",
          "args": []
        },
        {
          "name": "ttl",
          "description": "(Optional, Integer) The time to live (TTL) duration, expressed in seconds, of a resource record. Default value is 604800 seconds.",
          "args": []
        }
      ],
      "attrs": []
    },
    "ibm_dns_secondary": {
      "name": "ibm_dns_secondary",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure resources",
      "args": [
        {
          "name": "zone_name",
          "description": "(Required, String) The name of the zone that is transferred.",
          "args": []
        },
        {
          "name": "transfer_frequency",
          "description": "(Required, Integer) Signifies how often a secondary DNS zone should be transferred in minutes.",
          "args": []
        },
        {
          "name": "master_ip_address",
          "description": "(Required, String) The IP address of the master name server where a secondary DNS zone is transferred from.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of Strings) Tags associated with the DNS secondary instance.     **NOTE**: `Tags` are managed locally and not stored on the IBM Cloud Service Endpoint at this moment.",
          "args": []
        }
      ],
      "attrs": []
    },
    "ibm_dns_zone": {
      "name": "ibm_dns_zone",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "DNS Services resources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the DNS zone that you want to create.",
          "args": []
        },
        {
          "name": "instance_id",
          "description": "(Required, String) The ID of the IBM Cloud DNS service instance where you want to create a DNS zone.",
          "args": []
        },
        {
          "name": "description",
          "description": "(Optional, String) The description of the DNS zone.",
          "args": []
        },
        {
          "name": "label",
          "description": "(Optional, String) The label of the DNS zone.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The ID of the DNS zone. The ID is composed of `<instance_id>/<zone_id>`.",
          "args": []
        },
        {
          "name": "zone_id",
          "description": "The ID of the zone that is associated with the DNS zone.",
          "args": []
        },
        {
          "name": "created_on",
          "description": "The time when the DNS zone was created.",
          "args": []
        },
        {
          "name": "modified_on",
          "description": "The time when the DNS zone was updated.",
          "args": []
        },
        {
          "name": "state",
          "description": "The state of the DNS zone.",
          "args": []
        }
      ]
    },
    "ibm_dns_zones": {
      "name": "ibm_dns_zones",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "DNS Services data sources",
      "args": [
        {
          "name": "instance_id",
          "description": "(Required, String) The ID of the private DNS service instance.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "dns_zones",
          "description": "A List of zones that you added to your private DNS service instance.",
          "args": [
            {
              "name": "zone_id",
              "description": "The ID of the zone.",
              "args": []
            },
            {
              "name": "instance_id",
              "description": "The ID of the private DNS service instance where you added the zone.",
              "args": []
            },
            {
              "name": "description",
              "description": "The description of the zone.",
              "args": []
            },
            {
              "name": "name",
              "description": "The name of the zone.",
              "args": []
            },
            {
              "name": "label",
              "description": "The label of the zone.",
              "args": []
            },
            {
              "name": "created_on",
              "description": "The date and time when the zone was added to the private DNS service instance.",
              "args": []
            },
            {
              "name": "modified_on",
              "description": "The date and time when the zone was updated.",
              "args": []
            },
            {
              "name": "state",
              "description": "The state of the zone.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_event_streams_topic": {
      "name": "ibm_event_streams_topic",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Event Streams resources",
      "args": [
        {
          "name": "config",
          "description": "(Optional, Map) The configuration parameters of the topic. Supported configurations are: `cleanup.policy`, `retention.ms`, `retention.bytes`, `segment.bytes`, `segment.ms`, `segment.index.bytes`.",
          "args": []
        },
        {
          "name": "name",
          "description": "(Required, String) The name of the topic.",
          "args": []
        },
        {
          "name": "partitions",
          "description": "(Optional, Integer) The number of partitions of the topic. Default value is 1.",
          "args": []
        },
        {
          "name": "resource_instance_id",
          "description": "(Required, String) The ID/CRN of the Event Streams service instance.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The ID of the topic in CRN format. For example, `crn:v1:bluemix:public:messagehub:us-south:a/6db1b0d0b5c54ee5c201552547febcd8:cb5a0252-8b8d-4390-b017-80b743d32839:topic:my-es-topic`",
          "args": []
        },
        {
          "name": "kafka_brokers_sasl",
          "description": "Kafka brokers use for interacting with Kafka native API.",
          "args": []
        },
        {
          "name": "kafka_http_url",
          "description": "The API endpoint for interacting with Event Streams REST API.",
          "args": []
        }
      ]
    },
    "ibm_firewall": {
      "name": "ibm_firewall",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure resources",
      "args": [
        {
          "name": "firewall_type",
          "description": "(Optional, String) Specifies the type of firewall to create. Valid options are HARDWARE_FIREWALL_DEDICATED or FORTIGATE_SECURITY_APPLIANCE. Defaults to HARDWARE_FIREWALL_DEDICATED",
          "args": []
        },
        {
          "name": "ha_enabled",
          "description": "(Required, Boolean) Specifies whether the local load balancer needs to be HA-enabled.",
          "args": []
        },
        {
          "name": "public_vlan_id",
          "description": "(Required, Integer) The target public VLAN ID that you want the firewall to protect. You can find accepted values [here](https://cloud.ibm.com/classic/network/vlans). Click the VLAN that you want to use and note the ID number in the resulting URL. You can also refer to a VLAN name by using a data source.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of Strings) Set tags on the firewall. Permitted characters include: A-Z, 0-9, whitespace, `_` (underscore), `-` (hyphen), `.` (period), and `:` (colon). All other characters are removed.",
          "args": []
        }
      ],
      "attrs": []
    },
    "ibm_firewall_policy": {
      "name": "ibm_firewall_policy",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure resources",
      "args": [
        {
          "name": "firewall_id",
          "description": "(Required, Integer) The device ID for the target hardware firewall.",
          "args": []
        },
        {
          "name": "rules",
          "description": "(Required, Array) The firewall rules. At least one rule is required.",
          "args": [
            {
              "name": "action",
              "description": "(Required, String) Specifies whether traffic is allowed when rules are matched. Accepted values are `permit` or `deny`.",
              "args": []
            },
            {
              "name": "src_ip_address",
              "description": "(Required, String) Specifies either a specific IP address or the network address for a specific subnet.",
              "args": []
            },
            {
              "name": "src_ip_cidr",
              "description": "(Required, String) Specifies the standard CIDR notation for the selected source. `32` implements the rule for a single IP while, for example, `24` implements the rule for 256 IP's.",
              "args": []
            },
            {
              "name": "dst_ip_address",
              "description": "(Required, String) Accepted values are `any`, a specific IP address, or the network address for a specific subnet.",
              "args": []
            },
            {
              "name": "dst_ip_cidr",
              "description": "(Required, String) Specifies the standard CIDR notation for the selected destination.",
              "args": []
            },
            {
              "name": "dst_port_range_start",
              "description": "(Optional, String) The start of the range of ports for TCP and UDP. Accepted values are `1`-`65535`.",
              "args": []
            },
            {
              "name": "dst_port_range_end",
              "description": "(Optional, String) The end of the range of ports for TCP and UDP. Accepted values are `1`-`65535`.",
              "args": []
            },
            {
              "name": "notes",
              "description": "(Optional, Strings) Descriptive text about the rule.",
              "args": []
            },
            {
              "name": "protocol",
              "description": "(Required, String) The protocol for the rule. Accepted values are `tcp`,`udp`,`icmp`,`gre`,`pptp`,`ah`, or `esp`.",
              "args": []
            }
          ]
        },
        {
          "name": "tags",
          "description": "(Optional, Array of Strings) Tags associated with the firewall policy instance.     **NOTE**: `Tags` are managed locally and not stored on the IBM Cloud Service Endpoint at this moment.",
          "args": []
        }
      ],
      "attrs": []
    },
    "ibm_function_action": {
      "name": "ibm_function_action",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Functions resources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the action.",
          "args": []
        },
        {
          "name": "namespace",
          "description": "(Required, String) The name of the function namespace.",
          "args": []
        },
        {
          "name": "limits",
          "description": "(Optional, List of objects) A nested block to describe assigned limits.",
          "args": [
            {
              "name": "timeout",
              "description": "(Optional, Integer) The timeout limit to terminate the action, specified in milliseconds. Default value is `60000`.",
              "args": []
            },
            {
              "name": "memory",
              "description": "(Optional, Integer) The maximum memory for the action, specified in megabyte. Default value is `256`.",
              "args": []
            },
            {
              "name": "log_size",
              "description": "(Optional, Integer) The maximum log size for the action, specified in megabyte. Default value is `10`.",
              "args": []
            }
          ]
        },
        {
          "name": "exec",
          "description": "(Required, List of objects) A nested block to describe executable binaries.",
          "args": [
            {
              "name": "image",
              "description": "(Optional, String) When using the `blackbox` executable, the name of the container image name.        **NOTE**: Conflicts with `exec.components`, `exec.code`.",
              "args": []
            },
            {
              "name": "init",
              "description": "(Optional, String) When using `nodejs`, the optional archive reference.        **NOTE**: Conflicts with `exec.components`, `exec.image`.",
              "args": []
            },
            {
              "name": "code",
              "description": "(Optional, String) When not using the `blackbox` executable, the code to execute.       **NOTE**: Conflicts with `exec.components`, `exec.image`.",
              "args": []
            },
            {
              "name": "kind",
              "description": "(Required, String) The type of action. You can find supported kinds in the [IBM Cloud Functions Docs](/docs/openwhisk?topic=openwhisk-runtimes).",
              "args": []
            },
            {
              "name": "main",
              "description": "(Optional, String) The name of the action entry point (function or fully-qualified method name, when applicable).       **NOTE**: Conflicts with `exec.components`, `exec.image`.",
              "args": []
            },
            {
              "name": "components",
              "description": "(Optional, String) The list of fully qualified actions. **NOTE**: Conflicts with `exec.code`, `exec.image`.",
              "args": []
            }
          ]
        },
        {
          "name": "publish",
          "description": "(Optional, Boolean) Action visibility.",
          "args": []
        },
        {
          "name": "user_defined_annotations",
          "description": "(Optional, String) Annotations defined in key value format.",
          "args": []
        },
        {
          "name": "user_defined_parameters",
          "description": "(Optional, String) Parameters defined in key value format. Parameter bindings included in the context passed to the action. Cloud Function backend/API.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The ID of the new action.",
          "args": []
        },
        {
          "name": "namespace",
          "description": "The name of the function namespace.",
          "args": []
        },
        {
          "name": "version",
          "description": "Semantic version of the item.",
          "args": []
        },
        {
          "name": "annotations",
          "description": "All annotations to describe the action, including those set by you or by IBM Cloud Functions.",
          "args": []
        },
        {
          "name": "parameters",
          "description": "All parameters passed to the action when the action is invoked, including those set by you or by the IBM Cloud Functions.",
          "args": []
        },
        {
          "name": "action_id",
          "description": "The action ID.",
          "args": []
        },
        {
          "name": "target_endpoint_url",
          "description": "The target endpoint URL of the action.",
          "args": []
        }
      ]
    },
    "ibm_function_namespace": {
      "name": "ibm_function_namespace",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Functions resources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the namespace.",
          "args": []
        },
        {
          "name": "description",
          "description": "(Optional, String) The description of the namespace.",
          "args": []
        },
        {
          "name": "resource_group_id",
          "description": "(Required, String) The ID of the resource group.  You can retrieve the value from data source `ibm_resource_group`.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The ID of the new namespace.",
          "args": []
        },
        {
          "name": "location",
          "description": "Target locations of the namespace.",
          "args": []
        }
      ]
    },
    "ibm_function_package": {
      "name": "ibm_function_package",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Functions resources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the package.",
          "args": []
        },
        {
          "name": "namespace",
          "description": "(Required, String) The name of the function namespace.",
          "args": []
        },
        {
          "name": "publish",
          "description": "(Optional, Boolean) Package visibility.",
          "args": []
        },
        {
          "name": "user_defined_annotations",
          "description": "(Optional, String) Annotations defined in key value format.",
          "args": []
        },
        {
          "name": "user_defined_parameters",
          "description": "(Optional, String) Parameters defined in key value format. Parameter bindings included in the context passed to the package.",
          "args": []
        },
        {
          "name": "bind_package_name",
          "description": "(Optional, String) Name of package to be bound.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The ID of the new package.",
          "args": []
        },
        {
          "name": "namespace",
          "description": "The name of the function namespace.",
          "args": []
        },
        {
          "name": "version",
          "description": "Semantic version of the item.",
          "args": []
        },
        {
          "name": "annotations",
          "description": "All annotations to describe the package, including those set by you or by IBM Cloud Functions.",
          "args": []
        },
        {
          "name": "parameters",
          "description": "All parameters passed to the package, including those set by you or by IBM Cloud Functions.### Import`ibm_function_package` can be imported by using the ID. For example, ```$ terraform import ibm_function_package.sample hello```",
          "args": []
        },
        {
          "name": "package_id",
          "description": "The package ID.",
          "args": []
        }
      ]
    },
    "ibm_function_rule": {
      "name": "ibm_function_rule",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Functions resources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the rule.",
          "args": []
        },
        {
          "name": "namespace",
          "description": "(Required, String) The name of the function namespace.",
          "args": []
        },
        {
          "name": "trigger_name",
          "description": "(Required, String) The name of the trigger.",
          "args": []
        },
        {
          "name": "action_name",
          "description": "(Required, String) The name of the action.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The ID of the new rule.",
          "args": []
        },
        {
          "name": "namespace",
          "description": "The name of the function namespace.",
          "args": []
        },
        {
          "name": "publish",
          "description": "Rule visibility.",
          "args": []
        },
        {
          "name": "version",
          "description": "Semantic version of the item.",
          "args": []
        },
        {
          "name": "status",
          "description": "The status of the rule.",
          "args": []
        },
        {
          "name": "rule_id",
          "description": "The rule ID.",
          "args": []
        }
      ]
    },
    "ibm_function_trigger": {
      "name": "ibm_function_trigger",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Functions resources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the trigger.",
          "args": []
        },
        {
          "name": "namespace",
          "description": "(Required, String) The name of the function namespace.",
          "args": []
        },
        {
          "name": "feed",
          "description": "(Optional, List) A nested block to describe the feed.",
          "args": [
            {
              "name": "name",
              "description": "(Required, String) Trigger feed `ACTION_NAME`.",
              "args": []
            },
            {
              "name": "parameters",
              "description": "(Optional, String) Parameters definitions in key value format. Parameter bindings are included in the context and passed when the action is invoked.",
              "args": []
            }
          ]
        },
        {
          "name": "user_defined_annotations",
          "description": "(Optional, String) Annotation definitions in key value format.",
          "args": []
        },
        {
          "name": "user_defined_parameters",
          "description": "(Optional, String) Parameters definitions in key value format. Parameter bindings are included in the context and passed to the trigger.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The ID of the new trigger.",
          "args": []
        },
        {
          "name": "namespace",
          "description": "The name of the function namespace.",
          "args": []
        },
        {
          "name": "publish",
          "description": "Trigger visibility.",
          "args": []
        },
        {
          "name": "version",
          "description": "Semantic version of the item.",
          "args": []
        },
        {
          "name": "annotations",
          "description": "All annotations to describe the trigger, including those set by you or by IBM Cloud Functions.",
          "args": []
        },
        {
          "name": "parameters",
          "description": "All parameters passed to the trigger, including those set by you or by IBM Cloud Functions.",
          "args": []
        },
        {
          "name": "trigger_id",
          "description": "The trigger ID.",
          "args": []
        }
      ]
    },
    "ibm_hardware_firewall_shared": {
      "name": "ibm_hardware_firewall_shared",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure resources",
      "args": [],
      "attrs": []
    },
    "ibm_iam_access_group": {
      "name": "ibm_iam_access_group",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Identity & Access (IAM) resources",
      "args": [
        {
          "name": "description",
          "description": "(Optional, String) The description of the access group.",
          "args": []
        },
        {
          "name": "name",
          "description": "(Required, String) The name of the access group.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of strings) The list of tags that you want to associated with your access group.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the access group.",
          "args": []
        },
        {
          "name": "version",
          "description": "The version of the access group.",
          "args": []
        }
      ]
    },
    "ibm_iam_access_group_dynamic_rule": {
      "name": "ibm_iam_access_group_dynamic_rule",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Identity & Access (IAM) resources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the dynamic rule for the IAM access group.",
          "args": []
        },
        {
          "name": "access_group_id",
          "description": "(Required, String) The ID of the access group.",
          "args": []
        },
        {
          "name": "expiration",
          "description": "(Required, Integer) The number of hours that authenticated users can work in IBM Cloud before they must refresh their access. This value must be between 1 and 24.",
          "args": []
        },
        {
          "name": "identity_provider",
          "description": "(Required, String) Enter the URI for your identity provider. This is the SAML `entity ID` field, which is sometimes referred to as the issuer ID, for the identity provider as part of the federation configuration for onboarding with IBMid. For example, `https://idp.example.org/SAML2`.",
          "args": []
        },
        {
          "name": "conditions",
          "description": "(Required, List of rule conditions) A list of conditions that the rule must satisfy.",
          "args": [
            {
              "name": "claim",
              "description": "(Required, String) The key value to evaluate the condition against. The key that you enter depends on what key-value pairs your identity provider provides. For example, your identity provider might include a key that is named `blueGroups` and that holds all the user groups that have access. To apply a condition for a specific user group within the `blueGroups` key, you specify `blueGroups` as your claim and add the value that you are looking for in `conditions.value`.",
              "args": []
            },
            {
              "name": "operator",
              "description": "(Required, String) The operation to perform on the claim. Supported values are `EQUALS`, `EQUALS_IGNORE_CASE`, `IN`, `NOT_EQUALS_IGNORE_CASE`, `NOT_EQUALS`, and `CONTAINS`.",
              "args": []
            },
            {
              "name": "value",
              "description": "(Required, String) The value that the claim is compared by using the `conditions.operator`.",
              "args": []
            }
          ]
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the dynamic rule. The ID is composed of `<access_group_ID>/<rule_ID>`.",
          "args": []
        },
        {
          "name": "rule_id",
          "description": "The ID of the rule.",
          "args": []
        }
      ]
    },
    "ibm_iam_access_group_members": {
      "name": "ibm_iam_access_group_members",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Identity & Access (IAM) resources",
      "args": [
        {
          "name": "access_group_id",
          "description": "(Required, String) The ID of the access group.",
          "args": []
        },
        {
          "name": "ibm_ids",
          "description": "(Optional, Array of strings) A list of IBM IDs that you want to add to or remove from the access group.",
          "args": []
        },
        {
          "name": "iam_service_ids",
          "description": "(Optional, Array of strings) A list of service IDS that you want to add to or remove from the access group.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the access group members. The ID is returned in the format `<iam_access_group_ID>/<random_ID>`.",
          "args": []
        },
        {
          "name": "members",
          "description": "A list of members that are included in the access group.",
          "args": [
            {
              "name": "iam_id",
              "description": "The IBMid or service ID of the member.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_iam_access_group_policy": {
      "name": "ibm_iam_access_group_policy",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Identity & Access (IAM) resources",
      "args": [
        {
          "name": "access_group_id",
          "description": "(Required, String) The ID of the access group.",
          "args": []
        },
        {
          "name": "roles",
          "description": "(Required, List) A comma separated list of roles. Valid roles are `Writer`, `Reader`, `Manager`, `Administrator`, `Operator`, `Viewer`, and `Editor`.",
          "args": []
        },
        {
          "name": "resources",
          "description": "(Optional, List) A nested block describes the resource of this policy.",
          "args": [
            {
              "name": "service",
              "description": "(Optional, String) The service name that you want to include in your policy definition. For account management services, you can find supported values in the [documentation](/docs/account?topic=account-account-services#api-acct-mgmt). For other services, run the `ibmcloud catalog service-marketplace` command and retrieve the value from the **Name** column of your command line output.",
              "args": []
            },
            {
              "name": "resource_instance_id",
              "description": "(Optional, String) The ID of resource instance of the policy definition.",
              "args": []
            },
            {
              "name": "region",
              "description": "(Optional, String) The region of the policy definition.",
              "args": []
            },
            {
              "name": "resource_type",
              "description": "(Optional, String) The resource type of the policy definition.",
              "args": []
            },
            {
              "name": "resource",
              "description": "(Optional, String) The resource of the policy definition.",
              "args": []
            },
            {
              "name": "resource_group_id",
              "description": "(Optional, String) The ID of the resource group. To retrieve the ID, run `ibmcloud resource groups` or use the `ibm_resource_group` data source.",
              "args": []
            },
            {
              "name": "attributes",
              "description": "(Optional, Map) Set resource attributes in the form of `name=value,name=value`.  If you set this option, do not specify `account_management` at the same time.",
              "args": []
            }
          ]
        },
        {
          "name": "account_management",
          "description": "(Optional, Boolean) Gives access to all account management services if set to `true`. Default value `false`. If you set this option, do not specify `resources` at the same time.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of Strings) A list of tags that you want to add to the access group policy. Tags are managed locally and not stored on the IBM Cloud Service Endpoint at this moment.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the access group policy. The ID is composed of `<access_group_id>/<access_group_policy_id>`.",
          "args": []
        },
        {
          "name": "version",
          "description": "The version of the access group policy.",
          "args": []
        }
      ]
    },
    "ibm_iam_authorization_policy": {
      "name": "ibm_iam_authorization_policy",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Identity & Access (IAM) resources",
      "args": [
        {
          "name": "source_service_name",
          "description": "(Required, String) The source service name.",
          "args": []
        },
        {
          "name": "target_service_name",
          "description": "(Required, String) The target service name.",
          "args": []
        },
        {
          "name": "roles",
          "description": "(Required, List) A comma separated list of roles.",
          "args": []
        },
        {
          "name": "source_resource_instance_id",
          "description": "(Optional, String) The source resource instance ID.",
          "args": []
        },
        {
          "name": "target_resource_instance_id",
          "description": "(Optional, String) The target resource instance ID.",
          "args": []
        },
        {
          "name": "source_resource_type",
          "description": "(Optional, String) The resource type of the source service.",
          "args": []
        },
        {
          "name": "target_resource_type",
          "description": "(Optional, String) The resource type of the target service.",
          "args": []
        },
        {
          "name": "source_resource_group_id",
          "description": "(Optional, String) The ID of the resource group from which you want to allow access to IBM Cloud services in another resource group.",
          "args": []
        },
        {
          "name": "target_resource_group_id",
          "description": "(Optional, String) The ID of the resource group that holds the IBM Cloud services that you want to allow access to.",
          "args": []
        },
        {
          "name": "source_service_account",
          "description": "(Optional, String) The GUID of the account where the source service is provisioned.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the authorization policy.",
          "args": []
        },
        {
          "name": "version",
          "description": "The version of the authorization policy.",
          "args": []
        }
      ]
    },
    "ibm_iam_authorization_policy_detach": {
      "name": "ibm_iam_authorization_policy_detach",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Identity & Access (IAM) resources",
      "args": [
        {
          "name": "authorization_policy_id",
          "description": "(Required, String) The authorization policy ID.",
          "args": []
        }
      ],
      "attrs": []
    },
    "ibm_iam_custom_role": {
      "name": "ibm_iam_custom_role",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Identity & Access (IAM) resources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the custom role.",
          "args": []
        },
        {
          "name": "display_name",
          "description": "(Required, String) The display name of the custom role.",
          "args": []
        },
        {
          "name": "description",
          "description": "(Optional, String) The description of the custom role. Make sure to include information about the level of access this role assignment gives a user.",
          "args": []
        },
        {
          "name": "actions",
          "description": "(Required, Array of strings) A list of action IDs that you want to add to your custom role. The action IDs vary by service. To retrieve supported action IDs, follow the [documentation](/docs/account?topic=account-custom-roles) to create the custom role from the UI.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The ID of the custom role.",
          "args": []
        },
        {
          "name": "crn",
          "description": "The CRN of the custom role.",
          "args": []
        }
      ]
    },
    "ibm_iam_service_api_key": {
      "name": "ibm_iam_service_api_key",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Identity & Access (IAM) resources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the service API key.",
          "args": []
        },
        {
          "name": "description",
          "description": "(Optional, String) The description of the service API key.",
          "args": []
        },
        {
          "name": "iam_service_id",
          "description": "(Required, String) The IAM ID of the service.",
          "args": []
        },
        {
          "name": "apikey",
          "description": "(Optional, String) The API key value. This property only contains the API key value for the following cases: `create an API key`, `update a Service API key that stores the API key value as retrievable`, or `get a service API key that stores the API key value as retrievable`. All other operations do not return the API key value. For example, all user API key related operations, except for create, do not contain the API key value.",
          "args": []
        },
        {
          "name": "locked",
          "description": "(Optional, Bool) The API key cannot be changed if set to `true`.",
          "args": []
        },
        {
          "name": "store_value",
          "description": "(Optional, Bool) The boolean value whether API key value is retrievable in the future.",
          "args": []
        },
        {
          "name": "file",
          "description": "(Optional, String) The file name where API key is to be stored.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "account_id",
          "description": "The account Id of the API key.",
          "args": []
        },
        {
          "name": "entity_tag ",
          "description": "The version or entity tag of the service API key.",
          "args": []
        },
        {
          "name": "id",
          "description": "The unique identifier of the API key.",
          "args": []
        },
        {
          "name": "crn",
          "description": "The `CRN` of the service API key.",
          "args": []
        },
        {
          "name": "created_by",
          "description": "The IAM ID of the service that is created by the API key.",
          "args": []
        },
        {
          "name": "created_at",
          "description": "The date and time service API key was created.",
          "args": []
        },
        {
          "name": "modified_at",
          "description": "The date and time service API key was modified.",
          "args": []
        }
      ]
    },
    "ibm_iam_service_id": {
      "name": "ibm_iam_service_id",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Identity & Access (IAM) resources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the service ID.",
          "args": []
        },
        {
          "name": "description",
          "description": "(Optional, String) The description of the service ID.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of strings) A list of tags that you want to add to the service ID. The tags are managed locally and not stored on the IBM Cloud Service Endpoint at this moment.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "crn",
          "description": "The CRN of the service ID.",
          "args": []
        },
        {
          "name": "iam_id",
          "description": "The IAM ID of the service ID.",
          "args": []
        },
        {
          "name": "id",
          "description": "The unique identifier of the service ID.",
          "args": []
        },
        {
          "name": "version",
          "description": "The version of the service ID.",
          "args": []
        }
      ]
    },
    "ibm_iam_service_policy": {
      "name": "ibm_iam_service_policy",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Identity & Access (IAM) resources",
      "args": [
        {
          "name": "iam_service_id",
          "description": "(Required, String) The UUID of the service ID.",
          "args": []
        },
        {
          "name": "roles",
          "description": "(Required, List) A comma separated list of roles. Valid roles are `Writer`, `Reader`, `Manager`, `Administrator`, `Operator`, `Viewer`, and `Editor`.",
          "args": []
        },
        {
          "name": "resources",
          "description": "(Optional, List of objects) A nested block describes the resource of this policy.",
          "args": [
            {
              "name": "service",
              "description": "(Optional, String) The service name of the policy definition. You can retrieve the value by running the `ibmcloud catalog service-marketplace` or `ibmcloud catalog search`.",
              "args": []
            },
            {
              "name": "resource_instance_id",
              "description": "(Optional, String) The ID of the resource instance of the policy definition.",
              "args": []
            },
            {
              "name": "region",
              "description": "(Optional, String) The region of the policy definition.",
              "args": []
            },
            {
              "name": "resource_type",
              "description": "(Optional, String) The resource type of the policy definition.",
              "args": []
            },
            {
              "name": "resource",
              "description": "(Optional, String) The resource of the policy definition.",
              "args": []
            },
            {
              "name": "resource_group_id",
              "description": "(Optional, String) The ID of the resource group. To retrieve the value, run `ibmcloud resource groups` or use the `ibm_resource_group` data source.",
              "args": []
            },
            {
              "name": "attributes",
              "description": "(Optional, Map) A set of resource attributes in the format `name=value,name=value`. If you set this option, do not specify `account_management` at the same time.",
              "args": []
            }
          ]
        },
        {
          "name": "account_management",
          "description": "(Optional, Boolean) Gives access to all account management services if set to `true`. Default value `false`. If you set this option, do not set `resources` at the same time.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of strings) A list of tags that are associated with the service policy instance.  Tags are managed locally and not stored on the IBM Cloud Service Endpoint at this moment.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the service policy. The ID is composed of `<iam_service_id>/<service_policy_id>`.",
          "args": []
        },
        {
          "name": "version",
          "description": "The version of the service policy.",
          "args": []
        }
      ]
    },
    "ibm_iam_user_invite": {
      "name": "ibm_iam_user_invite",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Identity & Access (IAM) resources",
      "args": [
        {
          "name": "users",
          "description": "(Required, List) A comma separated list of user email IDs.",
          "args": []
        },
        {
          "name": "access_groups",
          "description": "(Optional, List) A comma separated list of access group IDs.",
          "args": []
        },
        {
          "name": "classic_infra_roles",
          "description": "(Optional, Map) A nested block describes the classic infrastructure roles for the inviting users. </br></br>**Note**: If you have an IBM Cloud Lite account, you cannot set classic infrastructure roles. For more information, about Lite accounts, see [What's available?](/docs/account?topic=account-accounts#lite-account-features).",
          "args": [
            {
              "name": "permissions",
              "description": "(Optional, List) A comma separated list of classic infrastructure permissions.",
              "args": []
            },
            {
              "name": "permission_set",
              "description": "(Optional, String) The permission set to be applied. The valid permission sets are `noacess`, `viewonly`, `basicuser`, and `superuser`.",
              "args": []
            }
          ]
        },
        {
          "name": "iam_policy",
          "description": "(Optional, List) A nested block describes the IAM policies for invited users.",
          "args": [
            {
              "name": "resources",
              "description": "(Optional, List of objects) A nested block describes the resource of this policy.",
              "args": [
                {
                  "name": "service",
                  "description": "(Optional, String) The service name of the policy definition. You can retrieve the value by running the `ibmcloud catalog service-marketplace` or `ibmcloud catalog search`.",
                  "args": []
                },
                {
                  "name": "resource_instance_id",
                  "description": "(Optional, String) The ID of the resource instance of the policy definition.",
                  "args": []
                },
                {
                  "name": "region",
                  "description": "(Optional, String) The region of the policy definition.",
                  "args": []
                },
                {
                  "name": "resource_type",
                  "description": "(Optional, String) The resource type of the policy definition.",
                  "args": []
                },
                {
                  "name": "resource",
                  "description": "(Optional, String) The resource of the policy definition.",
                  "args": []
                },
                {
                  "name": "resource_group_id",
                  "description": "(Optional, String) The ID of the resource group. To retrieve the value, run `ibmcloud resource groups` or use the `ibm_resource_group` data source.",
                  "args": []
                },
                {
                  "name": "attributes",
                  "description": "(Optional, Map) A set of resource attributes in the format `name=value,name=value`. If you set this option, do not specify `account_management` at the same time.",
                  "args": []
                }
              ]
            },
            {
              "name": "account_management",
              "description": "(Optional, Boolean) Gives access to all account management services if set to `true`. Default value is `false`. If you set this option, do not set `resources` at the same time.",
              "args": []
            }
          ]
        },
        {
          "name": "iam_policy_roles",
          "description": "(Required, List) A comma separated list of roles. Valid roles are `Writer`, `Reader`, `Manager`, `Administrator`, `Operator`, `Viewer`, and `Editor`.",
          "args": []
        },
        {
          "name": "cloud_foundry_roles",
          "description": "(Optional, List) A nested block describes the cloud foundry roles of inviting user.",
          "args": [
            {
              "name": "organization_guid",
              "description": "(Required, String) The ID of the Cloud Foundry organization.",
              "args": []
            },
            {
              "name": "org_roles",
              "description": "(Required, List) The organization roles that are assigned to invited user. The supported roles are `Manager`, `Auditor`, `BillingManager`.",
              "args": []
            },
            {
              "name": "spaces",
              "description": "(Optional, List) A nested block describes the Cloud Foundry space roles and space details.",
              "args": [
                {
                  "name": "space_guid",
                  "description": "(Required, String) The ID of the Cloud Foundry space.",
                  "args": []
                },
                {
                  "name": "space_roles",
                  "description": "(Required, List) The space roles that you want to assign to the invited user. The supported space roles are `Manager`, `Developer`, `Auditor`.",
                  "args": []
                }
              ]
            }
          ]
        }
      ],
      "attrs": [
        {
          "name": "number_of_invited_users",
          "description": "Number of users invited to a particular account.",
          "args": []
        },
        {
          "name": "invited_users",
          "description": "List of invited users. Nested invited_users block have the following structure.",
          "args": [
            {
              "name": "user_id",
              "description": "The Email ID of the member.",
              "args": []
            },
            {
              "name": "user_policies",
              "description": "List of policies associated to a particular user. Nested user_policies block has following structure.",
              "args": [
                {
                  "name": "id",
                  "description": "The policy ID.",
                  "args": []
                },
                {
                  "name": "roles",
                  "description": "Comma separated list of the roles.",
                  "args": []
                },
                {
                  "name": "resources",
                  "description": "A nested block describes the resource of the policy. Nested resources block have the following structure.",
                  "args": [
                    {
                      "name": "service",
                      "description": "Service name of the policy definition.",
                      "args": []
                    },
                    {
                      "name": "resource_instance_id",
                      "description": "The resource instance ID of the policy definition.",
                      "args": []
                    },
                    {
                      "name": "region",
                      "description": "The region of the policy definition.",
                      "args": []
                    },
                    {
                      "name": "resource_type",
                      "description": "The resource type of the policy definition.",
                      "args": []
                    },
                    {
                      "name": "resource",
                      "description": "The resource of the policy definition.",
                      "args": []
                    },
                    {
                      "name": "resource_group_id",
                      "description": "The ID of the resource group.",
                      "args": []
                    },
                    {
                      "name": "attributes",
                      "description": "The set of resource attributes.",
                      "args": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "access_groups",
          "description": "The lock down ID.",
          "args": [
            {
              "name": "name",
              "description": "The name of the access group.",
              "args": []
            },
            {
              "name": "policies",
              "description": "The access group policies of invited user. Nested policies block have the following structure.",
              "args": [
                {
                  "name": "id",
                  "description": "The policy ID.",
                  "args": []
                },
                {
                  "name": "roles",
                  "description": "The roles associated to the policy.",
                  "args": []
                },
                {
                  "name": "resources",
                  "description": "A nested block describes the resource of the policy. Nested resources block have the following structure.",
                  "args": [
                    {
                      "name": "service",
                      "description": "Service name of the policy definition.",
                      "args": []
                    },
                    {
                      "name": "resource_instance_id",
                      "description": "The resource instance ID of the policy definition.",
                      "args": []
                    },
                    {
                      "name": "region",
                      "description": "The region of the policy definition.",
                      "args": []
                    },
                    {
                      "name": "resource_type",
                      "description": "The resource type of the policy definition.",
                      "args": []
                    },
                    {
                      "name": "resource",
                      "description": "The resource of the policy definition.",
                      "args": []
                    },
                    {
                      "name": "resource_group_id",
                      "description": "The ID of the resource group.",
                      "args": []
                    },
                    {
                      "name": "attributes",
                      "description": "The set of resource attributes.",
                      "args": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    "ibm_iam_user_policy": {
      "name": "ibm_iam_user_policy",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Identity & Access (IAM) resources",
      "args": [
        {
          "name": "ibm_id",
          "description": "(Required, String) The IBMid or email address of the user.",
          "args": []
        },
        {
          "name": "roles",
          "description": "(Required, List) A comma separated list of roles. Valid roles are `Writer`, `Reader`, `Manager`, `Administrator`, `Operator`, `Viewer`, and `Editor`.",
          "args": []
        },
        {
          "name": "resources",
          "description": "(Optional, List of objects) A nested block describes the resource of this policy.",
          "args": [
            {
              "name": "service",
              "description": "(Optional, String) The service name of the policy definition. You can retrieve the value by running the `ibmcloud catalog service-marketplace` or `ibmcloud catalog search`.",
              "args": []
            },
            {
              "name": "resource_instance_id",
              "description": "(Optional, String) The ID of the resource instance of the policy definition.",
              "args": []
            },
            {
              "name": "region",
              "description": "(Optional, String) The region of the policy definition.",
              "args": []
            },
            {
              "name": "resource_type",
              "description": "(Optional, String) The resource type of the policy definition.",
              "args": []
            },
            {
              "name": "resource",
              "description": "(Optional, String) The resource of the policy definition.",
              "args": []
            },
            {
              "name": "resource_group_id",
              "description": "(Optional, String) The ID of the resource group. To retrieve the value, run `ibmcloud resource groups` or use the `ibm_resource_group` data source.",
              "args": []
            },
            {
              "name": "attributes",
              "description": "(Optional, Map) A set of resource attributes in the format `name=value,name=value`. If you set this option, do not specify `account_management` at the same time.",
              "args": []
            }
          ]
        },
        {
          "name": "account_management",
          "description": "(Optional, Boolean) Gives access to all account management services if set to `true`. Default value `false`. If you set this option, do not set `resources` at the same time.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of strings) A list of tags that are associated with the service policy instance.  Tags are managed locally and not stored on the IBM Cloud Service Endpoint at this moment.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the user policy. The ID is composed of `<ibm_id>/<user_policy_id>`.",
          "args": []
        },
        {
          "name": "version",
          "description": "The version of the user policy.",
          "args": []
        }
      ]
    },
    "ibm_iam_user_settings": {
      "name": "ibm_iam_user_settings",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Identity & Access (IAM) resources",
      "args": [
        {
          "name": "iam_id",
          "description": "(Required, String) The users IAM or email ID.",
          "args": []
        },
        {
          "name": "allowed_ip_addresses",
          "description": "(Optional, List) Lists the IP addresses in common separated format.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the IAM user setting as `account_id`/`iam_id`.",
          "args": []
        }
      ]
    },
    "ibm_ipsec_vpn": {
      "name": "ibm_ipsec_vpn",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure resources",
      "args": [
        {
          "name": "datacenter",
          "description": "(Required, String) The data center in which the IPSec VPN resides.",
          "args": []
        },
        {
          "name": "phase_one",
          "description": "(Optional, Map) The key-value parameters for phase One negotiation.",
          "args": []
        },
        {
          "name": "phase_two",
          "description": "(Optional, Map) The key-value parameters for phase Two negotiation.",
          "args": []
        },
        {
          "name": "address_translation",
          "description": "(Optional, Map) The key-value parameters for creating an address translation.",
          "args": []
        },
        {
          "name": "Preshared_Key",
          "description": "(Optional, String) A key used so that peers authenticate each other. This key is hashed by using the phase one encryption and phase one authentication.",
          "args": []
        },
        {
          "name": "internal_subnet_id",
          "description": "(Optional, Map) The ID of the network device on which the VPN configurations have to be applied. When a private subnet is associated, the network tunnel will allow the customer (remote) network to access the private subnet.",
          "args": []
        },
        {
          "name": "remote_subnet",
          "description": "(Optional, Map) The key-value parameters for creating a customer subnet.",
          "args": []
        },
        {
          "name": "service_subnet_id",
          "description": "(Optional, String) The ID of the service subnet which is to be associated to the network tunnel. When a service subnet is associated, a network tunnel allows the customer (remote) network to communicate with the private and service subnets on the SoftLayer network which are on the other end of this network tunnel. Service subnets provide access to SoftLayer services such as the customer management portal and the SoftLayer API.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The computed ID of the IPSec VPN device that is created.",
          "args": []
        },
        {
          "name": "name",
          "description": "The computed name of the IPSec VPN device that is created.",
          "args": []
        },
        {
          "name": "internal_peer_ip_address",
          "description": "The local end of a network tunnel. This end of the network tunnel resides on the SoftLayer networks and allows access to remote end of the tunnel to subnets on SoftLayer networks.",
          "args": []
        }
      ]
    },
    "ibm_is_floating_ip": {
      "name": "ibm_is_floating_ip",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure resources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) Enter a name for the floating IP address.",
          "args": []
        },
        {
          "name": "target",
          "description": "(Optional, String) Enter the ID of the network interface that you want to use to allocate the IP address. If you specify this option, do not specify `zone` at the same time.",
          "args": []
        },
        {
          "name": "zone",
          "description": "(Optional, String) Enter the name of the zone where you want to create the floating IP address. To list available zones, run `ibmcloud is zones`. If you specify this option, do not specify `target` at the same time.",
          "args": []
        },
        {
          "name": "resource_group",
          "description": "(Optional, String) The resource group ID where you want to create the floating IP.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of strings) Enter any tags that you want to associate with your VPC. Tags might help you find your VPC more easily after it is created. Separate multiple tags with a comma (`,`).",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "address",
          "description": "The floating IP address that was created.",
          "args": []
        },
        {
          "name": "id",
          "description": "The unique identifier of the floating IP address.",
          "args": []
        },
        {
          "name": "status",
          "description": "The provisioning status of the floating IP address.",
          "args": []
        }
      ]
    },
    "ibm_is_flow_log": {
      "name": "ibm_is_flow_log",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure resources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The unique user-defined name for the flow log collector.",
          "args": []
        },
        {
          "name": "target",
          "description": "(Required, String) The ID of the target to collect flow logs. If the target is an instance, subnet, or VPC, flow logs is not collected for any network interfaces within the target that are more specific flow log collector.",
          "args": []
        },
        {
          "name": "storage_bucket",
          "description": "(Required, String) The name of the IBM Cloud Object Storage bucket where the collected flows will be logged. The bucket must exist and an IAM service authorization must grant IBM Cloud flow logs resources of VPC infrastructure services writer access to the bucket.",
          "args": []
        },
        {
          "name": "active",
          "description": "(Optional, String) Indicates whether the collector is active. If `false`, this collector is created in inactive mode. Default value is true.",
          "args": []
        },
        {
          "name": "resource_group",
          "description": "(Optional, String) The resource group ID where the flow log is created.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of Strings) The tags associated with the flow log.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "created_at",
          "description": "The date and time that the flow log collector created.",
          "args": []
        },
        {
          "name": "crn",
          "description": "The CRN of the flow log collector.",
          "args": []
        },
        {
          "name": "href",
          "description": "The URL of the flow log collector.",
          "args": []
        },
        {
          "name": "id",
          "description": "The unique identifier of the flow log collector.",
          "args": []
        },
        {
          "name": "lifecycle_state",
          "description": "The lifecycle state of the flow log collector.",
          "args": []
        },
        {
          "name": "name",
          "description": "The user-defined name of the flow log collector.",
          "args": []
        },
        {
          "name": "vpc",
          "description": "The VPC of the flow log collector that is associated.",
          "args": []
        }
      ]
    },
    "ibm_is_ike_policy": {
      "name": "ibm_is_ike_policy",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure resources",
      "args": [
        {
          "name": "authentication_algorithm",
          "description": "(Required, String) Enter the algorithm that you want to use to authenticate `IPSec` peers. Available options are `md5`, `sha1`, or `sha256`.",
          "args": []
        },
        {
          "name": "dh_group",
          "description": "(Required, Integer) Enter the Diffie-Hellman group that you want to use for the encryption key. Available options are `2`, `5`, or `14`.",
          "args": []
        },
        {
          "name": "encryption_algorithm",
          "description": "(Required, String) Enter the algorithm that you want to use to encrypt data. Available options are: `triple_des`, `aes128`, or `aes256`.",
          "args": []
        },
        {
          "name": "ike_version",
          "description": "(Optional, Integer) Enter the IKE protocol version that you want to use. Available options are `1`, or `2`.",
          "args": []
        },
        {
          "name": "key_lifetime",
          "description": "(Optional, Integer) Enter the time in seconds that your encryption key can be used before it expires. You must enter a number between 300 and 86400. If you do not specify this option, 28800 seconds is used.",
          "args": []
        },
        {
          "name": "name",
          "description": "(Required, String) Enter a name for your IKE policy.",
          "args": []
        },
        {
          "name": "resource_group",
          "description": "(Optional, String) Enter the ID of the resource group where you want to create the IKE policy. To list available resource groups, run `ibmcloud resource groups`. If you do not specify a resource group, the IKE policy is created in the `default` resource group.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "href",
          "description": "The canonical URL that was assigned to your IKE policy.",
          "args": []
        },
        {
          "name": "id",
          "description": "The unique identifier of the IKE policy that you created.",
          "args": []
        },
        {
          "name": "negotiation_mode",
          "description": "The negotiation mode that was set for your IKE policy. Only `main` is supported.",
          "args": []
        },
        {
          "name": "vpn_connections",
          "description": "A collection of VPN connections that use the IKE policy. Every connection is listed with a VPC connection `name`, `id`, and `canonical URL`.",
          "args": []
        }
      ]
    },
    "ibm_is_image": {
      "name": "ibm_is_image",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure resources",
      "args": [
        {
          "name": "encrypted_data_key",
          "description": "(Optional, String) A base64-encoded, encrypted representation of the key that was used to encrypt the data for this image.",
          "args": []
        },
        {
          "name": "encryption_key",
          "description": "(Optional, String) The CRN of the Key Protect Root Key or Hyper Protect Crypto Service Root Key for this resource.",
          "args": []
        },
        {
          "name": "href",
          "description": "(Required, String) The path of an image to be uploaded.",
          "args": []
        },
        {
          "name": "name",
          "description": "(Required, String) The descriptive name used to identify an image.",
          "args": []
        },
        {
          "name": "operating_system",
          "description": "(Required, String) Description of underlying OS of an image.",
          "args": []
        },
        {
          "name": "resource_group",
          "description": "(Optional, String) The resource group ID for this image.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of strings) A list of tags that you want to your image. Tags can help you find the image more easily later.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the image.",
          "args": []
        },
        {
          "name": "architecture",
          "description": "The processor architecture that this image is based on.",
          "args": []
        },
        {
          "name": "crn",
          "description": "The CRN for the image.",
          "args": []
        },
        {
          "name": "file",
          "description": "The file.",
          "args": []
        },
        {
          "name": "format",
          "description": "The format of an image.",
          "args": []
        },
        {
          "name": "resourceGroup",
          "description": "The resource group to which the image belongs to.",
          "args": []
        },
        {
          "name": "status",
          "description": "- The status of an image such as `corrupt`, or `available`.",
          "args": []
        },
        {
          "name": "visibility",
          "description": "The access scope of an image such as `private` or `public`.",
          "args": []
        },
        {
          "name": "encryption",
          "description": "The type of encryption used on the image.",
          "args": []
        }
      ]
    },
    "ibm_is_instance": {
      "name": "ibm_is_instance",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure resources",
      "args": [
        {
          "name": "auto_delete_volume",
          "description": "(Optional, Bool) If set to `true`, automatically deletes the volumes that are attached to an instance. **Note** Setting this argument can bring some inconsistency in the volume resource, as the volumes is destroyed along with instances.",
          "args": []
        },
        {
          "name": "boot_volume",
          "description": "(Optional, List) A list of boot volumes for an instance.",
          "args": [
            {
              "name": "name",
              "description": "(Optional, String) The name of the boot volume.",
              "args": []
            },
            {
              "name": "encryption",
              "description": "(Optional, String) The type of encryption to use for the boot volume.",
              "args": []
            }
          ]
        },
        {
          "name": "force_recovery_time",
          "description": "(Optional, Integer) Define timeout (in minutes), to force the is_instance to recover from a perpetual \"starting\" state, during provisioning. And to force the is_instance to recover from a perpetual \"stopping\" state, during removal of user access. **Note** The force_recovery_time is used to retry multiple times until timeout.",
          "args": []
        },
        {
          "name": "image",
          "description": "(Required, String) The ID of the virtual server image that you want to use. To list supported images, run `ibmcloud is images`.",
          "args": []
        },
        {
          "name": "keys",
          "description": "(Required, List) A comma-separated list of SSH keys that you want to add to your instance.",
          "args": []
        },
        {
          "name": "name",
          "description": "(Optional, String) The instance name.",
          "args": []
        },
        {
          "name": "network_interfaces",
          "description": "(Optional, List) A list of more network interfaces that are set up for the instance.",
          "args": [
            {
              "name": "name",
              "description": "(Optional, String) The name of the network interface.",
              "args": []
            },
            {
              "name": "subnet",
              "description": "(Required, String) The ID of the subnet.",
              "args": []
            },
            {
              "name": " security_groups",
              "description": "(Optional, List of strings) A comma separated list of security groups to add to the primary network interface.",
              "args": []
            },
            {
              "name": " allow_ip_spoofing",
              "description": "(Optional, Bool) Indicates whether IP spoofing is allowed on the interface. If `false`, IP spoofing is prevented on the interface. If `true`, IP spoofing is allowed on the interface.",
              "args": []
            }
          ]
        },
        {
          "name": "network_interface",
          "args": [
            {
              "name": " primary_ipv4_address",
              "description": "(Optional, String) The IPV4 address of the interface.",
              "args": []
            }
          ]
        },
        {
          "name": "primary_network_interface",
          "description": "(Required, List) A nested block describes the primary network interface of this instance. Only one primary network interface can be specified for an instance.",
          "args": [
            {
              "name": " name",
              "description": "(Optional, String) The name of the network interface.",
              "args": []
            },
            {
              "name": " primary_ipv4_address",
              "description": "(Optional, String) The IPV4 address of the interface.",
              "args": []
            },
            {
              "name": " subnet",
              "description": "(Required, String) The ID of the subnet.",
              "args": []
            },
            {
              "name": " security_groups",
              "description": "(Optional, List of strings) A comma separated list of security groups to add to the primary network interface.",
              "args": []
            },
            {
              "name": " allow_ip_spoofing",
              "description": "(Optional, Bool) Indicates whether IP spoofing is allowed on the interface. If `false`, IP spoofing is prevented on the interface. If `true`, IP spoofing is allowed on the interface.",
              "args": []
            }
          ]
        },
        {
          "name": "profile",
          "description": "(Required, String) The name of the profile that you want to use for your instance. To list supported profiles, run `ibmcloud is instance-profiles`.",
          "args": []
        },
        {
          "name": "resource_group",
          "description": "(Optional, String) The ID of the resource group where you want to create the instance.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of strings) A list of tags that you want to add to your instance. Tags can help you find your instance more easily later.",
          "args": []
        },
        {
          "name": "user_data",
          "description": "(Optional, String) User data to transfer to the instance.",
          "args": []
        },
        {
          "name": "volumes",
          "description": "(Optional, List) A comma separated list of volume IDs to attach to the instance.",
          "args": []
        },
        {
          "name": "vpc",
          "description": "(Required, String) The ID of the VPC where you want to create the instance.",
          "args": []
        },
        {
          "name": "zone",
          "description": "(Required, String) The name of the VPC zone where you want to create the instance.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The ID of the instance.",
          "args": []
        },
        {
          "name": "memory",
          "description": "The amount of memory that is allocated to the instance in gigabytes.",
          "args": []
        },
        {
          "name": "status",
          "description": "The status of the instance.",
          "args": []
        },
        {
          "name": "vcpu",
          "description": "A list of virtual CPUs that are allocated to the instance.",
          "args": [
            {
              "name": "architecture",
              "description": "The architecture of the CPU.",
              "args": []
            },
            {
              "name": "count",
              "description": "The number of virtual CPUS that are assigned to the instance.",
              "args": []
            }
          ]
        },
        {
          "name": "gpu",
          "description": "A list of GPUs that are assigned to the instance.",
          "args": [
            {
              "name": "cores",
              "description": "The number of cores of the GPU.",
              "args": []
            },
            {
              "name": "count",
              "description": "The count of the GPU.",
              "args": []
            },
            {
              "name": "manufacture",
              "description": "The manufacturer of the GPU.",
              "args": []
            },
            {
              "name": "memory",
              "description": "The amount of memory of the GPU in gigabytes.",
              "args": []
            },
            {
              "name": "model",
              "description": "The model of the GPU.",
              "args": []
            }
          ]
        },
        {
          "name": "primary_network_interface",
          "description": "A list of primary network interfaces that are attached to the instance.",
          "args": [
            {
              "name": "id",
              "description": "The ID of the primary network interface.",
              "args": []
            },
            {
              "name": "name",
              "description": "The name of the primary network interface.",
              "args": []
            },
            {
              "name": "security_groups",
              "description": "A list of security groups that are used in the primary network interface.",
              "args": []
            },
            {
              "name": "primary_ipv4_address",
              "description": "The primary IPv4 address.",
              "args": []
            },
            {
              "name": "allow_ip_spoofing",
              "description": "Indicates whether IP spoofing is allowed on the interface.",
              "args": []
            }
          ]
        },
        {
          "name": "network_interfaces",
          "description": "A list of more network interfaces that are attached to the instance.",
          "args": [
            {
              "name": "id",
              "description": "The ID of the network interface.",
              "args": []
            },
            {
              "name": "name",
              "description": "The name of the network interface.",
              "args": []
            },
            {
              "name": "subnet",
              "description": "The ID of the subnet.",
              "args": []
            },
            {
              "name": "security_groups",
              "description": "A list of security groups that are used in the network interface.",
              "args": []
            },
            {
              "name": "primary_ipv4_address",
              "description": "The primary IPv4 address.",
              "args": []
            }
          ]
        },
        {
          "name": "network_interface",
          "args": [
            {
              "name": "allow_ip_spoofing",
              "description": "Indicates whether IP spoofing is allowed on the interface.",
              "args": []
            }
          ]
        },
        {
          "name": "boot_volume",
          "description": "A list of boot volumes that the instance uses.",
          "args": [
            {
              "name": "name",
              "description": "The name of the boot volume.",
              "args": []
            },
            {
              "name": "size",
              "description": "The capacity of the volume in gigabytes.",
              "args": []
            },
            {
              "name": "iops",
              "description": "The number of input and output operations per second of the volume.",
              "args": []
            },
            {
              "name": "profile",
              "description": "The profile of the volume.",
              "args": []
            },
            {
              "name": "encryption",
              "description": "The type of encryption that is used for the boot volume.",
              "args": []
            }
          ]
        },
        {
          "name": "volume_attachments",
          "description": "A list of volume attachments for the instance.",
          "args": [
            {
              "name": "id",
              "description": "The ID of the volume attachment.",
              "args": []
            },
            {
              "name": "name",
              "description": "The name of the volume attachment.",
              "args": []
            },
            {
              "name": "volume_id",
              "description": "The ID of the volume that is used in the volume attachment.",
              "args": []
            },
            {
              "name": "volume_name",
              "description": "The name of the volume that is used in the volume attachment.",
              "args": []
            },
            {
              "name": "volume_crn",
              "description": "The CRN of the volume that is used in the volume attachment.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_is_instance_group": {
      "name": "ibm_is_instance_group",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure resources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The instance  group name.",
          "args": []
        },
        {
          "name": "instance_template",
          "description": "(Required, String) The ID of the instance template to create the instance group.",
          "args": []
        },
        {
          "name": "instance_count",
          "description": "(Optional, Integer) The number of instances to create in the instance group.",
          "args": []
        },
        {
          "name": "resource_group",
          "description": "(Optional, String) The resource group ID.",
          "args": []
        },
        {
          "name": "subnets",
          "description": "(Required, List) The list of subnet IDs used by the instances.",
          "args": []
        },
        {
          "name": "application_port",
          "description": "(Optional, Integer) The instance group uses when scaling up instances to supply the port for the Load Balancer pool member.",
          "args": []
        },
        {
          "name": "load_balancer",
          "description": "(Optional, String) The load Balancer ID.",
          "args": []
        },
        {
          "name": "load_balancer_pool",
          "description": "(Optional, String) The load Balancer pool ID.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The ID of an instance group.",
          "args": []
        },
        {
          "name": "managers",
          "description": "List of managers associated with the instance group.",
          "args": []
        },
        {
          "name": "vpc",
          "description": "The VPC ID.",
          "args": []
        },
        {
          "name": "status",
          "description": "Status of an instance group.",
          "args": []
        }
      ]
    },
    "ibm_is_instance_group_manager": {
      "name": "ibm_is_instance_group_manager",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure resources",
      "args": [
        {
          "name": "name",
          "description": "(Optional, String) The name of the instance group manager.",
          "args": []
        },
        {
          "name": "enable_manager",
          "description": "(Optional, Boolean) Enable or disable the instance group manager. Default value is `true`.",
          "args": []
        },
        {
          "name": "instance_group",
          "description": "(Required, String) The instance group ID where instance group manager is created.",
          "args": []
        },
        {
          "name": "manager_type",
          "description": "(Optional, String) The type of instance group manager. Default value is `autoscale`.",
          "args": []
        },
        {
          "name": "aggregation_window",
          "description": "(Optional, Integer) The time window in seconds to aggregate metrics prior to evaluation.",
          "args": []
        },
        {
          "name": "cooldown",
          "description": "(Optional, Integer) The duration of time in seconds to pause further scale actions after scaling has taken place.",
          "args": []
        },
        {
          "name": "max_membership_count",
          "description": "(Required, Integer) The maximum number of members in a managed instance group.",
          "args": []
        },
        {
          "name": "min_membership_count",
          "description": "(Optional, Integer) The minimum number of members in a managed instance group. Default value is `1`.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The ID in the combination of instance group ID and instance group manager ID.",
          "args": []
        },
        {
          "name": "policies",
          "description": "List of policies associated with the instance group manager.",
          "args": []
        },
        {
          "name": "manager_id",
          "description": "The ID of the instance group manager.",
          "args": []
        }
      ]
    },
    "ibm_is_instance_group_manager_policy": {
      "name": "ibm_is_instance_group_manager_policy",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure resources",
      "args": [
        {
          "name": "name",
          "description": "(Optional, String) The name of the policy.",
          "args": []
        },
        {
          "name": "policy_type",
          "description": "(Required, String) The type of metric to evaluate.",
          "args": []
        },
        {
          "name": "instance_group",
          "description": "(Required, String) The instance group ID.",
          "args": []
        },
        {
          "name": "instance_group_manager",
          "description": "(Required, String) The instance group manager ID for policy creation.",
          "args": []
        },
        {
          "name": "metric_type",
          "description": "(Required, String) The type of metric to evaluate. The possible values for metric types are `cpu`, `memory`, `network_in`, and `network_out`.",
          "args": []
        },
        {
          "name": "metric_value",
          "description": "(Required, Integer) The metric value to evaluate.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The ID in the combination of instance group ID, instance group manager ID, and instance group manager policy ID.",
          "args": []
        },
        {
          "name": "policy_id",
          "description": "The policy ID.",
          "args": []
        }
      ]
    },
    "ibm_is_instance_template": {
      "name": "ibm_is_instance_template",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure resources",
      "args": [
        {
          "name": "templates",
          "args": [
            {
              "name": "id",
              "description": "(Required, String) The ID of the instance template.",
              "args": []
            }
          ]
        },
        {
          "name": "name",
          "description": "(Required, String) The name of the instance template.",
          "args": []
        },
        {
          "name": "image",
          "description": "(Required, String) The ID of the image to create the template.",
          "args": []
        },
        {
          "name": "profile",
          "description": "(Required, String) The number of instances created in the instance group.",
          "args": []
        },
        {
          "name": "vpc",
          "description": "(Required, String) The VPC ID that the instance templates needs to be created.",
          "args": []
        },
        {
          "name": "zone",
          "description": "(Required, String) The name of the zone.",
          "args": []
        },
        {
          "name": "keys",
          "description": "(Required, List) List of SSH key IDs used to allow log in user to the instances.",
          "args": []
        },
        {
          "name": "resource_group",
          "description": "(Optional, String) The resource group ID.",
          "args": []
        },
        {
          "name": "primary_network_interfaces",
          "description": "(Required, List) A nested block describes the primary network interface for the template.",
          "args": [
            {
              "name": "subnet",
              "description": "(Required, String) The VPC subnet to assign to the interface.",
              "args": []
            },
            {
              "name": "name",
              "description": "(Optional, String) The name of the interface.",
              "args": []
            },
            {
              "name": "security_groups",
              "description": "(Optional, List) List of security groups of the subnet.",
              "args": []
            },
            {
              "name": "primary_ipv4_address",
              "description": "(Optional, String) The IPv4 address assigned to the primary network interface.",
              "args": []
            }
          ]
        },
        {
          "name": "network_interfaces",
          "description": "(Optional, List) A nested block describes the network interfaces for the template.",
          "args": [
            {
              "name": "subnet",
              "description": "(Required, String) The VPC subnet to assign to the interface.",
              "args": []
            },
            {
              "name": "name",
              "description": "(Optional, String) The name of the interface.",
              "args": []
            },
            {
              "name": "security_groups",
              "description": "(Optional, List) List of security groups of  the subnet.",
              "args": []
            },
            {
              "name": "primary_ipv4_address",
              "description": "(Optional, String) The IPv4 address assigned to the network interface.",
              "args": []
            }
          ]
        },
        {
          "name": "boot_volume",
          "description": "(Optional, List) A nested block describes the boot volume configuration for the template.",
          "args": [
            {
              "name": "encryption",
              "description": "(Optional, String) The encryption key CRN to encrypt the boot volume attached.",
              "args": []
            },
            {
              "name": "name",
              "description": "(Optional, String) The name of the boot volume.",
              "args": []
            },
            {
              "name": "size",
              "description": "(Optional, String) The boot volume size to configure in giga bytes.",
              "args": []
            },
            {
              "name": "iops",
              "description": "(Optional, String) The IOPS for the boot volume.",
              "args": []
            },
            {
              "name": "profile",
              "description": "(Optional, String) The profile for the boot volume configuration.",
              "args": []
            },
            {
              "name": "delete_volume_on_instance_delete",
              "description": "(Optional, Boolean) You can configure to delete the boot volume based on instance deletion.",
              "args": []
            }
          ]
        },
        {
          "name": "volume_attachments",
          "description": "(Optional, List) A nested block describes the storage volume configuration for the template.",
          "args": [
            {
              "name": "name",
              "description": "(Required, String) The name of the boot volume.",
              "args": []
            },
            {
              "name": "volume",
              "description": "(Required, String) The storage volume ID created in VPC.",
              "args": []
            },
            {
              "name": "delete_volume_on_instance_delete",
              "description": "(Required, Boolean) You can configure to delete the storage volume to delete based on instance deletion.",
              "args": []
            }
          ]
        },
        {
          "name": "user_data",
          "description": "(Optional, String) The user data provided for the instance.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The ID of an instance template.",
          "args": []
        }
      ]
    },
    "ibm_is_ipsec_policy": {
      "name": "ibm_is_ipsec_policy",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure resources",
      "args": [
        {
          "name": "authentication_algorithm",
          "description": "(Required, String) Enter the algorithm that you want to use to authenticate `IPSec` peers. Available options are `md5`, `sha1`, or `sha256`.",
          "args": []
        },
        {
          "name": "encryption_algorithm",
          "description": "(Required, String) Enter the algorithm that you want to use to encrypt data. Available options are: `triple_des`, `aes128`, or `aes256`.",
          "args": []
        },
        {
          "name": "key_lifetime",
          "description": "(Optional, Integer) Enter the time in seconds that your encryption key can be used before it expires. You must enter a number between 300 and 86400. If you do not specify this option, 3600 seconds is used.",
          "args": []
        },
        {
          "name": "name",
          "description": "(Required, String) Enter the name for your IPSec policy.",
          "args": []
        },
        {
          "name": "pfs",
          "description": "(Required, String) Enter the Perfect Forward Secrecy protocol that you want to use during a session. Available options are `disabled`, `group_2`, `group_5`, and `group_14`.",
          "args": []
        },
        {
          "name": "resource_group",
          "description": "(Optional, String) Enter the ID of the resource group where you want to create the IPSec policy. To list available resource groups, run `ibmcloud resource groups`. If you do not specify a resource group, the IPSec policy is created in the `default` resource group.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "encapsulation_mode",
          "description": "The encapsulation mode that was set for your IPSec policy. Only `tunnel` is supported.",
          "args": []
        },
        {
          "name": "id",
          "description": "The unique identifier of the IPSec policy that you created.",
          "args": []
        },
        {
          "name": "transform_protocol",
          "description": "The transform protocol that is used in your IPSec policy. Only the `esp` protocol is supported that uses the triple DES (3DES) encryption algorithm to encrypt your data.",
          "args": []
        },
        {
          "name": "vpn_connections",
          "description": "A collection of VPN connections that use the IPSec policy. Every connection is listed with a VPC connection `name`, `id`, and `canonical URL`.",
          "args": []
        }
      ]
    },
    "ibm_is_lb": {
      "name": "ibm_is_lb",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure resources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the VPC load balancer.",
          "args": []
        },
        {
          "name": "profile",
          "description": "(Required, String) The profile to use for this Load Balancer. Supported value is `network-fixed`.",
          "args": []
        },
        {
          "name": "resource_group",
          "description": "(Optional, String) The resource group where the load balancer to be created.",
          "args": []
        },
        {
          "name": "subnets",
          "description": "(Required, Array) List of the subnets IDs to connect to the load balancer.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of strings) A list of tags that you want to add to your load balancer. Tags can help you find the load balancer more easily later.",
          "args": []
        },
        {
          "name": "type",
          "description": "(Optional, String) The type of the load balancer. Default value `public`. Supported values `public` and `private`.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "hostname",
          "description": "The fully qualified domain name assigned to this load balancer.",
          "args": []
        },
        {
          "name": "id",
          "description": "The unique identifier of the load balancer.",
          "args": []
        },
        {
          "name": "operating_status",
          "description": "The operating status of this load balancer.",
          "args": []
        },
        {
          "name": "public_ips",
          "description": "The public IP addresses assigned to this load balancer.",
          "args": []
        },
        {
          "name": "private_ips",
          "description": "The private IP addresses assigned to this load balancer.",
          "args": []
        },
        {
          "name": "status",
          "description": "The status of the load balancer.",
          "args": []
        }
      ]
    },
    "ibm_is_lb_listener": {
      "name": "ibm_is_lb_listener",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure resources",
      "args": [
        {
          "name": "lb",
          "description": "(Required, String) The load balancer unique identifier.",
          "args": []
        },
        {
          "name": "port",
          "description": "(Required, Integer) The listener port number. Valid range 1 to 65535.",
          "args": []
        },
        {
          "name": "protocol",
          "description": "(Required, String) The listener protocol. Enumeration type are `http`, `tcp`, and `https`. Network Load Balancer supports only `tcp` protocol.",
          "args": []
        },
        {
          "name": "default_pool",
          "description": "(Optional, String) The load balancer pool unique identifier.",
          "args": []
        },
        {
          "name": "certificate_instance",
          "description": "(Optional, String) The CRN of the certificate instance.",
          "args": []
        },
        {
          "name": "connection_limit",
          "description": "(Optional, Integer) The connection limit of the listener. Valid range is 1 to 15000. Network Load Balancer do not support `connection_limit` argument.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the load balancer listener.",
          "args": []
        },
        {
          "name": "status",
          "description": "The status of load balancer listener.",
          "args": []
        }
      ]
    },
    "ibm_is_lb_listener_policy": {
      "name": "ibm_is_lb_listener_policy",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure resources",
      "args": [
        {
          "name": "lb",
          "description": "(Required, String) The ID of the load balancer for which you want to create a load balancer listener policy.",
          "args": []
        },
        {
          "name": "listener",
          "description": "(Required, String) The ID of the load balancer listener.",
          "args": []
        },
        {
          "name": "action",
          "description": "(Required, String) The action that you want to specify for your policy. Supported values are `forward`, `redirect`, and `reject`.",
          "args": []
        },
        {
          "name": "priority",
          "description": "(Required, Integer) The priority of the load balancer policy. Low values indicate a high priority. The value must be between 1 and 10.",
          "args": []
        },
        {
          "name": "name",
          "description": "(Optional, String) The name for the load balancer policy. Names must be unique within a load balancer listener.",
          "args": []
        },
        {
          "name": "rules",
          "description": "(Required, List of policy rules) A list of rules that you want to apply to your load balancer policy. Note that rules can be created only. You cannot update the rules for a load balancer policy.",
          "args": [
            {
              "name": "condition",
              "description": "(Required, String) The condition that you want to apply to your rule. Supported values are `contains`, `equals`, and `matches_regex`.",
              "args": []
            },
            {
              "name": "type",
              "description": "(Required, String) The data type where you want to apply the rule condition. Supported values are `header`, `hostname`,  and `path`",
              "args": []
            },
            {
              "name": "value",
              "description": "(Required, Integer) The value that must be found in the HTTP header, hostname or path to apply the load balancer listener rule. The value that you define can be between 1 and 128 characters long.",
              "args": []
            },
            {
              "name": "field",
              "description": "(Required, Integer) If you selected `header` as the data type where you want to apply the rule condition, enter the name of the HTTP header that you want to check. The name of the header can be between 1 and 128 characters long.",
              "args": []
            }
          ]
        },
        {
          "name": "target_id",
          "description": "(Optional, Integer) When `action` is set to **forward**, specify the ID of the load balancer pool that the load balancer forwards network traffic to.",
          "args": []
        },
        {
          "name": "target_http_status_code",
          "description": "(Optional, Integer) When `action` is set to **redirect**, specify the HTTP response code that must be returned in the redirect response. Supported values are `301`, `302`, `303`, `307`, and `308`.",
          "args": []
        },
        {
          "name": "target_url",
          "description": "(Optional, Integer) When `action` is set to **redirect**, specify the URL that is used in the redirect response.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The ID of the load balancer listener policy. The ID is composed of `<lb_ID>/<listener_ID>/<policy_ID>`.",
          "args": []
        },
        {
          "name": "status",
          "description": "The status of the load balancer listener policy.",
          "args": []
        },
        {
          "name": "policy_id",
          "description": "The ID of the load balancer listener policy.",
          "args": []
        }
      ]
    },
    "ibm_is_lb_listener_policy_rule": {
      "name": "ibm_is_lb_listener_policy_rule",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure resources",
      "args": [
        {
          "name": "lb",
          "description": "(Required, String) The ID of the load balancer for which you want to create a listener policy rule.",
          "args": []
        },
        {
          "name": "listener",
          "description": "(Required, String) The ID of the load balancer listener for which you want to create a policy rule.",
          "args": []
        },
        {
          "name": "policy",
          "description": "(Required, String) The ID of the load balancer listener policy for which you want to create a policy rule.",
          "args": []
        },
        {
          "name": "condition",
          "description": "(Required, String) The condition that you want to apply to your rule. Supported values are `contains`, `equals`, and `matches_regex`.",
          "args": []
        },
        {
          "name": "type",
          "description": "(Required, String) The object where you want to apply the rule. Supported values are `header`, `hostname`, and `path`.",
          "args": []
        },
        {
          "name": "value",
          "description": "(Required, String) The value that must match the rule condition. The value can be between 1 and 128 characters long.",
          "args": []
        },
        {
          "name": "field",
          "description": "(Optional, String) If you set `type` to `header`, enter the HTTP header field where you want to apply the rule condition.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The ID of the load balancer listener policy rule. The ID is composed of ` <loadbalancer_ID>/<listener_ID>/<policy>ID>`.",
          "args": []
        },
        {
          "name": "status",
          "description": "The status of the load balancer listener.",
          "args": []
        },
        {
          "name": "rule",
          "description": "The ID of the rule",
          "args": []
        }
      ]
    },
    "ibm_is_lb_pool": {
      "name": "ibm_is_lb_pool",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure resources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the pool.",
          "args": []
        },
        {
          "name": "lb",
          "description": "(Required, String) The load balancer unique identifier.",
          "args": []
        },
        {
          "name": "algorithm",
          "description": "(Required, String) The load-balancing algorithm. Supported values are `round_robin`, `weighted_round_robin`, or `least_connections`.",
          "args": []
        },
        {
          "name": "protocol",
          "description": "(Required, String) The pool protocol. Enumeration type: `http`, `https`, `tcp` are supported.",
          "args": []
        },
        {
          "name": "health_delay",
          "description": "(Required, Integer) The health check interval in seconds. Interval must be greater than `timeout` value.",
          "args": []
        },
        {
          "name": "health_retries",
          "description": "(Required, Integer) The health check max retries.",
          "args": []
        },
        {
          "name": "health_timeout",
          "description": "(Required, Integer) The health check timeout in seconds.",
          "args": []
        },
        {
          "name": "health_type",
          "description": "(Required, String) The pool protocol. Enumeration type: `http`, `https`, `tcp` are supported.",
          "args": []
        },
        {
          "name": "health_monitor_url",
          "description": "(Optional, String) The health check URL. This option is applicable only to the HTTP `health-type`.",
          "args": []
        },
        {
          "name": "health_monitor_port",
          "description": "(Optional, Integer) The health check port number.",
          "args": []
        },
        {
          "name": "session_persistence_type",
          "description": "(Optional, String) The persistence session type.  Enumeration type: `source_ip`, `http_cookie`, and `app_cookie` are supported.",
          "args": []
        },
        {
          "name": "session_persistence_cookie_name",
          "description": "(Optional, String) The session  cookie session name. This option is applicable only to `--session-persistence-type`.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the load balancer pool. The ID is composed of `<lb_id>/<pool_id>`.",
          "args": []
        },
        {
          "name": "provisioning_status",
          "description": "The status of load balancer pool.",
          "args": []
        }
      ]
    },
    "ibm_is_lb_pool_member": {
      "name": "ibm_is_lb_pool_member",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure resources",
      "args": [
        {
          "name": "lb",
          "description": "(Required, String) The load balancer unique identifier.",
          "args": []
        },
        {
          "name": "pool",
          "description": "(Required, String) The load balancer pool unique identifier.",
          "args": []
        },
        {
          "name": "port",
          "description": "(Required, Integer) The port number of the application running in the server member.",
          "args": []
        },
        {
          "name": "target_address",
          "description": "(Required, String) The IP address of the pool member.",
          "args": []
        },
        {
          "name": "target_id",
          "description": "(Required, String) The unique identifier for the virtual server instance pool member. Required for network load balancer.",
          "args": []
        },
        {
          "name": "weight",
          "description": "(Optional, Integer) Weight of the server member. This option takes effect only when the load-balancing algorithm of its belonging pool is `weighted_round_robin`.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the load balancer pool member.",
          "args": []
        },
        {
          "name": "health",
          "description": "Health of the server member in the pool.",
          "args": []
        },
        {
          "name": "href",
          "description": "The member’s canonical URL.",
          "args": []
        }
      ]
    },
    "ibm_is_network_acl": {
      "name": "ibm_is_network_acl",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure resources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the network ACL.",
          "args": []
        },
        {
          "name": "vpc",
          "description": "(Optional, String) The VPC ID. This parameter is required if you want to create a network ACL for a Gen 2 VPC.",
          "args": []
        },
        {
          "name": "resource_group",
          "description": "(Optional, String) The ID of the resource group where you want to create the network ACL.",
          "args": []
        },
        {
          "name": "rules",
          "description": "(Optional, List of rules) A list of rules for a network ACL. The order in which the rules are added to the list determines the priority of the rules. For example, the first rule that you want to enforce must be specified as the first rule in this list.",
          "args": [
            {
              "name": "name",
              "description": "(Required, String) The user-defined name for this rule.",
              "args": []
            },
            {
              "name": "action",
              "description": "(Required, String) `Allow` or `deny` matching network traffic.",
              "args": []
            },
            {
              "name": "source",
              "description": "(Required, String) The source IP address or CIDR block.",
              "args": []
            },
            {
              "name": "destination",
              "description": "(Required, String) The destination IP address or CIDR block.",
              "args": []
            },
            {
              "name": "direction",
              "description": "(Required, String) Indicates whether the traffic to be matched is `inbound` or `outbound`.",
              "args": []
            },
            {
              "name": "icmp",
              "description": "(Optional, List of protocol information) The protocol ICMP.",
              "args": [
                {
                  "name": "code",
                  "description": "(Optional, Integer) The ICMP traffic code to allow. Valid values from 0 to 255. If unspecified, all codes are allowed. This can only be specified if type is also specified.",
                  "args": []
                },
                {
                  "name": "type",
                  "description": "(Optional, Integer) The ICMP traffic type to allow. Valid values from 0 to 254. If unspecified, all types are allowed by this rule.",
                  "args": []
                }
              ]
            },
            {
              "name": "tcp",
              "description": "(Optional, List of protocol information) The TCP protocol.",
              "args": [
                {
                  "name": "port_max",
                  "description": "(Optional, Integer) The highest port in the range of ports to be matched; if unspecified, 65535 is used.",
                  "args": []
                },
                {
                  "name": "port_min",
                  "description": "(Optional, Integer) The lowest port in the range of ports to be matched; if unspecified, 1 is used.",
                  "args": []
                },
                {
                  "name": "source_port_max",
                  "description": "(Optional, Integer) The highest port in the range of ports to be matched; if unspecified, 65535 is used.",
                  "args": []
                },
                {
                  "name": "source_port_min",
                  "description": "(Optional, Integer) The lowest port in the range of ports to be matched; if unspecified, 1 is used.",
                  "args": []
                }
              ]
            },
            {
              "name": "udp",
              "description": "(Optional, List of protocol information) The UDP protocol.",
              "args": [
                {
                  "name": "port_max",
                  "description": "(Optional, Integer) The highest port in the range of ports to be matched; if unspecified, 65535 is used.",
                  "args": []
                },
                {
                  "name": "port_min",
                  "description": "(Optional, Integer) The lowest port in the range of ports to be matched; if unspecified, 1 is used.",
                  "args": []
                },
                {
                  "name": "source_port_max",
                  "description": "(Optional, Integer) The highest port in the range of ports to be matched; if unspecified, 65535 is used.",
                  "args": []
                },
                {
                  "name": "source_port_min",
                  "description": "(Optional, Integer) The lowest port in the range of ports to be matched; if unspecified, 1 is used.",
                  "args": []
                }
              ]
            }
          ]
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The ID of the network ACL.",
          "args": []
        },
        {
          "name": "rules",
          "description": "The rules for a network ACL.",
          "args": [
            {
              "name": "id",
              "description": "The rule ID.",
              "args": []
            },
            {
              "name": "ip_version",
              "description": "The IP version of the rule.",
              "args": []
            },
            {
              "name": "subnets",
              "description": "The subnets for the ACL rule.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_is_public_gateway": {
      "name": "ibm_is_public_gateway",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure resources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) Enter a name for your public gateway.",
          "args": []
        },
        {
          "name": "vpc",
          "description": "(Required, String) Enter the ID of the VPC, for which you want to create a public gateway. To list available VPCs, run `ibmcloud is vpcs`.",
          "args": []
        },
        {
          "name": "zone",
          "description": "(Required, String) Enter the zone where you want to create the public gateway. To list available zones, run `ibmcloud is zones`.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of strings) Enter any tags that you want to associate with your VPC. Tags might help you find your VPC more easily after it is created. Separate multiple tags with a comma (`,`).",
          "args": []
        },
        {
          "name": "resource_group",
          "description": "(Optional, String) Enter the ID of the resource group where you want to create the public gateway. To list available resource groups, run `ibmcloud resource groups`. If you do not specify a resource group, the public gateway is created in the `default` resource group.",
          "args": []
        },
        {
          "name": "floating_ip",
          "description": "(Optional, List) A list of floating IP addresses that you want to assign to the public gateway.",
          "args": [
            {
              "name": "id",
              "description": "(Optional, String) The unique identifier of the floating IP address. If you specify this parameter, do not specify `floating_ip.address` at the same time.",
              "args": []
            },
            {
              "name": "address",
              "description": "(Optional, String) The floating IP address. If you specify this parameter, do not specify `floating_ip.id` at the same time.",
              "args": []
            }
          ]
        }
      ],
      "attrs": [
        {
          "name": "floating_ip",
          "description": "A list of floating IP addresses that are assigned to the public gateway.",
          "args": [
            {
              "name": "id",
              "description": "The unique identifier that was assigned to the floating IP address.",
              "args": []
            },
            {
              "name": "address",
              "description": "The IP address that was assigned to the public gateway.",
              "args": []
            }
          ]
        },
        {
          "name": "id",
          "description": "The unique identifier that was assigned to your public gateway.",
          "args": []
        },
        {
          "name": "status",
          "description": "The provisioning status of your public gateway.",
          "args": []
        }
      ]
    },
    "ibm_is_security_group": {
      "name": "ibm_is_security_group",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure resources",
      "args": [
        {
          "name": "name",
          "description": "(Optional, String) The security group name.",
          "args": []
        },
        {
          "name": "vpc",
          "description": "(Required, String) The VPC ID.",
          "args": []
        },
        {
          "name": "resource_group",
          "description": "(Optional, String) The resource group ID where the security group to be created.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The ID of the security group.",
          "args": []
        },
        {
          "name": "rules",
          "description": "A nested block describes the rules of this security group.",
          "args": [
            {
              "name": "direction",
              "description": "The direction of the traffic either `inbound` or `outbound`.",
              "args": []
            },
            {
              "name": "ip_version",
              "description": "IP version either `ipv4` or `ipv6`.",
              "args": []
            },
            {
              "name": "remote",
              "description": "Security group id, an IP address, a CIDR block, or a single security group identifier.",
              "args": []
            },
            {
              "name": "protocol",
              "description": "The type of the protocol `all`, `icmp`, `tcp`, `udp`.",
              "args": []
            },
            {
              "name": "type",
              "description": "The ICMP traffic type to allow.",
              "args": []
            },
            {
              "name": "code",
              "description": "The ICMP traffic code to allow.",
              "args": []
            },
            {
              "name": "port_max",
              "description": "The TCP/UDP port range that includes the maximum bound.",
              "args": []
            },
            {
              "name": "port_min",
              "description": "The TCP/UDP port range that includes the minimum bound.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_is_security_group_network_interface_attachment": {
      "name": "ibm_is_security_group_network_interface_attachment",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure resources",
      "args": [
        {
          "name": "security_group",
          "description": "(Required, String) The security group ID.",
          "args": []
        },
        {
          "name": "network_interface",
          "description": "(Required, String) The network interface ID.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The ID of the security group network interface. The ID is composed of `<security_group_id>/<network_interface_id>`.",
          "args": []
        },
        {
          "name": "instance_network_interface",
          "description": "The instance network interface ID.",
          "args": []
        },
        {
          "name": "name",
          "description": "The user-defined name for this network interface.",
          "args": []
        },
        {
          "name": "port_speed",
          "description": "The network interface port speed in Mbps.",
          "args": []
        },
        {
          "name": "primary_ipv4_address",
          "description": "The primary IPv4 address.",
          "args": []
        },
        {
          "name": "primary_ipv6_address",
          "description": "The primary IPv6 address in compressed notation as specified by RFC 5952.",
          "args": []
        },
        {
          "name": "secondary_address",
          "description": "Collection secondary IP addresses.",
          "args": []
        },
        {
          "name": "status",
          "description": "The status of the volume.",
          "args": []
        },
        {
          "name": "subnet",
          "description": "The Subnet ID.",
          "args": []
        },
        {
          "name": "type",
          "description": "The type of this network interface as it relates to a instance.",
          "args": []
        },
        {
          "name": "security_groups",
          "description": "A nested block describes the security groups of this network interface.",
          "args": [
            {
              "name": "id",
              "description": "The ID of this security group.",
              "args": []
            },
            {
              "name": "crn",
              "description": "The CRN of this security group.",
              "args": []
            },
            {
              "name": "name",
              "description": "The name of this security group.",
              "args": []
            }
          ]
        },
        {
          "name": "floating_ips",
          "description": "A nested block describes the floating IP's of this network interface.",
          "args": [
            {
              "name": "id",
              "description": "The ID of this floating IP.",
              "args": []
            },
            {
              "name": "crn",
              "description": "The CRN of this floating IP.",
              "args": []
            },
            {
              "name": "name",
              "description": "The name of this floating IP.",
              "args": []
            },
            {
              "name": "address",
              "description": "The globally unique IP address",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_is_security_group_rule": {
      "name": "ibm_is_security_group_rule",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure resources",
      "args": [
        {
          "name": "group",
          "description": "(Required, String) The security group ID.",
          "args": []
        },
        {
          "name": "direction",
          "description": "(Required, String) The direction of the traffic either `inbound` or `outbound`.",
          "args": []
        },
        {
          "name": "remote",
          "description": "(Optional, String) Security group id, an IP address, a CIDR block, or a single security group identifier.",
          "args": []
        },
        {
          "name": "ip_version",
          "description": "(Optional, String) The IP version either `IPv4` or `IPv6`. Default `IPv4`.",
          "args": []
        },
        {
          "name": "icmp",
          "description": "(Optional, List of objects) A nested block describes the `icmp` protocol of this security group rule.",
          "args": [
            {
              "name": "type",
              "description": "(Required, Integer) The ICMP traffic type to allow. Valid values from 0 to 254.",
              "args": []
            },
            {
              "name": "code",
              "description": "(Optional, Integer) The ICMP traffic code to allow. Valid values from 0 to 255.",
              "args": []
            }
          ]
        },
        {
          "name": "tcp",
          "description": "(Optional, List of objects) A nested block describes the `tcp` protocol of this security group rule.",
          "args": [
            {
              "name": "port_min",
              "description": "(Required, Integer) The TCP port range that includes the minimum bound. Valid values are from 1 to 65535.",
              "args": []
            },
            {
              "name": "port_max",
              "description": "(Required, Integer) The TCP port range that includes the maximum bound. Valid values are from 1 to 65535.",
              "args": []
            }
          ]
        },
        {
          "name": "udp",
          "description": "(Optional, List of objects) A nested block describes the `udp` protocol of this security group rule.",
          "args": [
            {
              "name": "port_min",
              "description": "(Required, Integer) The UDP port range that includes minimum bound. Valid values are from 1 to 65535.",
              "args": []
            },
            {
              "name": "port_max",
              "description": "(Required, Integer) The UDP port range that includes maximum bound. Valid values are from 1 to 65535. **NOTE**: If any of the `icmp` , `tcp` or `udp` is not specified it creates a rule with protocol `ALL`.",
              "args": []
            }
          ]
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The ID of the security group rule. The ID is composed of `<security_group_id>/<security_group_rule_id>`.",
          "args": []
        },
        {
          "name": "rule_id",
          "description": "The unique identifier of the rule.",
          "args": []
        }
      ]
    },
    "ibm_is_ssh_key": {
      "name": "ibm_is_ssh_key",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure resources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The user-defined name for this key.",
          "args": []
        },
        {
          "name": "public_key",
          "description": "(Required, String) The public SSH key.",
          "args": []
        },
        {
          "name": "resource_group",
          "description": "(Optional, String) The resource group ID where the SSH is created.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(A list of tags that you want to add to your SSH key. Tags can help you find the SSH key more easily later., List of strings) No",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The ID of the SSH key.",
          "args": []
        },
        {
          "name": "fingerprint",
          "description": "The SHA256 fingerprint of the public key.",
          "args": []
        },
        {
          "name": "length",
          "description": "The length of this key.",
          "args": []
        },
        {
          "name": "type",
          "description": "The crypto system used by this key.",
          "args": []
        }
      ]
    },
    "ibm_is_subnet": {
      "name": "ibm_is_subnet",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure resources",
      "args": [
        {
          "name": "ipv4_cidr_block",
          "description": "(Optional, String) The IPv4 range of the subnet.",
          "args": []
        },
        {
          "name": "total_ipv4_address_count",
          "description": "(Optional, String) The total number of IPv4 addresses. Either `ipv4_cidr_block` or `total_pv4_address_count` input parameters must be provided in the resource.",
          "args": []
        },
        {
          "name": "ip_version",
          "description": "(Optional, String) The IP Version. The default is `ipv4`.",
          "args": []
        },
        {
          "name": "name",
          "description": "(Required, String) The name of the subnet.",
          "args": []
        },
        {
          "name": "network_acl",
          "description": "(Optional, String) The ID of the network ACL for the subnet.",
          "args": []
        },
        {
          "name": "public_gateway",
          "description": "(Optional, String) The ID of the public gateway for the subnet that you want to attach to the subnet. You create the public gateway with the [`ibm_is_public_gateway` resource](#provider-public-gateway).",
          "args": []
        },
        {
          "name": "resource_group",
          "description": "(Optional, String) The ID of the resource group where you want to create the subnet.",
          "args": []
        },
        {
          "name": "vpc",
          "description": "(Required, String) The VPC ID.",
          "args": []
        },
        {
          "name": "zone",
          "description": "(Required, String) The subnet zone name.",
          "args": []
        },
        {
          "name": "routing_table",
          "description": "(Optional, String) The routing table ID associated with the subnet.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The ID of the subnet.",
          "args": []
        },
        {
          "name": "ipv6_cidr_block",
          "description": "The IPv6 range of the subnet.",
          "args": []
        },
        {
          "name": "status",
          "description": "The status of the subnet.",
          "args": []
        },
        {
          "name": "available_ipv4_address_count",
          "description": "The total number of available IPv4 addresses.",
          "args": []
        }
      ]
    },
    "ibm_is_subnet_network_acl_attachment": {
      "name": "ibm_is_subnet_network_acl_attachment",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure resources",
      "args": [
        {
          "name": "network_acl",
          "description": "(Optional, String) The network ACL identity.",
          "args": []
        },
        {
          "name": "subnet",
          "description": "(Optional, String) The subnet identifier.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "created_at",
          "description": "The creation date and time the network ACL.",
          "args": []
        },
        {
          "name": "crn",
          "description": "The CRN of this network ACL.",
          "args": []
        },
        {
          "name": "href",
          "description": "The URL of this network ACL.",
          "args": []
        },
        {
          "name": "id",
          "description": "The unique identifier of this network ACL.",
          "args": []
        },
        {
          "name": "name",
          "description": "The user-defined name of this network ACL.",
          "args": []
        },
        {
          "name": "protocol",
          "description": "The protocol list to enforce.",
          "args": [
            {
              "name": "icmp",
              "description": "The protocol ICMP.",
              "args": [
                {
                  "name": "code",
                  "description": "The ICMP traffic code to allow. If unspecified, all codes are allowed. This can only be specified if type is also specified.",
                  "args": []
                },
                {
                  "name": "type",
                  "description": "The ICMP traffic type to allow. If unspecified, all types are allowed by this rule.",
                  "args": []
                }
              ]
            },
            {
              "name": "tcp",
              "description": "The TCP protocol.",
              "args": [
                {
                  "name": "destination_port_max",
                  "description": "The inclusive maximum bound of TCP destination port range.",
                  "args": []
                },
                {
                  "name": "destination_port_min",
                  "description": "The inclusive minimum bound of TCP destination port range.",
                  "args": []
                },
                {
                  "name": "source_port_max",
                  "description": "The inclusive maximum bound of TCP source port range.",
                  "args": []
                },
                {
                  "name": "source_port_min",
                  "description": "The inclusive minimum bound of TCP source port range.",
                  "args": []
                }
              ]
            },
            {
              "name": "udp",
              "description": "The UDP protocol.",
              "args": [
                {
                  "name": "destination_port_max",
                  "description": "The inclusive maximum bound of UDP destination port range.",
                  "args": []
                },
                {
                  "name": "destination_port_min",
                  "description": "The inclusive minimum bound of UDP destination port range.",
                  "args": []
                },
                {
                  "name": "source_port_max",
                  "description": "The inclusive maximum bound of UDP source port range.",
                  "args": []
                },
                {
                  "name": "source_port_min",
                  "description": "The inclusive minimum bound of UDP source port range.",
                  "args": []
                }
              ]
            },
            {
              "name": "subnets",
              "description": "The subnets to which this network ACL is attached.",
              "args": []
            },
            {
              "name": "vpc",
              "description": "The VPC to which this network ACL is a part of.",
              "args": []
            }
          ]
        },
        {
          "name": "resource_group",
          "description": "The resource group of this network ACL.",
          "args": []
        },
        {
          "name": "rules",
          "description": "The ordered rules of this network ACL. If rules does not exist, all traffic will be denied. Nested rules blocks has the following structure.",
          "args": [
            {
              "name": "action",
              "description": "Specify to allow or deny matching traffic.",
              "args": []
            },
            {
              "name": "created_at",
              "description": "The rule creation date and time.",
              "args": []
            },
            {
              "name": "source",
              "description": "The source CIDR block. The CIDR block 0.0.0.0/0 applies to all addresses.",
              "args": []
            },
            {
              "name": "destination",
              "description": "The destination CIDR block. The CIDR block 0.0.0.0/0 applies to all addresses.",
              "args": []
            },
            {
              "name": "href",
              "description": "The URL of the Network ACL rule.",
              "args": []
            },
            {
              "name": "id",
              "description": "The unique identifier of the Network ACL rule.",
              "args": []
            },
            {
              "name": "ip_version",
              "description": "The IP version of the rule.",
              "args": []
            },
            {
              "name": "name",
              "description": "The user-defined name of the rule.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_is_virtual_endpoint_gateway": {
      "name": "ibm_is_virtual_endpoint_gateway",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure resources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The endpoint gateway name.",
          "args": []
        },
        {
          "name": "ips",
          "description": "(Optional, List) The endpoint gateway resource group.",
          "args": [
            {
              "name": "id",
              "description": "(Optional, String) The endpoint gateway resource group IPs ID.",
              "args": []
            },
            {
              "name": "name",
              "description": "(Optional, String) The endpoint gateway resource group IPs name.",
              "args": []
            },
            {
              "name": "subnet",
              "description": "(Optional, String) The endpoint gateway resource group subnet ID.",
              "args": []
            },
            {
              "name": "resource_type",
              "description": "(Computed, String) The endpoint gateway resource group VPC resource type.",
              "args": []
            }
          ]
        },
        {
          "name": "resource_group",
          "description": "(Optional, String) The resource group ID.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, List of strings) A list of tags associated with the instance.",
          "args": []
        },
        {
          "name": "target",
          "description": "(Required, List) The endpoint gateway target.",
          "args": [
            {
              "name": "crn",
              "description": "(Optional, String) The endpoint gateway target `CRN`. If CRN not specified, `name` must be specified.",
              "args": []
            },
            {
              "name": "name",
              "description": "(Required, String) The endpoint gateway target name.",
              "args": []
            },
            {
              "name": "resource_type",
              "description": "(Required, String) The endpoint gateway target resource type.",
              "args": []
            }
          ]
        },
        {
          "name": "vpc",
          "description": "(Required, String) The VPC ID.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the VPN gateway connection. The ID is composed of `<gateway_id>`.",
          "args": []
        },
        {
          "name": "resource_type",
          "description": "The endpoint gateway resource type.",
          "args": []
        },
        {
          "name": "created_at",
          "description": "The created date and time of the endpoint gateway.",
          "args": []
        },
        {
          "name": "health_state",
          "description": "The health state of the endpoint gateway.",
          "args": []
        },
        {
          "name": "lifecycle_state",
          "description": "The lifecycle state of the endpoint gateway.",
          "args": []
        }
      ]
    },
    "ibm_is_virtual_endpoint_gateway_ip": {
      "name": "ibm_is_virtual_endpoint_gateway_ip",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure resources",
      "args": [
        {
          "name": "gateway",
          "description": "(Required, String) The endpoint gateway ID.",
          "args": []
        },
        {
          "name": "reserver_ip",
          "description": "(Required, String) The endpoint gateway IP ID.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the VPN gateway connection. The ID is composed of `<gateway_id>/<gateway_ip_id>`.",
          "args": []
        },
        {
          "name": "name",
          "description": "The endpoint gateway IP name.",
          "args": []
        },
        {
          "name": "created_at",
          "description": "The created date and time of the endpoint gateway IP.",
          "args": []
        },
        {
          "name": "resource_type",
          "description": "The endpoint gateway IP resource type.",
          "args": []
        },
        {
          "name": "auto_delete",
          "description": "The endpoint gateway IP auto delete.",
          "args": []
        },
        {
          "name": "address",
          "description": "The endpoint gateway IP address.",
          "args": []
        },
        {
          "name": "target",
          "description": "The endpoint gateway target details.",
          "args": [
            {
              "name": "id",
              "description": "The IPs target ID.",
              "args": []
            },
            {
              "name": "name",
              "description": "The IPs target name.",
              "args": []
            },
            {
              "name": "resource_type",
              "description": "The endpoint gateway resource type.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_is_volume": {
      "name": "ibm_is_volume",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure resources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The user-defined name for this volume.",
          "args": []
        },
        {
          "name": "profile",
          "description": "(Required, String) The profile to use for this volume.",
          "args": []
        },
        {
          "name": "zone",
          "description": "(Required, String) The location of the volume.",
          "args": []
        },
        {
          "name": "iops",
          "description": "(Required for `custom` storage profiles only, Integer) The total input/ output operations per second (IOPS) for your storage. This value is required for `custom` storage profiles only.",
          "args": []
        },
        {
          "name": "capacity",
          "description": "(Optional, Integer) (The capacity of the volume in gigabytes. This defaults to `100`.",
          "args": []
        },
        {
          "name": "encryption_key",
          "description": "(Optional, String) The key to use for encrypting this volume.",
          "args": []
        },
        {
          "name": "resource_group",
          "description": "(Optional, String) The resource group ID for this volume.",
          "args": []
        },
        {
          "name": "resource_controller_url",
          "description": "(Optional, String) The URL of the IBM Cloud dashboard that can be used to explore and view details about this instance.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, List of strings) A list of tags that you want to add to your volume. Tags can help you find your volume more easily later.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the volume.",
          "args": []
        },
        {
          "name": "status",
          "description": "The status of volume.",
          "args": []
        },
        {
          "name": "crn",
          "description": "The CRN for the volume.",
          "args": []
        }
      ]
    },
    "ibm_is_vpc": {
      "name": "ibm_is_vpc",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure resources",
      "args": [
        {
          "name": "classic_access",
          "description": "(Optional, Boolean) Specify if you want to create a VPC that can connect to classic infrastructure resources. Enter **true** to set up private network connectivity from your VPC to classic infrastructure resources that are created in the same IBM Cloud account, and **false** to disable this access. If you choose to not set up this access, you cannot enable it after the VPC is created. Make sure to review the [prerequisites](/docs/vpc-on-classic-network?topic=vpc-on-classic-setting-up-access-to-your-classic-infrastructure-from-vpc#vpc-prerequisites) before you create a VPC with classic infrastructure access. Note that you can enable one VPC for classic infrastructure access per IBM Cloud account only.",
          "args": []
        },
        {
          "name": "address_prefix_management",
          "description": "(Optional, String) Indicates whether a default address prefix should be created automatically (`auto`) or manually (`manual`) for each zone in this VPC. Default value `auto`.",
          "args": []
        },
        {
          "name": "default_network_acl",
          "description": "(Deprecated, String) The ID of the default network ACL.",
          "args": []
        },
        {
          "name": "name",
          "description": "(Required, String) Enter a name for your VPC.",
          "args": []
        },
        {
          "name": "resource_group",
          "description": "(Optional, String) Enter the ID of the resource group where you want to create the VPC. To list available resource groups, run `ibmcloud resource groups`. If you do not specify a resource group, the VPC is created in the `default` resource group.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of Strings) Enter any tags that you want to associate with your VPC. Tags might help you find your VPC more easily after it is created. Separate multiple tags with a comma (`,`).",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "crn",
          "description": "The CRN of the VPC.",
          "args": []
        },
        {
          "name": "default_security_group",
          "description": "The default security group ID created and attached to the VPC.",
          "args": []
        },
        {
          "name": "default_network_acl",
          "description": "The default network ACL ID created and attached to the VPC.",
          "args": []
        },
        {
          "name": "id",
          "description": "The unique identifier of the VPC that you created.",
          "args": []
        },
        {
          "name": "subnets",
          "description": "A list of subnets that are attached to a VPC.",
          "args": [
            {
              "name": "name",
              "description": "The name of the subnet.",
              "args": []
            },
            {
              "name": "id",
              "description": "The ID of the subnet.",
              "args": []
            },
            {
              "name": "status",
              "description": "The status of the subnet.",
              "args": []
            },
            {
              "name": "zone",
              "description": "The Zone of the subnet.",
              "args": []
            },
            {
              "name": "total_ipv4_address_count",
              "description": "Total IPv4 addresses under the subnet.",
              "args": []
            },
            {
              "name": "available_ipv4_address_count",
              "description": "Available IPv4 addresses available for the usage in the subnet.",
              "args": []
            },
            {
              "name": "total_ipv4_address_count",
              "description": "The total number of IPv4 addresses in the subnet.",
              "args": []
            },
            {
              "name": "available_ipv4_address_count",
              "description": "The number of IPv4 addresses in the subnet that are available for you to be used.",
              "args": []
            }
          ]
        },
        {
          "name": "status",
          "description": "The provisioning status of your VPC.",
          "args": []
        },
        {
          "name": "cse_source_addresses",
          "description": "A list of the cloud service endpoints that are associated with your VPC, including their source IP address and zone.",
          "args": [
            {
              "name": "address",
              "description": "The IP address of the cloud service endpoint.",
              "args": []
            },
            {
              "name": "zone_name",
              "description": "The zone where the cloud service endpoint is located.",
              "args": []
            }
          ]
        },
        {
          "name": "security_group",
          "description": "A list of security groups attached to VPC. The nested security group block has the following structure:",
          "args": [
            {
              "name": "group_id",
              "description": "The security group ID.",
              "args": []
            },
            {
              "name": "group_name",
              "description": "The name of the security group.",
              "args": []
            },
            {
              "name": "rules",
              "description": "Set of rules attached to a security group.",
              "args": [
                {
                  "name": "rule_id",
                  "description": "The rule ID.",
                  "args": []
                },
                {
                  "name": "direction",
                  "description": "The direction of the traffic either inbound or outbound.",
                  "args": []
                },
                {
                  "name": "ip_version",
                  "description": "ip version either ipv4 or IPv6.",
                  "args": []
                },
                {
                  "name": "remote",
                  "description": "Security group id, an IP address, a CIDR block, or a single security group identifier.",
                  "args": []
                },
                {
                  "name": "type",
                  "description": "The ICMP traffic type to allow.",
                  "args": []
                },
                {
                  "name": "code",
                  "description": "The ICMP traffic code to allow.",
                  "args": []
                },
                {
                  "name": "port_min",
                  "description": "The inclusive lower bound of TCP port range.",
                  "args": []
                },
                {
                  "name": "port_max",
                  "description": "The inclusive upper bound of TCP port range.",
                  "args": []
                }
              ]
            }
          ]
        }
      ]
    },
    "ibm_is_vpc_address_prefix": {
      "name": "ibm_is_vpc_address_prefix",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure resources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The address prefix name.",
          "args": []
        },
        {
          "name": "vpc",
          "description": "(Required, String) The VPC ID.",
          "args": []
        },
        {
          "name": "zone",
          "description": "(Required, String) The name of the zone.",
          "args": []
        },
        {
          "name": "cidr",
          "description": "(Required, String) The CIDR block for the address prefix.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The ID of the address prefix.",
          "args": []
        },
        {
          "name": "has_subnets",
          "description": "Indicates whether subnets exist with addresses from this prefix.",
          "args": []
        }
      ]
    },
    "ibm_is_vpc_route": {
      "name": "ibm_is_vpc_route",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure resources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the route that you want to create.",
          "args": []
        },
        {
          "name": "vpc",
          "description": "(Required, String) The ID of the VPC where you want to create the route.",
          "args": []
        },
        {
          "name": "zone",
          "description": "(Required, String) The name of the VPC zone where you want to create the route.",
          "args": []
        },
        {
          "name": "destination",
          "description": "(Required, String) The destination IP address or CIDR that network traffic from your VPC must match to be routed to the `next_hop`.",
          "args": []
        },
        {
          "name": "next_hop",
          "description": "(Required, String) The IP address where network traffic is sent next.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The ID of the VPC route. The ID is composed of `<vpc_id>/<vpc_route_id>`.",
          "args": []
        },
        {
          "name": "status",
          "description": "The status of the VPC route.",
          "args": []
        }
      ]
    },
    "ibm_is_vpc_routing_table": {
      "name": "ibm_is_vpc_routing_table",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure resources",
      "args": [
        {
          "name": "name",
          "description": "(Optional, String) The routing table name.",
          "args": []
        },
        {
          "name": "route_direct_link_ingress",
          "description": "(Optional, Boolean) If set to `true`, the routing table is used to route traffic that originates from Direct Link to the VPC. To succeed, the VPC must not already have a routing table with the property set to `true`.",
          "args": []
        },
        {
          "name": "route_transit_gateway_ingress",
          "description": "(Optional, Boolean) If set to `true`, the routing table is used to route traffic that originates from Transit Gateway to the VPC. To succeed, the VPC must not already have a routing table with the property set to `true`.",
          "args": []
        },
        {
          "name": "route_vpc_zone_ingress",
          "description": "(Optional, Boolean) If set to true, the routing table is used to route traffic that originates from subnets in other zones in the VPC. To succeed, the VPC must not already have a routing table with the property set to `true`.",
          "args": []
        },
        {
          "name": "vpc",
          "description": "(Required, String) The VPC ID.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "href",
          "description": "The routing table URL.",
          "args": []
        },
        {
          "name": "id",
          "description": "The routing table ID. The ID is composed of `<vpc_id>/<vpc_route_table_id>` of the VPC route.",
          "args": []
        },
        {
          "name": "is_default",
          "description": "Indicates the default routing table for this VPC.",
          "args": []
        },
        {
          "name": "lifecycle_state",
          "description": "The lifecycle state of the routing table.",
          "args": []
        },
        {
          "name": "resource_type",
          "description": "The resource type.",
          "args": []
        },
        {
          "name": "routing_table",
          "description": "The generated routing table ID.",
          "args": []
        },
        {
          "name": "routes",
          "description": "The routes for the routing table.",
          "args": [
            {
              "name": "id",
              "description": "The unique ID of the route.",
              "args": []
            },
            {
              "name": "name",
              "description": "The user-defined name of the route.",
              "args": []
            }
          ]
        },
        {
          "name": "subnets",
          "description": "The subnets to which routing table is attached.",
          "args": [
            {
              "name": "id",
              "description": "The unique ID of the subnet.",
              "args": []
            },
            {
              "name": "name",
              "description": "The user-defined name of the subnet.",
              "args": []
            }
          ]
        }
      ]
    },
    "ibm_is_vpc_routing_table_route": {
      "name": "ibm_is_vpc_routing_table_route",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure resources",
      "args": [
        {
          "name": "action",
          "description": "(Optional, String) The action to perform with a packet matching the route.",
          "args": []
        },
        {
          "name": "destination",
          "description": "(Required, String) The destination of the route.",
          "args": []
        },
        {
          "name": "name",
          "description": "(Optional, String) The user-defined name of the route. If unspecified, the name will be a hyphenated list of randomly selected words. You need to provide unique name within the VPC routing table the route resides in.",
          "args": []
        },
        {
          "name": "next_hop",
          "description": "(Required, String) The next hop of the route.",
          "args": []
        },
        {
          "name": "routing_table",
          "description": "(Required, String) The routing table ID.",
          "args": []
        },
        {
          "name": "vpc",
          "description": "(Required, String) The VPC ID.",
          "args": []
        },
        {
          "name": "zone",
          "description": "(Required, String) Name of the zone.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "href",
          "description": "The routing table URL.",
          "args": []
        },
        {
          "name": "id",
          "description": "The routing table ID. The ID is composed of `<vpc_route_table_id>/<vpc_route_table_route_id>`.",
          "args": []
        },
        {
          "name": "is_default",
          "description": "Indicates the default routing table for this VPC.",
          "args": []
        },
        {
          "name": "lifecycle_state",
          "description": "The lifecycle state of the route.",
          "args": []
        },
        {
          "name": "resource_type",
          "description": "The resource type.",
          "args": []
        }
      ]
    },
    "ibm_is_vpn_gateway": {
      "name": "ibm_is_vpn_gateway",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure resources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the VPN gateway.",
          "args": []
        },
        {
          "name": "subnet",
          "description": "(Required, String) The unique identifier for this subnet.",
          "args": []
        },
        {
          "name": "resource_group",
          "description": "(Optional, String) The resource group where the VPN gateway to be created.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, List of strings) A list of tags that you want to add to your VPN gateway. Tags can help you find your VPN gateway more easily later.",
          "args": []
        },
        {
          "name": "mode",
          "description": "(String, Optional) Mode in VPN gateway. Supported values are `route` or `policy`. The default value is `route`.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the VPN gateway.",
          "args": []
        },
        {
          "name": "status",
          "description": "The status of VPN gateway.",
          "args": []
        },
        {
          "name": "public_ip_address",
          "description": "The IP address assigned to this VPN gateway.",
          "args": []
        }
      ]
    },
    "ibm_is_vpn_gateway_connection": {
      "name": "ibm_is_vpn_gateway_connection",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "VPC infrastructure resources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the VPN gateway connection.",
          "args": []
        },
        {
          "name": "vpn_gateway",
          "description": "(Required, String) The unique identifier of the VPN gateway.",
          "args": []
        },
        {
          "name": "peer_address",
          "description": "(Required, String) The IP address of the peer VPN gateway.",
          "args": []
        },
        {
          "name": "preshared_key",
          "description": "(Required, String) The preshared key.",
          "args": []
        },
        {
          "name": "local_cidrs",
          "description": "(Optional, Array) List of local CIDRs for this resource.",
          "args": []
        },
        {
          "name": "peer_cidrs",
          "description": "(Optional, Array) List of peer CIDRs for this resource.",
          "args": []
        },
        {
          "name": "admin_state_up",
          "description": "(Optional, Boolean) The VPN gateway connection status. Default false. If set to false, the VPN gateway connection is shut down.",
          "args": []
        },
        {
          "name": "action",
          "description": "(Optional, String) Dead peer detection actions. Supported values are `restart`, `clear`, `hold`, `none`. Default: `none`.",
          "args": []
        },
        {
          "name": "interval",
          "description": "(Optional, Integer) Dead peer detection interval in seconds. Default 30.",
          "args": []
        },
        {
          "name": "timeout",
          "description": "(Optional, Integer) Dead peer detection timeout in seconds. Default 120.",
          "args": []
        },
        {
          "name": "ike_policy",
          "description": "(Optional, String) The ID of the IKE policy.",
          "args": []
        },
        {
          "name": "ipsec_policy",
          "description": "(Optional, String) The ID of the IPSec policy.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the VPN gateway connection. The ID is composed of `<vpn_gateway_id>/<vpn_gateway_connection_id>`.",
          "args": []
        },
        {
          "name": "authentication_mode",
          "description": "The authentication mode, only `psk` is supported now.",
          "args": []
        },
        {
          "name": "created_at",
          "description": "The date and time that VPN gateway connection was created.",
          "args": []
        },
        {
          "name": "resource_type",
          "description": "The resource type (vpn_gateway_connection).",
          "args": []
        },
        {
          "name": "status",
          "description": "The status of a VPN gateway connection either `down` or `up`.",
          "args": []
        },
        {
          "name": "tunnels",
          "description": "The VPN tunnel configuration for the VPN gateway connection (in static route mode).",
          "args": [
            {
              "name": "address",
              "description": "The IP address of the VPN gateway member in which the tunnel resides.",
              "args": []
            },
            {
              "name": "resource_type",
              "description": "The status of the VPN tunnel.",
              "args": []
            }
          ]
        },
        {
          "name": "crn",
          "description": "The `VPN Gateway info(ID)`.",
          "args": []
        },
        {
          "name": "mode",
          "description": "The mode of the `VPN gateway(policy,route)`.",
          "args": []
        }
      ]
    },
    "ibm_kms_key": {
      "name": "ibm_kms_key",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Key Management Service resources",
      "args": [
        {
          "name": "endpoint_type",
          "description": "(Optional, String) The type of the public or private endpoint to be used for creating keys.",
          "args": []
        },
        {
          "name": "encrypted_nonce",
          "description": "(Optional, String) The encrypted nonce value that verifies your request to import a key to Key Protect. This value must be encrypted by using the key that you want to import to the service. To retrieve a nonce, use the `ibmcloud kp import-token get` command. Then, encrypt the value by running `ibmcloud kp import-token encrypt-nonce`. Only for imported root key.",
          "args": []
        },
        {
          "name": "expiration_date",
          "description": "(Optional, String) Expiry date of the key material. The date format follows with RFC 3339. You can set an expiration date on any key on its creation. A key moves into the deactivated state within one hour past its expiration date, if one is assigned. If you create a key without specifying an expiration date, the key does not expire. For example, `2018-12-01T23:20:50.52Z`.",
          "args": []
        },
        {
          "name": "force_delete",
          "description": "(Optional, Boolean) If set to **true**, Key Protect forces the deletion of a root or standard key, even if this key is still in use, such as to protect an IBM Cloud Object Storage bucket. Note that the key cannot be deleted if the protected cloud resource is set up with a retention policy. Successful deletion includes the removal of any registrations that are associated with the key. Default value is **false**.",
          "args": []
        },
        {
          "name": "instance_id",
          "description": "(Required, String) The HPCS or key-protect instance ID.",
          "args": []
        },
        {
          "name": "iv_value",
          "description": "(Optional, String) Used with import tokens. The initialization vector (IV) that is generated when you encrypt a nonce. The IV value is required to decrypt the encrypted nonce value that you provide when you make a key import request to the service. To generate an IV, encrypt the nonce by running `ibmcloud kp import-token encrypt-nonce`. Only for imported root key.",
          "args": []
        },
        {
          "name": "key_name",
          "description": "(Required, String) The name of the key.",
          "args": []
        },
        {
          "name": "payload",
          "description": "(Optional, String) The base64 encoded key that you want to store and manage in the service. To import an existing key, provide a 256-bit key. To generate a new key, omit this parameter.",
          "args": []
        },
        {
          "name": "standard_key",
          "description": "(Optional, Bool) Set flag `true` for standard key, and `false` for root key. Default value is **false**.",
          "args": []
        },
        {
          "name": "policies",
          "description": "(Optional, List) Set policies for a key, for an automatic rotation policy or a dual authorization policy to protect against the accidental deletion of keys. Policies follow the following structure.",
          "args": [
            {
              "name": "rotation",
              "description": "(Optional, List) Specifies the key rotation time interval in months, with a minimum of 1, and a maximum of 12.",
              "args": [
                {
                  "name": "interval_month",
                  "description": "(Required, Integer) Specifies the key rotation time interval in months. CONSTRAINTS: 1 ≤ value ≤ 12 **NOTE:** Rotation policy cannot be set for standard key and imported key. Once the rotation policy is set, it cannot be unset or removed by using Terraform.",
                  "args": []
                }
              ]
            },
            {
              "name": "dual_auth_delete",
              "description": "(Required, List) Data associated with the dual authorization delete policy.",
              "args": [
                {
                  "name": "enabled",
                  "description": "(Required, Bool) If set to `true`, Key Protect enables a dual authorization policy on a single key. **NOTE:** Once the dual authorization policy is set on the key, it cannot be reverted. A key with dual authorization policy enabled cannot be destroyed by using Terraform.",
                  "args": []
                }
              ]
            }
          ]
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The CRN of the key.",
          "args": []
        },
        {
          "name": "crn",
          "description": "The CRN of the key.",
          "args": []
        },
        {
          "name": "status",
          "description": "The status of the key.",
          "args": []
        },
        {
          "name": "key_id",
          "description": "The ID of the key.",
          "args": []
        },
        {
          "name": "type",
          "description": "The type of the key KMS or HPCS.",
          "args": []
        },
        {
          "name": "policy",
          "description": "The policies associated with the key.",
          "args": [
            {
              "name": "rotation",
              "description": "The key rotation time interval in months, with a minimum of 1, and a maximum of 12.",
              "args": [
                {
                  "name": "created_by",
                  "description": "The unique ID for the resource that created the policy.",
                  "args": []
                },
                {
                  "name": "creation_date",
                  "description": "The date the policy was created. The date format follows RFC 3339.",
                  "args": []
                },
                {
                  "name": "crn",
                  "description": "The Cloud Resource Name (CRN) that uniquely identifies your cloud resources.",
                  "args": []
                },
                {
                  "name": "id",
                  "description": "The v4 UUID used to uniquely identify the policy resource, as specified by RFC 4122.",
                  "args": []
                },
                {
                  "name": "interval_month",
                  "description": "The key rotation time interval in months.",
                  "args": []
                },
                {
                  "name": "last_update_date",
                  "description": "The date when the policy last replaced or modified. The date format follows RFC 3339.",
                  "args": []
                },
                {
                  "name": "updated_by",
                  "description": "The unique ID for the resource that updated the policy.",
                  "args": []
                }
              ]
            },
            {
              "name": "dual_auth_delete",
              "description": "The data associated with the dual authorization delete policy.",
              "args": [
                {
                  "name": "created_by",
                  "description": "The unique ID for the resource that created the policy.",
                  "args": []
                },
                {
                  "name": "creation_date",
                  "description": "The date the policy was created. The date format follows RFC 3339.",
                  "args": []
                },
                {
                  "name": "crn",
                  "description": "The Cloud Resource Name (CRN) that uniquely identifies your cloud resources.",
                  "args": []
                },
                {
                  "name": "id",
                  "description": "The v4 UUID used to uniquely identify the policy resource, as specified by RFC 4122.",
                  "args": []
                },
                {
                  "name": "enabled",
                  "description": "If set to `true`, Key Protect enables a dual authorization policy on the key.",
                  "args": []
                },
                {
                  "name": "last_update_date",
                  "description": "The date when the policy last replaced or modified. The date format follows RFC 3339.",
                  "args": []
                },
                {
                  "name": "updated_by",
                  "description": "The unique ID for the resource that updated the policy.",
                  "args": []
                }
              ]
            }
          ]
        }
      ]
    },
    "ibm_kp_key": {
      "name": "ibm_kp_key",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Key Management Service resources",
      "args": [
        {
          "name": "key_protect_id",
          "description": "(Required, String) The Key Protect service instance ID.",
          "args": []
        },
        {
          "name": "key_name",
          "description": "(Required, String) The name of the key.",
          "args": []
        },
        {
          "name": "standard_key",
          "description": "(Optional, Boolean) Set flag `true` for standard key, and `false` for root key. Default value is **false**.",
          "args": []
        },
        {
          "name": "payload",
          "description": "(Optional, String) The base64 encoded key that you want to store and manage in the service. To import an existing key, provide a 256-bit key. To generate a new key, omit this parameter.",
          "args": []
        },
        {
          "name": "encrypted_nonce",
          "description": "(Optional, String) The encrypted nonce value that verifies your request to import a key to Key Protect. This value must be encrypted by using the key that you want to import to the service. To retrieve a nonce, use the `ibmcloud kp import-token get` command. Then, encrypt the value by running `ibmcloud kp import-token encrypt-nonce`. Only for imported root key.",
          "args": []
        },
        {
          "name": "force_delete",
          "description": "(Optional, Boolean) If set to **true**, Key Protect forces the deletion of a root or standard key, even if this key is still in use, such as to protect an IBM Cloud Object Storage bucket. Note, the key cannot be deleted if the protected cloud resource is set up with a retention policy. Successful deletion includes the removal of any registrations that are associated with the key. Default value is **false**.",
          "args": []
        },
        {
          "name": "iv_value",
          "description": "(Optional, String) Used with import tokens. The Initialization Vector (IV) that is generated when you encrypt a nonce. The IV value is required to decrypt the encrypted nonce value that you provide when you make a key import request to the service. To generate an IV, encrypt the nonce by running `ibmcloud kp import-token encrypt-nonce`. Only for imported root key.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The CRN of the key.",
          "args": []
        },
        {
          "name": "crn",
          "description": "The CRN of the key.",
          "args": []
        },
        {
          "name": "status",
          "description": "The status of the key.",
          "args": []
        },
        {
          "name": "key_id",
          "description": "The ID of the key.",
          "args": []
        }
      ]
    },
    "ibm_lb": {
      "name": "ibm_lb",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure resources",
      "args": [
        {
          "name": "connections",
          "description": "(Required, Integer) The number of connections for the local load balancer. Only incremental upgrade is supported. For downgrade, please open the SoftLayer support ticket.",
          "args": []
        },
        {
          "name": "datacenter",
          "description": "(Required, String) The data center for the local load balancer.",
          "args": []
        },
        {
          "name": "ha_enabled",
          "description": "(Required, Boolean) Specifies whether the local load balancer must be HA-enabled.",
          "args": []
        },
        {
          "name": "security_certificate_id",
          "description": "(Optional, Integer) The ID of the security certificate associated with the local load balancer.",
          "args": []
        },
        {
          "name": "dedicated",
          "description": "(Optional, Boolean) Specifies whether the local load balancer must be dedicated. The default value is `false`.",
          "args": []
        },
        {
          "name": "ssl_offload",
          "description": "(Optional, Boolean) Specifies the local load balancer SSL offload. If `true` start SSL acceleration on all SSL virtual services. (those with a type of HTTPS) This action should be taken only after configuring an SSL certificate for the virtual IP. If `false` stop SSL acceleration on all SSL virtual services (those with a type of HTTPS). The default value is `false`.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of Strings) Tags associated with the local load balancer instance.     **NOTE**: `Tags` are managed locally and not stored on the IBM Cloud Service Endpoint at this moment.",
          "args": []
        }
      ],
      "attrs": []
    },
    "ibm_lb_service": {
      "name": "ibm_lb_service",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure resources",
      "args": [
        {
          "name": "service_group_id",
          "description": "(Required, Integer) The ID of the local load balancer service group.",
          "args": []
        },
        {
          "name": "ip_address_id",
          "description": "(Required, Integer) The ID of the virtual server.",
          "args": []
        },
        {
          "name": "port",
          "description": "(Required, Integer) The port for the local load balancer service.",
          "args": []
        },
        {
          "name": "enabled",
          "description": "(Required, Integer) Specifies whether you want to enable the load balancer service. The default value is `false`.",
          "args": []
        },
        {
          "name": "health_check_type",
          "description": "(Required, String) The health check type for the load balancer service.",
          "args": []
        },
        {
          "name": "weight",
          "description": "(Required, Integer) The weight for the load balancer service.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of Strings) Tags associated with the local load balancer service instance.     **NOTE**: `Tags` are managed locally and not stored on the IBM Cloud Service Endpoint at this moment.",
          "args": []
        }
      ],
      "attrs": []
    },
    "ibm_lb_service_group": {
      "name": "ibm_lb_service_group",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure resources",
      "args": [
        {
          "name": "load_balancer_id",
          "description": "(Required, Integer) The ID of the local load balancer.",
          "args": []
        },
        {
          "name": "allocation",
          "description": "(Required, Integer) The connection allocation for the load balancer service group.",
          "args": []
        },
        {
          "name": "port",
          "description": "(Required, Integer) The port for the local load balancer service group.",
          "args": []
        },
        {
          "name": "routing_method",
          "description": "(Required, String) The routing method for the load balancer group. For example, `CONSISTENT_HASH_IP`.",
          "args": []
        },
        {
          "name": "routing_type",
          "description": "(Required, String) The routing type for the group.",
          "args": []
        },
        {
          "name": "timeout",
          "description": "(Optional, Integer) The timeout value for connections from remote clients to the load balancer. Timeout values are only valid for HTTP service groups.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of Strings) Tags associated with the local load balancer service group instance.     **NOTE**: `Tags` are managed locally and not stored on the IBM Cloud Service Endpoint at this moment.",
          "args": []
        }
      ],
      "attrs": []
    },
    "ibm_lb_vpx": {
      "name": "ibm_lb_vpx",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure resources",
      "args": [
        {
          "name": "datacenter",
          "description": "(Required, String) The data center in which you want to provision the VPX load balancer. You can find accepted values in the [data center Docs](https://www.ibm.com/cloud/load-balancer).",
          "args": []
        },
        {
          "name": "speed",
          "description": "(Required, Integer) The speed, expressed in Mbps. Accepted values are `10`, `200`, and `1000`.",
          "args": []
        },
        {
          "name": "version",
          "description": "(Required, String) The VPX load balancer version. Accepted values are `10.1`, `10.5`, `11.0`, `11.1` and `12.1`.",
          "args": []
        },
        {
          "name": "plan",
          "description": "(Required, String) The VPX load balancer plan. Accepted values are `Standard` and `Platinum`.",
          "args": []
        },
        {
          "name": "ip_count",
          "description": "(Required, Integer) The number of static public IP addresses assigned to the VPX load balancer. Accepted values are `1`,`2`, `4`, `8`, and `16`.",
          "args": []
        },
        {
          "name": "public_vlan_id",
          "description": "(Optional, Integer) The public VLAN ID that is used for the public network interface of the VPX load balancer. You can find accepted values in the [VLAN network](https://cloud.ibm.com/classic/network/vlans) by clicking the VLAN that you want to use and noting the ID in the resulting URL. You can also refer to a VLAN name by using a data source.",
          "args": []
        },
        {
          "name": "private_vlan_id",
          "description": "(Optional, Integer) The private VLAN ID that is used for the private network interface of the VPX load balancer. You can find accepted values in the [VLAN network](https://cloud.ibm.com/classic/network/vlans) by clicking the VLAN that you want to use and noting the ID in the resulting URL. You can also refer to a VLAN name by using a data source.",
          "args": []
        },
        {
          "name": "public_subnet",
          "description": "(Optional, String) The public subnet that is used for the public network interface of the VPX load balancer. Accepted values are primary public networks. You can find accepted values in the [subnet Docs](https://cloud.ibm.com/classic/network/subnets).",
          "args": []
        },
        {
          "name": "private_subnet",
          "description": "(Optional, String) Public subnet that is used for the private network interface of the VPX load balancer. Accepted values are primary private networks. You can find accepted values in the [subnet Docs](https://cloud.ibm.com/classic/network/subnets).",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of strings) Tags associated with the VPX load balancer instance.     **NOTE**: `Tags` are managed locally and not stored on the IBM Cloud Service Endpoint at this moment.",
          "args": []
        }
      ],
      "attrs": []
    },
    "ibm_lb_vpx_ha": {
      "name": "ibm_lb_vpx_ha",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure resources",
      "args": [
        {
          "name": "primary_id",
          "description": "(Required, String) The ID of the primary Netscaler VPX.",
          "args": []
        },
        {
          "name": "secondary_id",
          "description": "(Required, String) The ID of the secondary Netscaler VPX.",
          "args": []
        },
        {
          "name": "stay_secondary",
          "description": "(Optional, Boolean) Specifies whether the secondary Netscaler VPX will  take over the service. Set this argument to `true` to prevent the secondary Netscaler VPX from taking over the service even if the primary Netscaler VPX fails. For more information, see the [Citrix Netscaler Docs](https://docs.citrix.com/en-us/netscaler/10-5/ns-system-wrapper-10-con/ns-nw-ha-intro-wrppr-con/ns-nw-ha-frcng-scndry-nd-sty-scndry-tsk.html) and the [Citrix support documentation  ](https://support.citrix.com/article/CTX116748). The default value is `false`.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of strings) Tags associated with the high availability Netscaler VPX pair instance.     **NOTE**: `Tags` are managed locally and not stored on the IBM Cloud Service Endpoint at this moment.",
          "args": []
        }
      ],
      "attrs": []
    },
    "ibm_lb_vpx_service": {
      "name": "ibm_lb_vpx_service",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure resources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The ID of the VPX load balancer service.",
          "args": []
        },
        {
          "name": "vip_id",
          "description": "(Required, String) The ID of the VPX load balancer virtual IP address to which the service is assigned.",
          "args": []
        },
        {
          "name": "destination_ip_address",
          "description": "(Required, String) The IP address of the server to which traffic directs. If you use Netscaler VPX 10.1, you must indicate a public IP address in an IBM Cloud Classic Infrastructure (SoftLayer) account. If you use Netscaler VPX 10.5, you can use any IP address.",
          "args": []
        },
        {
          "name": "destination_port",
          "description": "(Required, Integer) The destination port of the server to which traffic directs.",
          "args": []
        },
        {
          "name": "weight",
          "description": "(Required, Integer) The percentage of the total connection limit allocated to the load balancer between all your services. See the [IBM Cloud Classic Infrastructure (SoftLayer)  API Docs](http://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_LoadBalancer_Service) for details.       **NOTE**: If you use Netscaler VPX 10.5, the weight value is ignored.",
          "args": []
        },
        {
          "name": "connection_limit",
          "description": "(Required, Integer) The connection limit for this service. Acceptable values are `0`-`4294967294`. See the [Citrix Netscaler Docs](https://docs.citrix.com/en-us/netscaler/11/reference/netscaler-command-reference/basic/service.html) for details.",
          "args": []
        },
        {
          "name": "health_check",
          "description": "(Required, String) The health check type. See the [IBM Cloud Classic Infrastructure (SoftLayer)  API Docs](http://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_LoadBalancer_Service) for details.",
          "args": []
        },
        {
          "name": "usip",
          "description": "(Optional, String) Whether the service reports the source IP of the client to the service being load balanced. Acceptable values are `YES` or `NO`. The default value is `NO`. See the [Citrix Netscaler Docs](https://developer-docs.citrix.com/projects/netscaler-nitro-api/en/11.0/configuration/basic/service/service) for more information.       **NOTE**: This argument is only available for VPX 10.5.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of strings) Tags associated with the VPX load balancer service instance.     **NOTE**: `Tags` are managed locally and not stored on the IBM Cloud Service Endpoint at this moment.",
          "args": []
        }
      ],
      "attrs": []
    },
    "ibm_lb_vpx_vip": {
      "name": "ibm_lb_vpx_vip",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure resources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The ID of the VPX load balancer virtual IP address.",
          "args": []
        },
        {
          "name": "nad_controller_id",
          "description": "(Required, Integer) The ID of the VPX load balancer that the virtual IP address is assigned to.",
          "args": []
        },
        {
          "name": "load_balancing_method",
          "description": "(Required, String) See the [IBM Cloud Classic Infrastructure (SoftLayer)  API Docs](http://sldn.softlayer.com/reference/datatypes/SoftLayer_Network_LoadBalancer_VirtualIpAddress) for available methods. If you use Netscaler VPX 10.5, see the [Citrix Docs](https://docs.citrix.com/en-us/netscaler/10-5/ns-tmg-wrapper-10-con/ns-lb-wrapper-con-10/ns-lb-customizing-lbalgorithms-wrapper-con.html) for more methods that you can use.",
          "args": []
        },
        {
          "name": "persistence",
          "description": "(Optional, String) Applies to Netscaler VPX 10.5 only. See the available persistence types in the [Citrix Docs](https://docs.citrix.com/en-us/netscaler/10-5/ns-tmg-wrapper-10-con/ns-lb-wrapper-con-10/ns-lb-persistence-wrapper-con/ns-lb-persistence-about-con.html).",
          "args": []
        },
        {
          "name": "virtual_ip_address",
          "description": "(Required, String) The public IP address for the VPX load balancer virtual IP.",
          "args": []
        },
        {
          "name": "source_port",
          "description": "(Required, Integer) The source port for the VPX load balancer virtual IP address.",
          "args": []
        },
        {
          "name": "type",
          "description": "(Required, String) The connection type for the VPX load balancer virtual IP address. Accepted values are `HTTP`, `FTP`, `TCP`, `UDP`, `DNS`, and `SSL`. If you set the type to `SSL`, then `security_certificate_id` provides certification for SSL offload services.",
          "args": []
        },
        {
          "name": "security_certificate_id",
          "description": "(Optional, Integer) Applies to Netscaler VPX 10.5 only. The ID of a security certificate that you want to use. This argument provides security certification for SSL offload services. For more information, see the  [ibm_compute_ssl_certificate resource](#ssl-compute-cert).",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of strings) Tags associated with the VPX load balancer virtual IP instance.     **NOTE**: `Tags` are managed locally and not stored on the IBM Cloud Service Endpoint at this moment.",
          "args": []
        }
      ],
      "attrs": []
    },
    "ibm_lbaas": {
      "name": "ibm_lbaas",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure resources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The load balancer's name.",
          "args": []
        },
        {
          "name": "description",
          "description": "(Optional, String) A description of the load balancer.",
          "args": []
        },
        {
          "name": "type",
          "description": "(Optional, String) Specify whether this load balancer is a public or internal facing load balancer. Accepted values are `PUBLIC` or `PRIVATE`. The default is 'PUBLIC'.",
          "args": []
        },
        {
          "name": "subnets",
          "description": "(Required, Array) The subnet where the load balancer will be provisioned. Only one subnet is supported.",
          "args": []
        },
        {
          "name": "protocols",
          "description": "(Optional, Array) A nested block describes the protocols that are assigned to load balancer.",
          "args": [
            {
              "name": "frontend_protocol",
              "description": "(Required, String) The front-end protocol. Accepted values are 'TCP', 'HTTP', and 'HTTPS'.",
              "args": []
            },
            {
              "name": "frontend_port",
              "description": "(Required, Integer) The front-end protocol port number. The port number must be in the range of 1-65535.",
              "args": []
            },
            {
              "name": "backend_protocol",
              "description": "(Required, String) The back-end protocol. Accepted values are 'TCP', 'HTTP', and 'HTTPS'.",
              "args": []
            },
            {
              "name": "backend_port",
              "description": "(Required, Integer) The back-end protocol port number. The port number must be in the range of 1-65535.",
              "args": []
            },
            {
              "name": "load_balancing_method",
              "description": "(Optional, String) The load-balancing algorithm. Accepted values are 'round_robin', 'weighted_round_robin', and 'least_connection'. The default is 'round_robin'.",
              "args": []
            },
            {
              "name": "session_stickiness",
              "description": "(Optional, String) The SOURCE_IP for session stickiness.",
              "args": []
            },
            {
              "name": "max_conn",
              "description": "(Optional, Integer) The maximum number of connections the listener can accept. The number must be 1-64000.",
              "args": []
            },
            {
              "name": "tls_certificate_id",
              "description": "(Optional, Integer) The ID of the SSL/TLS certificate used for a protocol. This ID should be specified when `front-end protocol` has a value of `HTTPS`.",
              "args": []
            }
          ]
        },
        {
          "name": "session_stickiness",
          "description": "(Optional, String) The `SOURCE_IP` or `HTTP_COOKIE` for session stickiness.",
          "args": []
        },
        {
          "name": "ssl_ciphers",
          "description": "(Optional, List) The comma-separated list of SSL Ciphers. You can find list of supported ciphers [SSL_offload](/docs/loadbalancer-service?topic=loadbalancer-service-ssl-offload-with-ibm-cloud-load-balancer).",
          "args": []
        },
        {
          "name": "use_system_public_ip_pool",
          "description": "(Optional, Boolean) Applicable for public load balancer only. It specifies whether the public IP addresses are allocated from system public IP pool or public subnet from the account order of the load balancer. The default value is `true`.",
          "args": []
        },
        {
          "name": "wait_time_minutes",
          "description": "(Required, Integer) The duration, expressed in minutes, to wait for the LBaaS instance to become available before declaring it as created. It is also the same amount of time waited for deletion to finish. The default value is `90`.",
          "args": []
        }
      ],
      "attrs": []
    },
    "ibm_lbaas_health_monitor": {
      "name": "ibm_lbaas_health_monitor",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure resources",
      "args": [
        {
          "name": "monitor_id",
          "description": "(Required, String) Health Monitor unique identifier. The monitor ID can be imported from either the `ibm_lbaas` resource or datasource. For example, `ibm_lbaas.lbaas.health_monitors.X.monitor_id` or `data.ibm_lbaas.lbaas.health_monitors.X.monitor_id`",
          "args": []
        },
        {
          "name": "lbaas_id",
          "description": "(Required, String) LBaaS unique identifier",
          "args": []
        },
        {
          "name": "protocol",
          "description": "(Required, String) The back-end protocol",
          "args": []
        },
        {
          "name": "port",
          "description": "(Required, Integer) The back-end port",
          "args": []
        },
        {
          "name": "interval",
          "description": "(Optional, Integer) Interval in seconds to perform",
          "args": []
        },
        {
          "name": "max_retries",
          "description": "(Optional, Integer) Maximum retries",
          "args": []
        },
        {
          "name": "timeout",
          "description": "(Optional, Integer) Health check methods timeout in",
          "args": []
        },
        {
          "name": "url_path",
          "description": "(Optional, String) If monitor is \"HTTP\", it specifies the URL path.",
          "args": []
        }
      ],
      "attrs": []
    },
    "ibm_lbaas_server_instance_attachment": {
      "name": "ibm_lbaas_server_instance_attachment",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure resources",
      "args": [
        {
          "name": "private_ip_address",
          "description": "(Required, String) The private IP address of a load balancer member.",
          "args": []
        },
        {
          "name": "weight",
          "description": "(Optional, Integer) The weight of a load balancer member.",
          "args": []
        },
        {
          "name": "lbaas_id",
          "description": "(Required, String) The UUID of a load balancer.",
          "args": []
        },
        {
          "name": "depends_on",
          "description": "(Required, String) The UUID of a load balancer",
          "args": []
        }
      ],
      "attrs": []
    },
    "ibm_multivlan_firewall": {
      "name": "ibm_multivlan_firewall",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure resources",
      "args": [
        {
          "name": "datacenter",
          "description": "(Required, String) The data center in which the firewall appliance resides.",
          "args": []
        },
        {
          "name": "pod",
          "description": "(Required, String) The pod in which the firewall resides",
          "args": []
        },
        {
          "name": "name",
          "description": "(Required, String) The name of the firewall device",
          "args": []
        },
        {
          "name": "firewall_type",
          "description": "(Required, String) The type of the firewall device. Supported values include `FortiGate Security Appliance` and `FortiGate Firewall Appliance HA Option`.",
          "args": []
        },
        {
          "name": "addon_configuration",
          "description": "(Required, List) ) The list of add-ons that are allowed. Allowed values are `FortiGate Security Appliance) - Web Filtering Add-on (High Availability)`,`FortiGate Security Appliance - NGFW Add-on (High Availability)`,`FortiGate Security Appliance - AV Add-on (High Availability)` or `FortiGate Security Appliance - Web Filtering Add-on`, `FortiGate Security Appliance - NGFW Add-on`,`FortiGate Security Appliance - AV Add-on`.",
          "args": []
        }
      ],
      "attrs": []
    },
    "ibm_network_gateway": {
      "name": "ibm_network_gateway",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure resources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the gateway.",
          "args": []
        },
        {
          "name": "ssh_key_ids",
          "description": "(Optional, List) The SSH key IDs to install on the gateway when the gateway gets created.",
          "args": []
        },
        {
          "name": "post_install_script_uri",
          "description": "(Optional, String) The URI of the script to be downloaded and executed after the gateway installation is complete. Default value is `nil`.",
          "args": []
        },
        {
          "name": "members",
          "description": "(Required, List) A nested block describes the hardware members of this network gateway.",
          "args": [
            {
              "name": "hostname",
              "description": "(Optional, String) Hostname of the member.",
              "args": []
            },
            {
              "name": "domain",
              "description": "(Required, String) The domain of the member",
              "args": []
            },
            {
              "name": "notes",
              "description": "(Optional, String) Descriptive text of up to 1000 characters about the member.",
              "args": []
            },
            {
              "name": "datacenter",
              "description": "(Required, String) The data center in which you want to provision the member.",
              "args": []
            },
            {
              "name": "network_speed",
              "description": "(Optional, Integer) The connection speed (in Mbps) for the member network components. Default value is `100`.",
              "args": []
            },
            {
              "name": "redundant_power_supply",
              "description": "(Optional, Boolean) When the value is `true`, more power supply is provided. Default value is `false`",
              "args": []
            },
            {
              "name": "tcp_monitoring",
              "description": "(Optional, Boolean) Whether to enable TCP monitoring for the member. Default value is `false`.",
              "args": []
            },
            {
              "name": "process_key_name",
              "description": "(Optional, String) The process key name for the member. Default value is  `INTEL_SINGLE_XEON_1270_3_40_2`. Refer to the same attribute on the `ibm_compute_bare_metal` resource.",
              "args": []
            },
            {
              "name": "package_key_name",
              "description": "(Optional, String) The key name for the network gateway package. You can find available package key names in the SoftLayer API URL `https://api.softlayer.com/rest/v3/SoftLayer_Product_Package/getAllObjects?objectFilter={\"type\":{\"keyName\":{\"operation\":\"BARE_METAL_GATEWAY\"}}}` that uses your API key as the password. Default value is `NETWORK_GATEWAY_APPLIANCE`. The default value will allow order Single processor multi-core Servers. Use `2U_NETWORK_GATEWAY_APPLIANCE_1O_GBPS` for ordering Dual processor multi-core Servers.",
              "args": []
            },
            {
              "name": "os_key_name",
              "description": "(Optional, String) The os key name for member. Default value is  `OS_VYATTA_5600_5_X_UP_TO_1GBPS_SUBSCRIPTION_EDITION_64_BIT`. Refer to the same attribute on the `ibm_compute_bare_metal` resource.",
              "args": []
            },
            {
              "name": "redundant_network",
              "description": "(Optional, Boolean) When the value is `true`, two physical network interfaces are provided with a bonding configuration. Default value is `false`.",
              "args": []
            },
            {
              "name": "unbonded_network",
              "description": "(Optional, Boolean) When the value is `true`, two physical network interfaces are provided without a bonding configuration. Default value is `false`.",
              "args": []
            },
            {
              "name": "tags",
              "description": "(Optional, Set) Tags associated with the VM instance. Permitted characters include: A-Z, 0-9, whitespace, `_` (underscore), `-` (hyphen), `.` (period), and `:` (colon). All other characters are removed.",
              "args": []
            },
            {
              "name": "public_bandwidth",
              "description": "(Optional, Integer) Allowed public network traffic (in GB) per month. Default value is `20000`.",
              "args": []
            },
            {
              "name": "memory",
              "description": "(Required, Integer) The amount of memory, expressed in megabytes, that you want to allocate.",
              "args": []
            },
            {
              "name": "storage_groups",
              "description": "(Optional, List) A nested block describes the storage group for the member of the network gateway. Nested `storage_groups` blocks have the following structure:",
              "args": [
                {
                  "name": "array_type_id",
                  "description": "(Required, Integer) The ID of the array type.",
                  "args": []
                },
                {
                  "name": "hard_drives",
                  "description": "(Required, List) The list of hard disk associated with the gateway member.",
                  "args": []
                },
                {
                  "name": "array_size",
                  "description": "(Optional, Integer) The size of the array.",
                  "args": []
                },
                {
                  "name": "partition_template_id",
                  "description": "(Optional, Integer) The partition template ID for the member.",
                  "args": []
                }
              ]
            },
            {
              "name": "ssh_key_ids",
              "description": "(Optional, List) The SSH key IDs to install on the member.",
              "args": []
            },
            {
              "name": "post_install_script_uri",
              "description": "(Optional, String) The URI of the script to be downloaded and executed on the member. Default value is `nil`.",
              "args": []
            },
            {
              "name": "user_metadata",
              "description": "(Optional, String) Arbitrary data to be made available to the member.",
              "args": []
            },
            {
              "name": "disk_key_names",
              "description": "(Optional, List) Provide the disk key name. Refer to the same attribute in the `ibm_compute_bare_metal` resource.",
              "args": []
            },
            {
              "name": "public_vlan_id",
              "description": "(Optional, Integer) ID of the public VLAN.",
              "args": []
            },
            {
              "name": "private_vlan_id",
              "description": "(Optional, Integer) ID of the private VLAN.       **NOTE**: If there are two members in this gateway, then both should have same value for `public_vlan_id` and `private_vlan_id`.",
              "args": []
            },
            {
              "name": "ipv6_enabled",
              "description": "(Optional, Boolean) Whether to enable IPv6. Default value is `true`.",
              "args": []
            },
            {
              "name": "private_network_only",
              "description": "(Optional, Boolean) Whether to enable a private network only. Default value is `false`.",
              "args": []
            }
          ]
        }
      ],
      "attrs": []
    },
    "ibm_network_gateway_vlan_association": {
      "name": "ibm_network_gateway_vlan_association",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure resources",
      "args": [
        {
          "name": "gateway_id",
          "description": "(Required, Integer) The ID of the network gateway.",
          "args": []
        },
        {
          "name": "network_vlan_id",
          "description": "(Required, Integer) The ID of the network VLAN to associate with the network gateway.",
          "args": []
        },
        {
          "name": "bypass",
          "description": "(Optional, Boolean) Indicates if the VLAN should be in bypass or routed mode. Default value is `true`.",
          "args": []
        }
      ],
      "attrs": []
    },
    "ibm_network_interface_sg_attachment": {
      "name": "ibm_network_interface_sg_attachment",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure resources",
      "args": [
        {
          "name": "security_group_id",
          "description": "(Required, Integer) The ID of the security group.",
          "args": []
        },
        {
          "name": "network_interface_id",
          "description": "(Required, Integer) The ID of the network interface to which the security group must be applied.",
          "args": []
        },
        {
          "name": "soft_reboot",
          "description": "(Optional, Boolean) Default `true`. If set to **true** and a reboot is required to apply the security group attachment for the virtual server instance, then a soft reboot is performed. If set to **false**, no reboot is performed. **Note**: A reboot is always required the first time a security group is applied to a network interface of a virtual server instance that was never rebooted before.",
          "args": []
        }
      ],
      "attrs": []
    },
    "ibm_network_public_ip": {
      "name": "ibm_network_public_ip",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure resources",
      "args": [
        {
          "name": "routes_to",
          "description": "(Required, String) The destination IP address that the public IP routes traffic through. The destination IP address can be a public IP address of IBM resources in the same account, such as a public IP address of a VM or public virtual IP addresses of `NetscalerVPXs`.",
          "args": []
        },
        {
          "name": "notes",
          "description": "(Optional, String) Descriptive text to associate with the public IP instance.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of strings) Tags associated with the public IP instance.     **NOTE**: `Tags` are managed locally and not stored on the IBM Cloud Service Endpoint at this moment.",
          "args": []
        }
      ],
      "attrs": []
    },
    "ibm_network_vlan": {
      "name": "ibm_network_vlan",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure resources",
      "args": [
        {
          "name": "datacenter",
          "description": "(Required, String) The data center in which the VLAN resides.",
          "args": []
        },
        {
          "name": "type",
          "description": "(Required, String) The type of VLAN. Accepted values are `PRIVATE` and `PUBLIC`.",
          "args": []
        },
        {
          "name": "subnet_size",
          "description": "(Required, Integer) The size of the primary subnet for the VLAN. Accepted values are `8`, `16`, `32`, and `64`. This field has been removed.",
          "args": []
        },
        {
          "name": "name",
          "description": "(Optional, String) The name of the VLAN. Maximum length of 20 characters.",
          "args": []
        },
        {
          "name": "router_hostname",
          "description": "(Optional, String) The hostname of the primary router associated with the VLAN.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of strings) Tags associated with the VLAN. Permitted characters include: A-Z, 0-9, whitespace, `_` (underscore), `-` (hyphen), `.` (period), and `:` (colon). All other characters are removed.",
          "args": []
        }
      ],
      "attrs": []
    },
    "ibm_network_vlan_spanning": {
      "name": "ibm_network_vlan_spanning",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure resources",
      "args": [],
      "attrs": []
    },
    "ibm_object_storage_account": {
      "name": "ibm_object_storage_account",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure resources",
      "args": [],
      "attrs": []
    },
    "ibm_org": {
      "name": "ibm_org",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Cloud Foundry resources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The descriptive name used of the Cloud Foundry organization. The name must be unique in IBM Cloud.",
          "args": []
        },
        {
          "name": "org_quota_definition_guid",
          "description": "(Optional, String) The GUID for the quota that is assigned to organization. The quota sets memory, service, and instance limits for the organization.",
          "args": []
        },
        {
          "name": "managers",
          "description": "(Optional, Set) The email addresses of the users that you want to assign Cloud Foundry **Manager** access to. The email address needs to be associated with an IBMid. Managers have the following permissions within the org: <ul><li>Create, view, edit, or delete spaces.</li><li>View usage and quota information.</li><li>Invite users and manage user access. </li><li> Assign roles to users.</li><li>Manage custom domains.</li></ul>",
          "args": []
        },
        {
          "name": "users",
          "description": "(Optional, Set) The email addresses of the users that you want to grant org-level access to. The email address needs to be associated with an IBMid.",
          "args": []
        },
        {
          "name": "auditors",
          "description": "(Optional, Set) The email addresses of the users that you want to assign Cloud Foundry **Auditor** access to. The email address needs to be associated with an IBMid. Auditors have the following permissions within the org: <ul><li>View users and their assigned roles.</li><li>View quota information.</li></ul>",
          "args": []
        },
        {
          "name": "billing_managers",
          "description": "(Optional, Set) The email addresses of the users that you want to assign the **Billing manager** access to. The email address needs to be associated with an IBMid. Billing managers have the following permissions within the org: <ul><li>View runtime and service usage information on the usage dashboard.</li></ul>",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the Cloud Foundry organization.",
          "args": []
        }
      ]
    },
    "ibm_pi_image": {
      "name": "ibm_pi_image",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Power Systems resources",
      "args": [
        {
          "name": "pi_image_name",
          "description": "(Required, String) The name of the image.",
          "args": []
        },
        {
          "name": "pi_image_id",
          "description": "(Required, String) The ID of the image.",
          "args": []
        },
        {
          "name": "pi_cloud_instance_id",
          "description": "(Required, String) The GUID of the service instance associated with an account.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the image.",
          "args": []
        },
        {
          "name": "image_id",
          "description": "The unique identifier of the image.",
          "args": []
        }
      ]
    },
    "ibm_pi_instance": {
      "name": "ibm_pi_instance",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Power Systems resources",
      "args": [
        {
          "name": "pi_cloud_instance_id",
          "description": "(Required, String) The GUID of the service instance associated with an account.",
          "args": []
        },
        {
          "name": "pi_image_id",
          "description": "(Required, String) The ID of the image that you want to use for your Power Systems Virtual Server instance. The image determines the operating system that is installed in your instance. To list available images, run the `ibmcloud pi images` command.",
          "args": []
        },
        {
          "name": "pi_instance_name",
          "description": "(Required, String) The name of the Power Systems Virtual Server instance.",
          "args": []
        },
        {
          "name": "pi_key_pair_name",
          "description": "(Required, String) The name of the SSH key that you want to use to access your Power Systems Virtual Server instance. The SSH key must be uploaded to IBM Cloud.",
          "args": []
        },
        {
          "name": "pi_memory",
          "description": "(Required, Float) The amount of memory that you want to assign to your instance in gigabytes.",
          "args": []
        },
        {
          "name": "pi_network_ids",
          "description": "(Required, String) The list of network IDs that you want to assign to the instance.",
          "args": []
        },
        {
          "name": "pi_pin_policy",
          "description": "(Optional, String) Select the pinning policy for your Power Systems Virtual Server instance. Supported values are `soft`, `hard`, and `none`. You can choose to soft pin (`soft`) or hard pin (`hard`) a virtual server to the physical host where it runs. When you soft pin an instance for high availability, the instance automatically migrates back to the original host once the host is back to its operating state. If the instance has a licensing restriction with the host, the hard pin option restricts the movement of the instance during remote restart, automated remote restart, DRO, and live partition migration. The default pinning policy is `none`.",
          "args": []
        },
        {
          "name": "pi_processors",
          "description": "(Required, Float) The number of vCPUs to assign to the VM (as visible within the guest operating system).",
          "args": []
        },
        {
          "name": "pi_proc_type",
          "description": "(Required, String) The type of processor mode in which the VM will run (shared/dedicated).",
          "args": []
        },
        {
          "name": "pi_replicants",
          "description": "(Optional, Float) The number of instances that you want to provision with the same configuration. If this parameter is not set,  `1` is used by default.",
          "args": []
        },
        {
          "name": "pi_replication_policy",
          "description": "(Optional, String) The replication policy that you want to use. If this parameter is not set, `none` is used by default.",
          "args": []
        },
        {
          "name": "pi_replication_scheme",
          "description": "(Optional, String) The replication scheme that you want to set (prefix/suffix).",
          "args": []
        },
        {
          "name": "pi_sys_type",
          "description": "(Required, String) The type of system on which to create the VM (s922/e880/any).",
          "args": []
        },
        {
          "name": "pi_user_data",
          "description": "(Optional, String) The base64-encoded form of the user data (cloud-init) to pass to the instance during creation.",
          "args": []
        },
        {
          "name": "pi_virtual_cores_assigned",
          "description": "(Optional, Integer) Specify the number of virtual cores to be assigned.",
          "args": []
        },
        {
          "name": "pi_volume_ids",
          "description": "(Required, String) The list of volume IDs that you want to attach to the instance during creation.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "addresses",
          "description": "A list of addresses that are assigned to the instance.",
          "args": [
            {
              "name": "ip",
              "description": "The IP address of the instance.",
              "args": []
            },
            {
              "name": "macaddress",
              "description": "The MAC address of the instance.",
              "args": []
            },
            {
              "name": "networkid",
              "description": "The network ID of the instance.",
              "args": []
            },
            {
              "name": "network_name",
              "description": "The network name of the instance.",
              "args": []
            },
            {
              "name": "type",
              "description": "The type of network.",
              "args": []
            },
            {
              "name": "externalip",
              "description": "The external IP address of the instance.",
              "args": []
            }
          ]
        },
        {
          "name": "id",
          "description": "The unique identifier of the instance. The ID is composed of `<power_instance_id>/<instance_id>`.",
          "args": []
        },
        {
          "name": "instance_id",
          "description": "The unique identifier of the instance.",
          "args": []
        },
        {
          "name": "pin_policy",
          "description": "The pinning policy of the instance.",
          "args": []
        },
        {
          "name": "progress",
          "description": "Specifies the overall progress of the instance deployment process in percentage.",
          "args": []
        },
        {
          "name": "status",
          "description": "The status of the instance.",
          "args": []
        },
        {
          "name": "health_status",
          "description": "The health status of the VM.",
          "args": []
        },
        {
          "name": "migratable",
          "description": "Indicates the VM is migrated or not.",
          "args": []
        },
        {
          "name": "max_processors",
          "description": "The maximum number of processors that can be allocated to the instance with shutting down or rebooting the `LPAR`.",
          "args": []
        },
        {
          "name": "max_virtual_cores",
          "description": "The maximum number of virtual cores.",
          "args": []
        },
        {
          "name": "min_processors",
          "description": "The minimum number of processors that the instance can have.",
          "args": []
        },
        {
          "name": "min_memory",
          "description": "The minimum memory that was allocated to the instance.",
          "args": []
        },
        {
          "name": "max_memory",
          "description": "The maximum amount of memory that can be allocated to the instance without shut down or reboot the `LPAR`.",
          "args": []
        },
        {
          "name": "min_virtual_cores",
          "description": "The minimum number of virtual cores.",
          "args": []
        }
      ]
    },
    "ibm_pi_key": {
      "name": "ibm_pi_key",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Power Systems resources",
      "args": [
        {
          "name": "pi_cloud_instance_id",
          "description": "(Required, String) The GUID of the service instance associated with an account.",
          "args": []
        },
        {
          "name": "pi_ssh_key",
          "description": "(Required, String) The value of the public SSH key.",
          "args": []
        },
        {
          "name": "pi_creation_date",
          "description": "(Optional, String) The date when the SSH key was created.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the key. The ID is composed of `<power_instance_id>/<key_name>`.",
          "args": []
        },
        {
          "name": "key_id",
          "description": "The unique identifier of the key.",
          "args": []
        }
      ]
    },
    "ibm_pi_network": {
      "name": "ibm_pi_network",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Power Systems resources",
      "args": [
        {
          "name": "pi_cloud_instance_id",
          "description": "(Required, String) The GUID of the service instance associated with an account.",
          "args": []
        },
        {
          "name": "pi_network_name",
          "description": "(Required, String) The name of the network.",
          "args": []
        },
        {
          "name": "pi_network_type",
          "description": "(Required, String) The type of network that you want to create, such as `pub-vlan` or `vlan`.",
          "args": []
        },
        {
          "name": "pi_dns",
          "description": "(Optional, List of strings) List of DNS entries for the network. Required for `vlan` network type.",
          "args": []
        },
        {
          "name": "pi_cidr",
          "description": "(Optional, String) The network CIDR. Required for `vlan` network type.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "networkid",
          "description": "The unique identifier of the network.",
          "args": []
        },
        {
          "name": "vlanid",
          "description": "The ID of the VLAN that your network is attached to.",
          "args": []
        }
      ]
    },
    "ibm_pi_network_port": {
      "name": "ibm_pi_network_port",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Power Systems resources",
      "args": [
        {
          "name": "pi_instance_name",
          "description": "(Required, String) The name of the VM.",
          "args": []
        },
        {
          "name": "pi_cloud_instance_id",
          "description": "(Required, String) The GUID of the service instance associated with an account.",
          "args": []
        },
        {
          "name": "pi_network_port_description",
          "description": "(Optional, String) The description for the Network Port.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the instance. The ID is composed of <power_network_port_id>/<id>.",
          "args": []
        },
        {
          "name": "ipaddress",
          "description": "The unique identifier of the instance.",
          "args": []
        },
        {
          "name": "macaddress",
          "description": "The MAC address of the port.",
          "args": []
        },
        {
          "name": "status",
          "description": "The status of the port.",
          "args": []
        },
        {
          "name": "portid",
          "description": "The ID of the port.",
          "args": []
        },
        {
          "name": "public_ip",
          "description": "The public IP associated with the port.",
          "args": []
        }
      ]
    },
    "ibm_pi_snapshot": {
      "name": "ibm_pi_snapshot",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Power Systems resources",
      "args": [
        {
          "name": "pi_instance_name",
          "description": "(Required, String) The name of the instance you want to take a snapshot of.",
          "args": []
        },
        {
          "name": "pi_snapshot_name",
          "description": "(Required, String) The unique name of the snapshot.",
          "args": []
        },
        {
          "name": "description",
          "description": "(Optional, String) The description for the snapshot.",
          "args": []
        },
        {
          "name": "pi_volume_ids",
          "description": "(Optional, String) The volume ID, if none provided then all volumes of the instance will be part of the snapshot.",
          "args": []
        },
        {
          "name": "pi_cloud_instance_id",
          "description": "(Required, String) The GUID of the service instance associated with an account.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the snapshot. The ID is composed of <power_instance_id>/<pi_snap_shot_id>.",
          "args": []
        },
        {
          "name": "volume_snapshots",
          "description": "A map of the source and target volumes.",
          "args": []
        }
      ]
    },
    "ibm_pi_volume": {
      "name": "ibm_pi_volume",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Power Systems resources",
      "args": [
        {
          "name": "pi_cloud_instance_id",
          "description": "(Required, String) The GUID of the service instance associated with an account.",
          "args": []
        },
        {
          "name": "pi_volume_name",
          "description": "(Required, String) The name of the volume.",
          "args": []
        },
        {
          "name": "pi_volume_shareable",
          "description": "(Required, Boolean) If set to **true**, the volume can be shared across Power Systems Virtual Server instances. If set to **false**, you can attach it only to one instance.",
          "args": []
        },
        {
          "name": "pi_volume_size",
          "description": "(Required, Integer) The size of the volume in gigabytes.",
          "args": []
        },
        {
          "name": "pi_volume_type",
          "description": "(Required, String) The type of volume that you want to create. Supported values are `ssd`, `standard`, `tier1`, and `tier3`.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the volume. The ID is composed of `<power_instance_id>/<volume_id>`.",
          "args": []
        },
        {
          "name": "status",
          "description": "The status of the volume.",
          "args": []
        },
        {
          "name": "volume_id",
          "description": "The unique identifier of the volume.",
          "args": []
        },
        {
          "name": "wwn",
          "description": "The world wide name of the volume.",
          "args": []
        }
      ]
    },
    "ibm_resource_group": {
      "name": "ibm_resource_group",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Resource management resources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The name of the resource group.",
          "args": []
        },
        {
          "name": "quota_id",
          "description": "(Removed, String) The ID of the quota. You can refer to a quota by using the resource quota data source name.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of strings) Tags associated with the resource group instance. The tags are managed locally and not stored on the IBM Cloud Service Endpoint at this moment.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the new resource group.",
          "args": []
        },
        {
          "name": "default",
          "description": "Specifies whether its default resource group or not.",
          "args": []
        },
        {
          "name": "state",
          "description": "State of the resource group.",
          "args": []
        }
      ]
    },
    "ibm_resource_instance": {
      "name": "ibm_resource_instance",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Resource management resources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) A descriptive name used to identify the resource instance.",
          "args": []
        },
        {
          "name": "service",
          "description": "(Required, String) The name of the service offering. You can retrieve the value by installing the `catalogs-management` command line plug-in and running the `ibmcloud catalog service-marketplace` or `ibmcloud catalog search` command. For more information, about IBM Cloud catalog service marketplace, refer [IBM Cloud catalog service marketplace](/docs/cli?topic=cli-ibmcloud_catalog#ibmcloud_catalog_service_marketplace).",
          "args": []
        },
        {
          "name": "plan",
          "description": "(Required, String) The name of the plan type supported by service. You can retrieve the value by running the `ibmcloud catalog service <servicename>` command.",
          "args": []
        },
        {
          "name": "location",
          "description": "(Required, String) Target location or environment to create the resource instance.",
          "args": []
        },
        {
          "name": "resource_group_id",
          "description": "(Optional, String) The ID of the resource group where you want to create the service. You can retrieve the value from data source `ibm_resource_group`. If not provided creates the service in default resource group.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of strings) Tags associated with the instance.",
          "args": []
        },
        {
          "name": "parameters",
          "description": "(Optional, Map) Arbitrary parameters to create instance. The value must be a JSON object.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the new resource instance.",
          "args": []
        },
        {
          "name": "guid",
          "description": "The GUID of the resource instance.",
          "args": []
        },
        {
          "name": "status",
          "description": "The status of resource instance.",
          "args": []
        },
        {
          "name": "extensions",
          "description": "The extended metadata as a map associated with the resource instance.",
          "args": []
        },
        {
          "name": "dashboard_url",
          "description": "The dashboard URL of the new resource instance.",
          "args": []
        }
      ]
    },
    "ibm_resource_key": {
      "name": "ibm_resource_key",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Resource management resources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) A descriptive name used to identify a resource key.",
          "args": []
        },
        {
          "name": "role",
          "description": "(Required, String) The name of the user role. Valid roles are `Writer`, `Reader`, `Manager`, `Administrator`, `Operator`, `Viewer`, and `Editor`.",
          "args": []
        },
        {
          "name": "parameters",
          "description": "(Optional, Map) Arbitrary parameters to pass to the resource in JSON format. If you want to create service credentials by using the private service endpoint, include the `service-endpoints =  \"private\"` parameter.",
          "args": []
        },
        {
          "name": "resource_instance_id",
          "description": "(Optional, String) The ID of the resource instance associated with the resource key. **NOTE**: Conflicts with `resource_alias_id`.",
          "args": []
        },
        {
          "name": "resource_alias_id",
          "description": "(Optional, String) The ID of the resource alias associated with the resource key. **NOTE**: Conflicts with `resource_instance_id`.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of strings) Tags associated with the resource key instance. Tags are managed locally and not stored on the IBM Cloud Service Endpoint at this moment.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the new resource key.",
          "args": []
        },
        {
          "name": "credentials",
          "description": "The credentials associated with the key.",
          "args": []
        },
        {
          "name": "status",
          "description": "Status of resource key.",
          "args": []
        }
      ]
    },
    "ibm_security_group": {
      "name": "ibm_security_group",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure resources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The descriptive name that is used to identify the security group.",
          "args": []
        },
        {
          "name": "description",
          "description": "(Optional, String) More details to describe the security group.",
          "args": []
        }
      ],
      "attrs": []
    },
    "ibm_security_group_rule": {
      "name": "ibm_security_group_rule",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure resources",
      "args": [
        {
          "name": "direction",
          "description": "(Required, String) The direction of traffic. Accepted values: `ingress` or `egress`.",
          "args": []
        },
        {
          "name": "ether_type",
          "description": "(Optional, String) The IP version. Accepted values  (case-sensitive): `IPv4` or `IPv6`. Default value is `IPv4`.",
          "args": []
        },
        {
          "name": "port_range_min",
          "description": "(Optional, Integer) The start of the port range for allowed traffic.",
          "args": []
        },
        {
          "name": "port_range_max",
          "description": "(Optional, Integer) The end of the port range for allowed traffic.",
          "args": []
        },
        {
          "name": "protocol",
          "description": "(Optional, String) The IP protocol type. Accepted values (case-sensitive): `icmp`,`tcp`, or `udp`.",
          "args": []
        },
        {
          "name": "remote_group_id",
          "description": "(Optional, Integer) The ID of the remote security group allowed as part of the rule.       **NOTE**: Conflicts with `remote_ip`.",
          "args": []
        },
        {
          "name": "remote_ip",
          "description": "(Optional, String) The CIDR or IP address for allowed connections.       **NOTE**: Conflicts with `remote_group_id`.",
          "args": []
        },
        {
          "name": "security_group_id",
          "description": "(Required, Integer) The ID of the security group this rule belongs to.",
          "args": []
        }
      ],
      "attrs": []
    },
    "ibm_service_instance": {
      "name": "ibm_service_instance",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Cloud Foundry resources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) A descriptive name for the service instance.",
          "args": []
        },
        {
          "name": "space_guid",
          "description": "(Required, String) The GUID of the Cloud Foundry space where you want to create the service. You can retrieve the value from data source `ibm_space`.",
          "args": []
        },
        {
          "name": "service",
          "description": "(Required, String) The name of the service offering. You can retrieve the value by running the `ibmcloud service offerings` command in the IBM Cloud CLI.",
          "args": []
        },
        {
          "name": "plan",
          "description": "(Required, String) The name of the service plan that you want. You can retrieve the value by running the `ibmcloud service offerings` command in the IBM Cloud CLI.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of strings) The tags that you want to add to the service instance. Tags can help you to find the instance more easily later.",
          "args": []
        },
        {
          "name": "parameters",
          "description": "(Optional, Map) Arbitrary parameters to pass to the service broker. The value must be a JSON object.",
          "args": []
        },
        {
          "name": "wait_time_minutes",
          "description": "(Optional, Integer) The number of minutes to wait for the service instance to become available before declaring it as created. The same number of minutes is used for the deletion to finish. The default value is `10`.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the new service instance.",
          "args": []
        },
        {
          "name": "credentials",
          "description": "The credentials provided by the service broker to use the service.",
          "args": []
        },
        {
          "name": "service_keys",
          "description": "The service keys associated with the service.",
          "args": []
        },
        {
          "name": "service_plan_guid",
          "description": "The plan of the service offering used by this service instance.",
          "args": []
        }
      ]
    },
    "ibm_service_key": {
      "name": "ibm_service_key",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Cloud Foundry resources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) A descriptive name for the service key.",
          "args": []
        },
        {
          "name": "parameters",
          "description": "(Optional, Map) Arbitrary parameters to pass along to the service broker. Must be a JSON object.",
          "args": []
        },
        {
          "name": "service_instance_guid",
          "description": "(Required, String) The GUID of the service instance for which you create the service key.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of strings) The tags that you want to add to the service key instance. Tags can help you find the service keys more easily later.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the new service key.",
          "args": []
        },
        {
          "name": "credentials",
          "description": "The credentials associated with the key.",
          "args": []
        }
      ]
    },
    "ibm_space": {
      "name": "ibm_space",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Cloud Foundry resources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The descriptive name for the space.",
          "args": []
        },
        {
          "name": "org",
          "description": "(Required, String) The name of the Cloud Foundry organization to which this space belongs.",
          "args": []
        },
        {
          "name": "space_quota",
          "description": "(Optional, String) The name of the space quota definition that is associated with the space.",
          "args": []
        },
        {
          "name": "managers",
          "description": "(Optional, Set) The email addresses (associated with IBM IDs) of the users to whom you want to give a manager role in this space. Users with the manager role can invite users, manage users, and enable features for the given space.",
          "args": []
        },
        {
          "name": "developers",
          "description": "(Optional, Set) The email addresses (associated with IBM IDs) of the users to whom you want to give a developer role in this space. Users with the developer role can create apps and services, manage apps and services, and see logs and reports in the given space.",
          "args": []
        },
        {
          "name": "auditors",
          "description": "(Optional, Set) The email addresses (associated with IBM IDs) of the users to whom you want to give an auditor role in this space. Users with the auditor role can view logs, reports, and settings in the given space.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of strings) The tags that you want to add to the space. Tags can help you find the space more easily later.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the new space.",
          "args": []
        }
      ]
    },
    "ibm_ssl_certificate": {
      "name": "ibm_ssl_certificate",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure resources",
      "args": [],
      "attrs": []
    },
    "ibm_storage_block": {
      "name": "ibm_storage_block",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure resources",
      "args": [
        {
          "name": "type",
          "description": "(Required, String) The type of the storage. Accepted values are `Endurance` and `Performance`.",
          "args": []
        },
        {
          "name": "datacenter",
          "description": "(Required, String) The data center where you want to provision the block storage instance.",
          "args": []
        },
        {
          "name": "capacity",
          "description": "(Required, Integer) The amount of storage capacity that you want to allocate, specified in gigabytes.",
          "args": []
        },
        {
          "name": "iops",
          "description": "(Required, Float) The IOPS value for the storage. For supported values.",
          "args": []
        },
        {
          "name": "os_format_type",
          "description": "(Required, String) The OS type used to format the storage space. This OS type must match the OS type that connects to the LUN. [Log in to the IBM Cloud Classic Infrastructure API to see available OS format types](https://api.softlayer.com/rest/v3/SoftLayer_Network_Storage_Iscsi_OS_Type/getAllObjects/). Use your API as the password to log in. Log in and find the key called `name`.",
          "args": []
        },
        {
          "name": "snapshot_capacity",
          "description": "(Optional, Integer) The amount of snapshot capacity to allocate, specified in gigabytes.",
          "args": []
        },
        {
          "name": "allowed_virtual_guest_ids",
          "description": "(Optional, Array of integers) The virtual guests that you want to give access to this instance. Virtual guests must be in the same data center as the block storage. You can also use this field to import the list of virtual guests that have access to this storage from the `block_storage_ids` argument in the `ibm_compute_vm_instance` resource.",
          "args": []
        },
        {
          "name": "allowed_hardware_ids",
          "description": "(Optional, Array of integers) The Bare Metal servers that you want to give access to this instance. Bare Metal servers must be in the same data center as the block storage. You can also use this field to import the list of Bare Metal servers that have access to this storage from the `block_storage_ids` argument in the `ibm_compute_bare_metal` resource.",
          "args": []
        },
        {
          "name": "allowed_ip_addresses",
          "description": "(Optional, Array of strings) The IP addresses that you want to give access to this instance. IP addresses must be in the same data center as the block storage.",
          "args": []
        },
        {
          "name": "notes",
          "description": "(Optional, Strings) A descriptive note that you want to associate with the block storage.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of strings) Tags associated with the storage block instance.     **NOTE**: `Tags` are managed locally and not stored on the IBM Cloud Service Endpoint at this moment.",
          "args": []
        },
        {
          "name": "hourly_billing",
          "description": "(Optional, Boolean) Set true to enable hourly billing. Default value is **false**   **NOTE**: `Hourly billing` is only available in updated data centers with improved capabilities. Refer to the link to get the updated list of data centers. See [Data Center locations](/docs/FileStorage?topic=FileStorage-selectDC)",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the storage.",
          "args": []
        },
        {
          "name": "hostname",
          "description": "The fully qualified domain name of the storage.",
          "args": []
        },
        {
          "name": "allowed_virtual_guest_info",
          "description": "Deprecated please use `allowed_host_info` instead.",
          "args": []
        },
        {
          "name": "allowed_hardware_info",
          "description": "Deprecated please use `allowed_host_info` instead.",
          "args": []
        },
        {
          "name": "allowed_host_info",
          "description": "The user name, password, and host IQN of the hosts with access to the storage.",
          "args": []
        },
        {
          "name": "lunid",
          "description": "The `LUN` ID of the storage device.",
          "args": []
        },
        {
          "name": "volumename",
          "description": "The name of the storage volume.",
          "args": []
        }
      ]
    },
    "ibm_storage_evault": {
      "name": "ibm_storage_evault",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure resources",
      "args": [
        {
          "name": "datacenter",
          "description": "(Required, String) The data center where you want to provision the EVault  storage instance.",
          "args": []
        },
        {
          "name": "capacity",
          "description": "(Required, Integer) The amount of storage capacity that you want to allocate, specified in gigabytes.",
          "args": []
        },
        {
          "name": "virtual_instance_id",
          "description": "(Optional, Integer) The ID of the virtual instance.     **NOTE**: Conflicts with `hardware_instance_id`.",
          "args": []
        },
        {
          "name": "hardware_instance_id",
          "description": "(Optional, Integer) The ID of the hardware instance.     **NOTE**: Conflicts with `virtual_instance_id`.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of strings) Tags associated with the storage EVault instance.     **NOTE**: `Tags` are managed locally and not stored on the IBM Cloud Service Endpoint at this moment.",
          "args": []
        }
      ],
      "attrs": []
    },
    "ibm_storage_file": {
      "name": "ibm_storage_file",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure resources",
      "args": [
        {
          "name": "type",
          "description": "(Required, String) The type of the storage. Accepted values are `Endurance` and `Performance`",
          "args": []
        },
        {
          "name": "datacenter",
          "description": "(Required, String) The data center where you want to provision the file storage instance.",
          "args": []
        },
        {
          "name": "capacity",
          "description": "(Required, Integer) The amount of storage capacity that you want to allocate, expressed in gigabytes.",
          "args": []
        },
        {
          "name": "iops",
          "description": "(Required, Float) The IOPS value for the storage instance. For supported values, see [Provisioning](/docs/FileStorage?topic=FileStorage-getting-started#provconsiderations).",
          "args": []
        },
        {
          "name": "snapshot_capacity",
          "description": "(Optional, Integer) The amount of snapshot capacity that you want to allocate, expressed in gigabytes.",
          "args": []
        },
        {
          "name": "allowed_virtual_guest_ids",
          "description": "(Optional, Array of integers) The virtual guests that you want to give access to this instance. Virtual guests must be in the same data center as the block storage. You can also use this field to import the list of virtual guests that have access to this storage from the `block_storage_ids` argument in the `ibm_compute_vm_instance` resource.",
          "args": []
        },
        {
          "name": "allowed_hardware_ids",
          "description": "(Optional, Array of integers) The Bare Metal servers that you want to give access to this instance. Bare Metal servers must be in the same data center as the block storage. You can also use this field to import the list of Bare Metal servers that have access to this storage from the `block_storage_ids` argument in the `ibm_compute_bare_metal` resource.",
          "args": []
        },
        {
          "name": "allowed_subnets",
          "description": "(Optional, Array of integers) The subnets that you want to give access to this instance. Subnets must be in the same data center as the block storage.",
          "args": []
        },
        {
          "name": "allowed_ip_addresses",
          "description": "(Optional, Array of strings) The IP addresses that you want to allow. IP addresses must be in the same data center as the block storage.",
          "args": []
        },
        {
          "name": "snapshot_schedule",
          "description": "(Optional, Array) Applies only to Endurance storage. Specifies the parameters required for a snapshot schedule.",
          "args": [
            {
              "name": "schedule_type",
              "description": "(Optional, String) The snapshot schedule type. Accepted values are `HOURLY`, `WEEKLY`, and `DAILY`.",
              "args": []
            },
            {
              "name": "retention_count",
              "description": "(Optional, Integer) The retention count for a snapshot schedule. Required for all types of `schedule_type`.",
              "args": []
            },
            {
              "name": "minute",
              "description": "(Optional, Integer) The minute for a snapshot schedule. Required for all types of `schedule_type`.",
              "args": []
            },
            {
              "name": "hour",
              "description": "(Optional, Integer) The hour for a snapshot schedule. Required if `schedule_type` is set to `DAILY` or `WEEKLY`.",
              "args": []
            },
            {
              "name": "day_of_week",
              "description": "(Optional, String) The day of the week for a snapshot schedule. Required if the `schedule_type` is set to `WEEKLY`.",
              "args": []
            },
            {
              "name": "enable",
              "description": "(Optional, Boolean) Whether to disable an existing snapshot schedule.",
              "args": []
            }
          ]
        },
        {
          "name": "notes",
          "description": "(Optional, String) Descriptive text to associate with the file storage.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Arrays of Strings) Tags associated with the file storage instance.     **NOTE**: `Tags` are managed locally and not stored on the IBM Cloud Service Endpoint at this moment.",
          "args": []
        },
        {
          "name": "hourly_billing",
          "description": "(Optional, Boolean) Set true to enable hourly billing. Default is false.   **NOTE**: `Hourly billing` is only available in updated data centers with improved capabilities. Refer to the [link](/docs/FileStorage?topic=FileStorage-selectDC) to get the updated list of data centers.",
          "args": []
        }
      ],
      "attrs": []
    },
    "ibm_subnet": {
      "name": "ibm_subnet",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Classic infrastructure resources",
      "args": [
        {
          "name": "private",
          "description": "(Optional, Boolean) Specifies whether the network is public or private.",
          "args": []
        },
        {
          "name": "type",
          "description": "(Required, String) The type of the subnet. Accepted values are `portable` and `static`.",
          "args": []
        },
        {
          "name": "ip_version",
          "description": "(Optional, Integer) The IP version of the subnet. Accepted values are 4 and 6.",
          "args": []
        },
        {
          "name": "capacity",
          "description": "(Required, Integer) The size of the subnet. <ul><li>Accepted values for a public portable IPv4 subnet are 4, 8, 16, and 32. </li><li> Accepted values for a private portable IPv4 subnet are 4, 8, 16, 32, and 64. </li><li>Accepted values for a public static IPv4 subnet are 1, 2, 4, 8, 16, and 32. </li><li>Accepted value for a public portable IPv6 subnet is 64. A /64 block is created and 2^64 IP addresses are provided. </li><li>Accepted value for a public static IPv6 subnet is 64. A /64 block is created and 2^64 IP addresses are provided.</li></ul>",
          "args": []
        },
        {
          "name": "vlan_id",
          "description": "(Optional, Integer) The VLAN ID for portable subnet. You can configure both public and private VLAN ID. You can find accepted values in the [SoftLayer VLAN documentation](https://cloud.ibm.com/classic/network/vlans) by clicking the VLAN that you want and noting the ID in the resulting URL. You can also refer to a VLAN name by using a data source.",
          "args": []
        },
        {
          "name": "endpoint_ip",
          "description": "(Optional, String) The target primary IP address for a static subnet. Only public IP addresses of virtual servers, Bare Metal servers, and `NetscalerVPXs` can be configured as an `endpoint_ip`. The `static subnet` will be created on the VLAN where the `endpoint_ip` is located.",
          "args": []
        },
        {
          "name": "notes",
          "description": "(Optional, String) Descriptive text or comments about the subnet.",
          "args": []
        },
        {
          "name": "tags",
          "description": "(Optional, Array of Strings) Tags associated with the subnet instance.     **NOTE**: `Tags` are managed locally and not stored on the IBM Cloud Service Endpoint at this moment.",
          "args": []
        }
      ],
      "attrs": []
    },
    "ibm_tg_connection": {
      "name": "ibm_tg_connection",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Transit Gateway resources",
      "args": [
        {
          "name": "gateway",
          "description": "(Required, String) Enter the transit gateway identifier.",
          "args": []
        },
        {
          "name": "name",
          "description": "(Optional, String) Enter a name. If unentered, the default name is provided based on the network type, such as `vpc` for network type VPC and `classic` for network type classic.",
          "args": []
        },
        {
          "name": "network_account_id",
          "description": "(Optional, String) The ID of the network connected account. This is used if the network is in a different account than the gateway.",
          "args": []
        },
        {
          "name": "network_type",
          "description": "(Required, String) Enter the network type. Allowed values are `classic` and `vpc`.",
          "args": []
        },
        {
          "name": "network_id",
          "description": "(Optional, String) Enter the ID of the network being connected through this connection. This parameter is required for network type `vpc`, the CRN of the VPC to be connected. This field is required to be unspecified for network type `classic`. For example, `crn:v1:bluemix:public:is:us-south:a/123456::vpc:4727d842-f94f-4a2d-824a-9bc9b02c523b`",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the gateway ID or connection ID resource.",
          "args": []
        },
        {
          "name": "connection_id",
          "description": "The unique identifier for transit gateway connection to network.",
          "args": []
        },
        {
          "name": "created_at",
          "description": "The date and time the connection was created.",
          "args": []
        },
        {
          "name": "updated_at",
          "description": "Last updated date and time of the connection.",
          "args": []
        },
        {
          "name": "status",
          "description": "The configuration status of the connection, such as **attached**, **failed**, **pending**, **deleting**.",
          "args": []
        }
      ]
    },
    "ibm_tg_gateway": {
      "name": "ibm_tg_gateway",
      "type": "resource",
      "url": "https://cloud.ibm.com/docs/terraform?topic=terraform-provider-changelog",
      "groupName": "Transit Gateway resources",
      "args": [
        {
          "name": "name",
          "description": "(Required, String) The unique user-defined name for the gateway. For example, `myGateway`",
          "args": []
        },
        {
          "name": "location",
          "description": "(Optional, Integer) The location of the transit gateway. For example, `us-south`",
          "args": []
        },
        {
          "name": "global",
          "description": "(Required, Boolean) The gateways with global routing (true) to connect to the networks outside their associated region.",
          "args": []
        },
        {
          "name": "resource_group",
          "description": "(Optional, String) The resource group ID where the transit gateway to be created.",
          "args": []
        }
      ],
      "attrs": [
        {
          "name": "id",
          "description": "The unique identifier of the gateway ID or connection ID resource.",
          "args": []
        },
        {
          "name": "crn",
          "description": "The CRN of the gateway.",
          "args": []
        },
        {
          "name": "created_at",
          "description": "The date and time the connection is created.",
          "args": []
        },
        {
          "name": "updated_at",
          "description": "The date and time the connection is last updated.",
          "args": []
        },
        {
          "name": "status",
          "description": "The configuration status of the connection, such as **Available**, **pending**.",
          "args": []
        }
      ]
    }
  }
}